(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    299445,       6053]
NotebookOptionsPosition[    292331,       5917]
NotebookOutlinePosition[    292755,       5934]
CellTagsIndexPosition[    292712,       5931]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Machine learning on appendicitis dataset", "Title",
 CellChangeTimes->{{3.6991865183009653`*^9, 
  3.699186531443468*^9}},ExpressionUUID->"a39e519a-5a90-4c1d-ab0b-\
630a814b6fff"],

Cell[CellGroupData[{

Cell["Import", "Section",
 CellChangeTimes->{{3.6991865337158647`*^9, 3.699186535650812*^9}, {
  3.6991865711091633`*^9, 
  3.6991865725102234`*^9}},ExpressionUUID->"ed1b4a4a-12a0-4002-9a5e-\
71c0060f10aa"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SetDirectory", "[", 
  RowBox[{"NotebookDirectory", "[", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.6991865747983184`*^9, 
  3.699186583692235*^9}},ExpressionUUID->"a6645c9a-5d84-4fe9-a095-\
436f6c1715f1"],

Cell[BoxData["\<\"C:\\\\Users\\\\juank\\\\OneDrive\\\\Research\\\\Machine \
Learning\\\\Appendicitis\"\>"], "Output",
 CellChangeTimes->{
  3.699260010096079*^9},ExpressionUUID->"a74b0977-b34c-4ecc-8130-\
afdfc9c54e7f"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"SemanticImport", "[", "\"\<Machine learning.csv\>\"", "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.6991865881175766`*^9, 3.6991866195691357`*^9}, {
  3.6992527521237326`*^9, 3.699252755787924*^9}, {3.699253828059168*^9, 
  3.6992538305069942`*^9}},ExpressionUUID->"c04ab89a-607d-4a0c-95d3-\
33de5794e72e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"data", "\[LeftDoubleBracket]", 
  RowBox[{";;", "5"}], "\[RightDoubleBracket]"}]], "Input",
 CellChangeTimes->{{3.699186622426618*^9, 
  3.6991866303241177`*^9}},ExpressionUUID->"427c562b-eab8-4389-aaf5-\
5e5dc8c10508"],

Cell[BoxData[
 TemplateBox[{
   TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 5, "Length" -> 5, "InitialType" -> TypeSystem`Vector[
          
          TypeSystem`Struct[{
           "MOP", "Anorexia", "NV", "RLQP", "Rebound", "HR", "Temp", "WCC", 
            "Histo"}, {
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Integer]}], 5], "Shape" -> 
        TypeSystem`PackageScope`HeaderShape[
          
          Association[{All, "MOP"} -> 1, {All, "Anorexia"} -> 1, {All, "NV"} -> 
           1, {All, "RLQP"} -> 1, {All, "Rebound"} -> 1, {All, "HR"} -> 
           1, {All, "Temp"} -> 1, {All, "WCC"} -> 1, {All, "Histo"} -> 1], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`RowShape[
             Association[
             "MOP" -> TypeSystem`PackageScope`AtomShape[34], "Anorexia" -> 
              TypeSystem`PackageScope`AtomShape[34], "NV" -> 
              TypeSystem`PackageScope`AtomShape[34], "RLQP" -> 
              TypeSystem`PackageScope`AtomShape[34], "Rebound" -> 
              TypeSystem`PackageScope`AtomShape[34], "HR" -> 
              TypeSystem`PackageScope`AtomShape[60], "Temp" -> 
              TypeSystem`PackageScope`AtomShape[60], "WCC" -> 
              TypeSystem`PackageScope`AtomShape[60], "Histo" -> 
              TypeSystem`PackageScope`AtomShape[34]]]], 5, {}]], 
        "InitialData" -> TypeSystem`PackageScope`CacheHandle[582832009], 
        "Type" -> TypeSystem`Vector[
          
          TypeSystem`Struct[{
           "MOP", "Anorexia", "NV", "RLQP", "Rebound", "HR", "Temp", "WCC", 
            "Histo"}, {
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Integer]}], 5], "HandleQ" -> True, "RowTarget" -> 
        20, "Data" -> TypeSystem`PackageScope`CacheHandle[582832009]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"MOP\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"MOP\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 849211346][{
                    All, "MOP"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[849211346][
                  GeneralUtilities`Slice[All, "MOP"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Anorexia\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Anorexia\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 849211346][{
                    All, "Anorexia"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[849211346][
                  GeneralUtilities`Slice[All, "Anorexia"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"NV\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"NV\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 849211346][{
                    All, "NV"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[849211346][
                  GeneralUtilities`Slice[All, "NV"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"RLQP\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"RLQP\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 849211346][{
                    All, "RLQP"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[849211346][
                  GeneralUtilities`Slice[All, "RLQP"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Rebound\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Rebound\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 849211346][{
                    All, "Rebound"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[849211346][
                  GeneralUtilities`Slice[All, "Rebound"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"HR\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"HR\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 849211346][{
                    All, "HR"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[849211346][
                  GeneralUtilities`Slice[All, "HR"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Temp\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Temp\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 849211346][{
                    All, "Temp"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[849211346][
                  GeneralUtilities`Slice[All, "Temp"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"WCC\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"WCC\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 849211346][{
                    All, "WCC"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[849211346][
                  GeneralUtilities`Slice[All, "WCC"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Histo\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Histo\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 849211346][{
                    All, "Histo"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[849211346][
                  GeneralUtilities`Slice[All, "Histo"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[849211346][
                  GeneralUtilities`Slice[1, 
                   Key["MOP"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[849211346][
                  GeneralUtilities`Slice[1, 
                   Key["Anorexia"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[849211346][
                  GeneralUtilities`Slice[1, 
                   Key["NV"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[849211346][
                  GeneralUtilities`Slice[1, 
                   Key["RLQP"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[849211346][
                  GeneralUtilities`Slice[1, 
                   Key["Rebound"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.6875"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[849211346][
                  GeneralUtilities`Slice[1, 
                   Key["HR"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.959799"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[849211346][
                  GeneralUtilities`Slice[1, 
                   Key["Temp"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.430305"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[849211346][
                  GeneralUtilities`Slice[1, 
                   Key["WCC"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[849211346][
                  GeneralUtilities`Slice[1, 
                   Key["Histo"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[849211346][
                  GeneralUtilities`Slice[2, 
                   Key["MOP"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[849211346][
                  GeneralUtilities`Slice[2, 
                   Key["Anorexia"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[849211346][
                  GeneralUtilities`Slice[2, 
                   Key["NV"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[849211346][
                  GeneralUtilities`Slice[2, 
                   Key["RLQP"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[849211346][
                  GeneralUtilities`Slice[2, 
                   Key["Rebound"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.763889"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[849211346][
                  GeneralUtilities`Slice[2, 
                   Key["HR"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.929648"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[849211346][
                  GeneralUtilities`Slice[2, 
                   Key["Temp"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.503862"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[849211346][
                  GeneralUtilities`Slice[2, 
                   Key["WCC"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[849211346][
                  GeneralUtilities`Slice[2, 
                   Key["Histo"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[849211346][
                  GeneralUtilities`Slice[3, 
                   Key["MOP"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[849211346][
                  GeneralUtilities`Slice[3, 
                   Key["Anorexia"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[849211346][
                  GeneralUtilities`Slice[3, 
                   Key["NV"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[849211346][
                  GeneralUtilities`Slice[3, 
                   Key["RLQP"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[849211346][
                  GeneralUtilities`Slice[3, 
                   Key["Rebound"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.694444"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[849211346][
                  GeneralUtilities`Slice[3, 
                   Key["HR"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.904523"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[849211346][
                  GeneralUtilities`Slice[3, 
                   Key["Temp"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.174697"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[849211346][
                  GeneralUtilities`Slice[3, 
                   Key["WCC"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[849211346][
                  GeneralUtilities`Slice[3, 
                   Key["Histo"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[849211346][
                  GeneralUtilities`Slice[4, 
                   Key["MOP"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[849211346][
                  GeneralUtilities`Slice[4, 
                   Key["Anorexia"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[849211346][
                  GeneralUtilities`Slice[4, 
                   Key["NV"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[849211346][
                  GeneralUtilities`Slice[4, 
                   Key["RLQP"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[849211346][
                  GeneralUtilities`Slice[4, 
                   Key["Rebound"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.861111"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[849211346][
                  GeneralUtilities`Slice[4, 
                   Key["HR"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.964824"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[849211346][
                  GeneralUtilities`Slice[4, 
                   Key["Temp"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.294226"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[849211346][
                  GeneralUtilities`Slice[4, 
                   Key["WCC"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[849211346][
                  GeneralUtilities`Slice[4, 
                   Key["Histo"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[849211346][
                  GeneralUtilities`Slice[5, 
                   Key["MOP"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[849211346][
                  GeneralUtilities`Slice[5, 
                   Key["Anorexia"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[849211346][
                  GeneralUtilities`Slice[5, 
                   Key["NV"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[849211346][
                  GeneralUtilities`Slice[5, 
                   Key["RLQP"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[849211346][
                  GeneralUtilities`Slice[5, 
                   Key["Rebound"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.506944"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[849211346][
                  GeneralUtilities`Slice[5, 
                   Key["HR"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.954774"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[849211346][
                  GeneralUtilities`Slice[5, 
                   Key["Temp"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.367782"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[849211346][
                  GeneralUtilities`Slice[5, 
                   Key["WCC"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[849211346][
                  GeneralUtilities`Slice[5, 
                   Key["Histo"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 849211346][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        Initialization :> If[
          Not[$CloudEvaluation], 
          TypeSystem`NestedGrid`PackagePrivate`attachScrollbar[
          TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$]], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
         TypeSystem`PackageScope`Pathbar[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, 
          TypeSystem`NestedGrid`PackagePrivate`updateState[
          TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
           TypeSystem`NestedGrid`PackagePrivate`$grid$$, 849211346]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[849211346][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[849211346][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
         TypeSystem`NestedGrid`PackagePrivate`shiftRight[{
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`$state$$], 
         TypeSystem`NestedGrid`PackagePrivate`shiftRight[{
          TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
           TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`$state$$]], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {725., {109.7010498046875, 118.2989501953125}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 CellChangeTimes->{
  3.699260025357094*^9},ExpressionUUID->"ef265fae-b29f-4d30-908c-\
490db89fdd3b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Manipulating the data", "Section",
 CellChangeTimes->{{3.6992535672029157`*^9, 
  3.6992535703227706`*^9}},ExpressionUUID->"3b78775c-6879-41a7-bfab-\
e6abd3abb780"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", "data", "]"}]], "Input",
 CellChangeTimes->{{3.6991867832718687`*^9, 
  3.6991867891644635`*^9}},ExpressionUUID->"051413d2-522d-45bf-ab29-\
725d8ef93f60"],

Cell[BoxData["200"], "Output",
 CellChangeTimes->{
  3.6992600757292657`*^9},ExpressionUUID->"443383bb-cbb8-4f70-a0b9-\
40c3855b3fa5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"eightyPercent", "=", 
  RowBox[{"Floor", "[", 
   RowBox[{"0.8", "*", 
    RowBox[{"Length", "[", "data", "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6992444651359816`*^9, 
  3.6992444895238867`*^9}},ExpressionUUID->"e5a3e858-6171-4bd7-823e-\
aa1f057b02f0"],

Cell[BoxData["160"], "Output",
 CellChangeTimes->{
  3.6992601047228193`*^9},ExpressionUUID->"401065ce-a291-4c4c-95fa-\
ccb5c0f226e0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"twentyPercent", "=", 
  RowBox[{
   RowBox[{"Length", "[", "data", "]"}], "-", "eightyPercent"}]}]], "Input",
 CellChangeTimes->{{3.699244493753684*^9, 
  3.6992445095662947`*^9}},ExpressionUUID->"dba74857-2669-4913-afbd-\
55b1d6a4e9b9"],

Cell[BoxData["40"], "Output",
 CellChangeTimes->{
  3.699260117884161*^9},ExpressionUUID->"dcb6cc4a-8807-462f-abb0-\
260a91f646d1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"allRows", "=", 
  RowBox[{"Table", "[", 
   RowBox[{"n", ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", 
      RowBox[{"Length", "[", "data", "]"}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6992446763042793`*^9, 
  3.699244701916088*^9}},ExpressionUUID->"ad6412cb-96b3-45de-be57-\
dd1aaf3200e7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", 
   ",", "9", ",", "10", ",", "11", ",", "12", ",", "13", ",", "14", ",", "15",
    ",", "16", ",", "17", ",", "18", ",", "19", ",", "20", ",", "21", ",", 
   "22", ",", "23", ",", "24", ",", "25", ",", "26", ",", "27", ",", "28", 
   ",", "29", ",", "30", ",", "31", ",", "32", ",", "33", ",", "34", ",", 
   "35", ",", "36", ",", "37", ",", "38", ",", "39", ",", "40", ",", "41", 
   ",", "42", ",", "43", ",", "44", ",", "45", ",", "46", ",", "47", ",", 
   "48", ",", "49", ",", "50", ",", "51", ",", "52", ",", "53", ",", "54", 
   ",", "55", ",", "56", ",", "57", ",", "58", ",", "59", ",", "60", ",", 
   "61", ",", "62", ",", "63", ",", "64", ",", "65", ",", "66", ",", "67", 
   ",", "68", ",", "69", ",", "70", ",", "71", ",", "72", ",", "73", ",", 
   "74", ",", "75", ",", "76", ",", "77", ",", "78", ",", "79", ",", "80", 
   ",", "81", ",", "82", ",", "83", ",", "84", ",", "85", ",", "86", ",", 
   "87", ",", "88", ",", "89", ",", "90", ",", "91", ",", "92", ",", "93", 
   ",", "94", ",", "95", ",", "96", ",", "97", ",", "98", ",", "99", ",", 
   "100", ",", "101", ",", "102", ",", "103", ",", "104", ",", "105", ",", 
   "106", ",", "107", ",", "108", ",", "109", ",", "110", ",", "111", ",", 
   "112", ",", "113", ",", "114", ",", "115", ",", "116", ",", "117", ",", 
   "118", ",", "119", ",", "120", ",", "121", ",", "122", ",", "123", ",", 
   "124", ",", "125", ",", "126", ",", "127", ",", "128", ",", "129", ",", 
   "130", ",", "131", ",", "132", ",", "133", ",", "134", ",", "135", ",", 
   "136", ",", "137", ",", "138", ",", "139", ",", "140", ",", "141", ",", 
   "142", ",", "143", ",", "144", ",", "145", ",", "146", ",", "147", ",", 
   "148", ",", "149", ",", "150", ",", "151", ",", "152", ",", "153", ",", 
   "154", ",", "155", ",", "156", ",", "157", ",", "158", ",", "159", ",", 
   "160", ",", "161", ",", "162", ",", "163", ",", "164", ",", "165", ",", 
   "166", ",", "167", ",", "168", ",", "169", ",", "170", ",", "171", ",", 
   "172", ",", "173", ",", "174", ",", "175", ",", "176", ",", "177", ",", 
   "178", ",", "179", ",", "180", ",", "181", ",", "182", ",", "183", ",", 
   "184", ",", "185", ",", "186", ",", "187", ",", "188", ",", "189", ",", 
   "190", ",", "191", ",", "192", ",", "193", ",", "194", ",", "195", ",", 
   "196", ",", "197", ",", "198", ",", "199", ",", "200"}], "}"}]], "Output",
 CellChangeTimes->{
  3.699260136329437*^9},ExpressionUUID->"a69415d9-45a5-47e1-99b5-\
37a573e08742"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"randomRows", "=", 
  RowBox[{"RandomSample", "[", 
   RowBox[{
    RowBox[{"Range", "[", 
     RowBox[{"Length", "[", "data", "]"}], "]"}], ",", "eightyPercent"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.699244404568895*^9, 3.6992444471229362`*^9}, {
  3.699244521890458*^9, 
  3.6992445259156294`*^9}},ExpressionUUID->"22e9f135-566a-4732-87e4-\
14b8820b0422"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "68", ",", "12", ",", "180", ",", "48", ",", "174", ",", "105", ",", "53", 
   ",", "41", ",", "169", ",", "100", ",", "42", ",", "89", ",", "94", ",", 
   "50", ",", "54", ",", "195", ",", "120", ",", "172", ",", "6", ",", "85", 
   ",", "197", ",", "191", ",", "1", ",", "112", ",", "91", ",", "178", ",", 
   "22", ",", "31", ",", "10", ",", "38", ",", "79", ",", "117", ",", "76", 
   ",", "111", ",", "32", ",", "152", ",", "4", ",", "137", ",", "125", ",", 
   "135", ",", "192", ",", "9", ",", "56", ",", "164", ",", "140", ",", "188",
    ",", "52", ",", "27", ",", "115", ",", "145", ",", "72", ",", "171", ",", 
   "126", ",", "87", ",", "173", ",", "138", ",", "3", ",", "78", ",", "157", 
   ",", "28", ",", "151", ",", "108", ",", "16", ",", "97", ",", "123", ",", 
   "66", ",", "139", ",", "49", ",", "128", ",", "186", ",", "159", ",", 
   "101", ",", "118", ",", "102", ",", "67", ",", "130", ",", "80", ",", "60",
    ",", "190", ",", "23", ",", "103", ",", "146", ",", "93", ",", "46", ",", 
   "200", ",", "17", ",", "199", ",", "150", ",", "88", ",", "83", ",", "124",
    ",", "179", ",", "133", ",", "104", ",", "109", ",", "13", ",", "142", 
   ",", "134", ",", "119", ",", "160", ",", "110", ",", "26", ",", "147", ",",
    "44", ",", "81", ",", "96", ",", "113", ",", "47", ",", "99", ",", "69", 
   ",", "158", ",", "98", ",", "95", ",", "163", ",", "114", ",", "14", ",", 
   "148", ",", "198", ",", "167", ",", "29", ",", "39", ",", "2", ",", "161", 
   ",", "92", ",", "170", ",", "144", ",", "185", ",", "154", ",", "75", ",", 
   "153", ",", "33", ",", "196", ",", "82", ",", "166", ",", "8", ",", "162", 
   ",", "156", ",", "122", ",", "129", ",", "20", ",", "18", ",", "131", ",", 
   "168", ",", "84", ",", "189", ",", "5", ",", "19", ",", "90", ",", "36", 
   ",", "7", ",", "86", ",", "43", ",", "182", ",", "183", ",", "107", ",", 
   "55", ",", "63", ",", "116", ",", "127", ",", "61"}], "}"}]], "Output",
 CellChangeTimes->{
  3.6992601753299384`*^9},ExpressionUUID->"0260bc82-73f2-4872-81de-\
613d288078d8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"randomRowsSelect", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "randomRows", "\[LeftDoubleBracket]", "n", "\[RightDoubleBracket]"}], 
     "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", 
      RowBox[{"Length", "[", "randomRows", "]"}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6992445341552887`*^9, 
  3.699244618242346*^9}},ExpressionUUID->"82368fe3-6ecf-4426-a14a-\
c941c314f3d5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "68", "}"}], ",", 
   RowBox[{"{", "12", "}"}], ",", 
   RowBox[{"{", "180", "}"}], ",", 
   RowBox[{"{", "48", "}"}], ",", 
   RowBox[{"{", "174", "}"}], ",", 
   RowBox[{"{", "105", "}"}], ",", 
   RowBox[{"{", "53", "}"}], ",", 
   RowBox[{"{", "41", "}"}], ",", 
   RowBox[{"{", "169", "}"}], ",", 
   RowBox[{"{", "100", "}"}], ",", 
   RowBox[{"{", "42", "}"}], ",", 
   RowBox[{"{", "89", "}"}], ",", 
   RowBox[{"{", "94", "}"}], ",", 
   RowBox[{"{", "50", "}"}], ",", 
   RowBox[{"{", "54", "}"}], ",", 
   RowBox[{"{", "195", "}"}], ",", 
   RowBox[{"{", "120", "}"}], ",", 
   RowBox[{"{", "172", "}"}], ",", 
   RowBox[{"{", "6", "}"}], ",", 
   RowBox[{"{", "85", "}"}], ",", 
   RowBox[{"{", "197", "}"}], ",", 
   RowBox[{"{", "191", "}"}], ",", 
   RowBox[{"{", "1", "}"}], ",", 
   RowBox[{"{", "112", "}"}], ",", 
   RowBox[{"{", "91", "}"}], ",", 
   RowBox[{"{", "178", "}"}], ",", 
   RowBox[{"{", "22", "}"}], ",", 
   RowBox[{"{", "31", "}"}], ",", 
   RowBox[{"{", "10", "}"}], ",", 
   RowBox[{"{", "38", "}"}], ",", 
   RowBox[{"{", "79", "}"}], ",", 
   RowBox[{"{", "117", "}"}], ",", 
   RowBox[{"{", "76", "}"}], ",", 
   RowBox[{"{", "111", "}"}], ",", 
   RowBox[{"{", "32", "}"}], ",", 
   RowBox[{"{", "152", "}"}], ",", 
   RowBox[{"{", "4", "}"}], ",", 
   RowBox[{"{", "137", "}"}], ",", 
   RowBox[{"{", "125", "}"}], ",", 
   RowBox[{"{", "135", "}"}], ",", 
   RowBox[{"{", "192", "}"}], ",", 
   RowBox[{"{", "9", "}"}], ",", 
   RowBox[{"{", "56", "}"}], ",", 
   RowBox[{"{", "164", "}"}], ",", 
   RowBox[{"{", "140", "}"}], ",", 
   RowBox[{"{", "188", "}"}], ",", 
   RowBox[{"{", "52", "}"}], ",", 
   RowBox[{"{", "27", "}"}], ",", 
   RowBox[{"{", "115", "}"}], ",", 
   RowBox[{"{", "145", "}"}], ",", 
   RowBox[{"{", "72", "}"}], ",", 
   RowBox[{"{", "171", "}"}], ",", 
   RowBox[{"{", "126", "}"}], ",", 
   RowBox[{"{", "87", "}"}], ",", 
   RowBox[{"{", "173", "}"}], ",", 
   RowBox[{"{", "138", "}"}], ",", 
   RowBox[{"{", "3", "}"}], ",", 
   RowBox[{"{", "78", "}"}], ",", 
   RowBox[{"{", "157", "}"}], ",", 
   RowBox[{"{", "28", "}"}], ",", 
   RowBox[{"{", "151", "}"}], ",", 
   RowBox[{"{", "108", "}"}], ",", 
   RowBox[{"{", "16", "}"}], ",", 
   RowBox[{"{", "97", "}"}], ",", 
   RowBox[{"{", "123", "}"}], ",", 
   RowBox[{"{", "66", "}"}], ",", 
   RowBox[{"{", "139", "}"}], ",", 
   RowBox[{"{", "49", "}"}], ",", 
   RowBox[{"{", "128", "}"}], ",", 
   RowBox[{"{", "186", "}"}], ",", 
   RowBox[{"{", "159", "}"}], ",", 
   RowBox[{"{", "101", "}"}], ",", 
   RowBox[{"{", "118", "}"}], ",", 
   RowBox[{"{", "102", "}"}], ",", 
   RowBox[{"{", "67", "}"}], ",", 
   RowBox[{"{", "130", "}"}], ",", 
   RowBox[{"{", "80", "}"}], ",", 
   RowBox[{"{", "60", "}"}], ",", 
   RowBox[{"{", "190", "}"}], ",", 
   RowBox[{"{", "23", "}"}], ",", 
   RowBox[{"{", "103", "}"}], ",", 
   RowBox[{"{", "146", "}"}], ",", 
   RowBox[{"{", "93", "}"}], ",", 
   RowBox[{"{", "46", "}"}], ",", 
   RowBox[{"{", "200", "}"}], ",", 
   RowBox[{"{", "17", "}"}], ",", 
   RowBox[{"{", "199", "}"}], ",", 
   RowBox[{"{", "150", "}"}], ",", 
   RowBox[{"{", "88", "}"}], ",", 
   RowBox[{"{", "83", "}"}], ",", 
   RowBox[{"{", "124", "}"}], ",", 
   RowBox[{"{", "179", "}"}], ",", 
   RowBox[{"{", "133", "}"}], ",", 
   RowBox[{"{", "104", "}"}], ",", 
   RowBox[{"{", "109", "}"}], ",", 
   RowBox[{"{", "13", "}"}], ",", 
   RowBox[{"{", "142", "}"}], ",", 
   RowBox[{"{", "134", "}"}], ",", 
   RowBox[{"{", "119", "}"}], ",", 
   RowBox[{"{", "160", "}"}], ",", 
   RowBox[{"{", "110", "}"}], ",", 
   RowBox[{"{", "26", "}"}], ",", 
   RowBox[{"{", "147", "}"}], ",", 
   RowBox[{"{", "44", "}"}], ",", 
   RowBox[{"{", "81", "}"}], ",", 
   RowBox[{"{", "96", "}"}], ",", 
   RowBox[{"{", "113", "}"}], ",", 
   RowBox[{"{", "47", "}"}], ",", 
   RowBox[{"{", "99", "}"}], ",", 
   RowBox[{"{", "69", "}"}], ",", 
   RowBox[{"{", "158", "}"}], ",", 
   RowBox[{"{", "98", "}"}], ",", 
   RowBox[{"{", "95", "}"}], ",", 
   RowBox[{"{", "163", "}"}], ",", 
   RowBox[{"{", "114", "}"}], ",", 
   RowBox[{"{", "14", "}"}], ",", 
   RowBox[{"{", "148", "}"}], ",", 
   RowBox[{"{", "198", "}"}], ",", 
   RowBox[{"{", "167", "}"}], ",", 
   RowBox[{"{", "29", "}"}], ",", 
   RowBox[{"{", "39", "}"}], ",", 
   RowBox[{"{", "2", "}"}], ",", 
   RowBox[{"{", "161", "}"}], ",", 
   RowBox[{"{", "92", "}"}], ",", 
   RowBox[{"{", "170", "}"}], ",", 
   RowBox[{"{", "144", "}"}], ",", 
   RowBox[{"{", "185", "}"}], ",", 
   RowBox[{"{", "154", "}"}], ",", 
   RowBox[{"{", "75", "}"}], ",", 
   RowBox[{"{", "153", "}"}], ",", 
   RowBox[{"{", "33", "}"}], ",", 
   RowBox[{"{", "196", "}"}], ",", 
   RowBox[{"{", "82", "}"}], ",", 
   RowBox[{"{", "166", "}"}], ",", 
   RowBox[{"{", "8", "}"}], ",", 
   RowBox[{"{", "162", "}"}], ",", 
   RowBox[{"{", "156", "}"}], ",", 
   RowBox[{"{", "122", "}"}], ",", 
   RowBox[{"{", "129", "}"}], ",", 
   RowBox[{"{", "20", "}"}], ",", 
   RowBox[{"{", "18", "}"}], ",", 
   RowBox[{"{", "131", "}"}], ",", 
   RowBox[{"{", "168", "}"}], ",", 
   RowBox[{"{", "84", "}"}], ",", 
   RowBox[{"{", "189", "}"}], ",", 
   RowBox[{"{", "5", "}"}], ",", 
   RowBox[{"{", "19", "}"}], ",", 
   RowBox[{"{", "90", "}"}], ",", 
   RowBox[{"{", "36", "}"}], ",", 
   RowBox[{"{", "7", "}"}], ",", 
   RowBox[{"{", "86", "}"}], ",", 
   RowBox[{"{", "43", "}"}], ",", 
   RowBox[{"{", "182", "}"}], ",", 
   RowBox[{"{", "183", "}"}], ",", 
   RowBox[{"{", "107", "}"}], ",", 
   RowBox[{"{", "55", "}"}], ",", 
   RowBox[{"{", "63", "}"}], ",", 
   RowBox[{"{", "116", "}"}], ",", 
   RowBox[{"{", "127", "}"}], ",", 
   RowBox[{"{", "61", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.699260191783905*^9},ExpressionUUID->"22afd9e0-7d4e-4ed4-8e21-\
c69701edcb43"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"randomRowsNot", "=", 
  RowBox[{"Delete", "[", 
   RowBox[{"allRows", ",", "randomRowsSelect"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6992446355863986`*^9, 3.6992446646807795`*^9}, {
  3.6992447084585867`*^9, 3.699244717771354*^9}, {3.69924493553083*^9, 
  3.6992449362623043`*^9}},ExpressionUUID->"8adcc97e-c59c-4173-8c23-\
5b3eeb749bb5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "11", ",", "15", ",", "21", ",", "24", ",", "25", ",", "30", ",", "34", ",",
    "35", ",", "37", ",", "40", ",", "45", ",", "51", ",", "57", ",", "58", 
   ",", "59", ",", "62", ",", "64", ",", "65", ",", "70", ",", "71", ",", 
   "73", ",", "74", ",", "77", ",", "106", ",", "121", ",", "132", ",", "136",
    ",", "141", ",", "143", ",", "149", ",", "155", ",", "165", ",", "175", 
   ",", "176", ",", "177", ",", "181", ",", "184", ",", "187", ",", "193", 
   ",", "194"}], "}"}]], "Output",
 CellChangeTimes->{
  3.6992602410115542`*^9},ExpressionUUID->"6200ff54-ed3d-472e-90ee-\
b2112aacd29b"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"dataTrain", "=", 
   RowBox[{
   "data", "\[LeftDoubleBracket]", "randomRows", "\[RightDoubleBracket]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dataTest", "=", 
   RowBox[{
   "data", "\[LeftDoubleBracket]", "randomRowsNot", 
    "\[RightDoubleBracket]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.699186795979218*^9, 3.699186832338765*^9}, {
  3.699187213379732*^9, 3.6991872137170067`*^9}, {3.6992450126185503`*^9, 
  3.699245067594735*^9}, {3.699245186770255*^9, 
  3.699245205346619*^9}},ExpressionUUID->"efee8388-c808-4fce-a7ab-\
33d77f30d111"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dataTestModel", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"dataTest", "\[LeftDoubleBracket]", 
        RowBox[{"n", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
       RowBox[{"dataTest", "\[LeftDoubleBracket]", 
        RowBox[{"n", ",", "2"}], "\[RightDoubleBracket]"}], ",", 
       RowBox[{"dataTest", "\[LeftDoubleBracket]", 
        RowBox[{"n", ",", "3"}], "\[RightDoubleBracket]"}], ",", 
       RowBox[{"dataTest", "\[LeftDoubleBracket]", 
        RowBox[{"n", ",", "4"}], "\[RightDoubleBracket]"}], ",", 
       RowBox[{"dataTest", "\[LeftDoubleBracket]", 
        RowBox[{"n", ",", "5"}], "\[RightDoubleBracket]"}], ",", 
       RowBox[{"dataTest", "\[LeftDoubleBracket]", 
        RowBox[{"n", ",", "6"}], "\[RightDoubleBracket]"}], ",", 
       RowBox[{"dataTest", "\[LeftDoubleBracket]", 
        RowBox[{"n", ",", "7"}], "\[RightDoubleBracket]"}], ",", 
       RowBox[{"dataTest", "\[LeftDoubleBracket]", 
        RowBox[{"n", ",", "8"}], "\[RightDoubleBracket]"}]}], "}"}], 
     "\[Rule]", 
     RowBox[{"dataTest", "\[LeftDoubleBracket]", 
      RowBox[{"n", ",", "9"}], "\[RightDoubleBracket]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "1", ",", 
      RowBox[{"Length", "[", "dataTest", "]"}]}], "}"}]}], "]"}]}]], "Input",E\
xpressionUUID->"bbf88d1f-23c5-4283-803e-3714e66df86e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "0", ",", "1", ",", "1", ",", "1", ",", "0", ",", "0.555555556`", ",", 
      "0.904522613`", ",", "0.257447591`"}], "}"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "0", ",", "0", ",", "1", ",", "1", ",", "1", ",", "0.833333333`", ",", 
      "0.962311558`", ",", "0.290547996`"}], "}"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0.486111111`", ",", 
      "0.957286432`", ",", "0.169179846`"}], "}"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "1", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0.541666667`", ",", 
      "0.922110553`", ",", "0.36410445`"}], "}"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0.506944444`", ",", 
      "0.942211055`", ",", "0.250091946`"}], "}"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0.5`", ",", 
      "0.91959799`", ",", "0.228025009`"}], "}"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0.527777778`", ",", 
      "0.929648241`", ",", "0.316292755`"}], "}"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0.541666667`", ",", 
      "0.972361809`", ",", "0.139757264`"}], "}"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0.618055556`", ",", 
      "0.93718593`", ",", "0.371460096`"}], "}"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0.513888889`", ",", 
      "0.912060302`", ",", "0.294225818`"}], "}"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0.548611111`", ",", 
      "0.944723618`", ",", "0.327326223`"}], "}"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0.534722222`", ",", 
      "0.859296482`", ",", "0.514895182`"}], "}"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "0", ",", "1", ",", "1", ",", "0", ",", "0", ",", "0.604166667`", ",", 
      "0.917085427`", ",", "0.290547996`"}], "}"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0.5625`", ",", 
      "0.904522613`", ",", "0.261125414`"}], "}"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "0", ",", "0", ",", "1", ",", "1", ",", "0", ",", "0.569444444`", ",", 
      "0.944723618`", ",", "0.360426627`"}], "}"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0.555555556`", ",", 
      "0.826633166`", ",", "0.415593968`"}], "}"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "1", ",", "1", ",", "1", ",", "0", ",", "0", ",", "0.5625`", ",", 
      "0.91959799`", ",", "0.426627437`"}], "}"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "0", ",", "0", ",", "1", ",", "0", ",", "1", ",", "0.569444444`", ",", 
      "0.929648241`", ",", "0.268481059`"}], "}"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0.569444444`", ",", 
      "0.904522613`", ",", "0.246414123`"}], "}"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0.652777778`", ",", 
      "0.904522613`", ",", "0.275836705`"}], "}"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0.555555556`", ",", 
      "0.91959799`", ",", "0.286870173`"}], "}"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0.444444444`", ",", 
      "0.98241206`", ",", "0.275836705`"}], "}"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "0", ",", "0", ",", "1", ",", "1", ",", "0", ",", "0.631944444`", ",", 
      "0.93718593`", ",", "0.228025009`"}], "}"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "0", ",", "1", ",", "0", ",", "1", ",", "1", ",", "0.645833333`", ",", 
      "0.954773869`", ",", "1.`"}], "}"}], "\[Rule]", "1"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "0.520833333`", ",", 
      "0.929648241`", ",", "0.426627437`"}], "}"}], "\[Rule]", "1"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "1", ",", "1", ",", "1", ",", "1", ",", "0", ",", "0.875`", ",", 
      "0.954773869`", ",", "0.441338727`"}], "}"}], "\[Rule]", "1"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "1", ",", "0", ",", "1", ",", "1", ",", "0", ",", "0.555555556`", ",", 
      "0.904522613`", ",", "0.573004781`"}], "}"}], "\[Rule]", "1"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "1", ",", "0", ",", "1", ",", "1", ",", "1", ",", "0.902777778`", ",", 
      "0.93718593`", ",", "0.492828246`"}], "}"}], "\[Rule]", "1"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "1", ",", "0", ",", "1", ",", "1", ",", "0", ",", "0.625`", ",", 
      "0.904522613`", ",", "0.532548731`"}], "}"}], "\[Rule]", "1"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "0", ",", "1", ",", "1", ",", "1", ",", "1", ",", "0.451388889`", ",", 
      "0.904522613`", ",", "0.522250828`"}], "}"}], "\[Rule]", "1"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "0", ",", "1", ",", "1", ",", "1", ",", "1", ",", "0.5625`", ",", 
      "0.904522613`", ",", "0.330636263`"}], "}"}], "\[Rule]", "1"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "0", ",", "1", ",", "1", ",", "1", ",", "1", ",", "0.694444444`", ",", 
      "0.969849246`", ",", "0.891504229`"}], "}"}], "\[Rule]", "1"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "0.902777778`", ",", 
      "0.944723618`", ",", "0.474439132`"}], "}"}], "\[Rule]", "1"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "0.840277778`", ",", 
      "0.964824121`", ",", "0.963221773`"}], "}"}], "\[Rule]", "1"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "0.944444444`", ",", 
      "0.974874372`", ",", "0.484001471`"}], "}"}], "\[Rule]", "1"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "0.694444444`", ",", 
      "0.954773869`", ",", "0.456050018`"}], "}"}], "\[Rule]", "1"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "1", ",", "1", ",", "1", ",", "1", ",", "0", ",", "0.763888889`", ",", 
      "0.954773869`", ",", "0.446119897`"}], "}"}], "\[Rule]", "1"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "0.833333333`", ",", 
      "0.954773869`", ",", "0.4336153`"}], "}"}], "\[Rule]", "1"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "0", ",", "1", ",", "0", ",", "1", ",", "1", ",", "0.763888889`", ",", 
      "0.989949749`", ",", "0.502758367`"}], "}"}], "\[Rule]", "1"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "0", ",", "1", ",", "1", ",", "1", ",", "1", ",", "0.861111111`", ",", 
      "0.967336683`", ",", "0.464509011`"}], "}"}], "\[Rule]", "1"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.6992602794496307`*^9},ExpressionUUID->"08085abc-140d-4443-9b4d-\
7eb8f352bba4"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Random forest model", "Section",
 CellChangeTimes->{{3.6992535384904165`*^9, 
  3.6992535479863777`*^9}},ExpressionUUID->"6b88ca9f-a9cf-431b-94f1-\
b1028d99d4b9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rfModel", "=", 
  RowBox[{"Classify", "[", 
   RowBox[{
    RowBox[{"dataTrain", "\[Rule]", "\"\<Histo\>\""}], ",", 
    RowBox[{"Method", "\[Rule]", "\"\<RandomForest\>\""}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6991866432225595`*^9, 3.6991866832553945`*^9}, {
  3.6991868386129055`*^9, 
  3.699186841221775*^9}},ExpressionUUID->"4d51f10a-29a9-4e23-9ed6-\
e165b7ff1b32"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["ClassifierFunction", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open$$ = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = True), Appearance -> None,
                 Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 PointSize[0.13], 
                 GrayLevel[0.45], 
                 
                 PointBox[{{0.9821769431797024, -0.440194219686987}, {
                  1.1339776261519132`, 0.8056918676854272}, {
                  0.5279892326667741, 0.6574306661126254}, {
                  0.022147046479890797`, 1.4937877187998898`}}], 
                 GrayLevel[0.7], 
                 
                 PointBox[{{-0.9815166384819979, 
                  0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                 GrayLevel[0.55], 
                 AbsoluteThickness[1.5], 
                 LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
               Axes -> {False, False}, AxesLabel -> {None, None}, 
                AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
               ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"RandomForest\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Number of classes: \"", "SummaryItemAnnotation"],
                    "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 PointSize[0.13], 
                 GrayLevel[0.45], 
                 
                 PointBox[{{0.9821769431797024, -0.440194219686987}, {
                  1.1339776261519132`, 0.8056918676854272}, {
                  0.5279892326667741, 0.6574306661126254}, {
                  0.022147046479890797`, 1.4937877187998898`}}], 
                 GrayLevel[0.7], 
                 
                 PointBox[{{-0.9815166384819979, 
                  0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                 GrayLevel[0.55], 
                 AbsoluteThickness[1.5], 
                 LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
               Axes -> {False, False}, AxesLabel -> {None, None}, 
                AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
               ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"RandomForest\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Number of classes: \"", "SummaryItemAnnotation"],
                    "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Number of features: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["8", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                   TagBox["160", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
        Baseline], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("ClassifierFunction[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.6992603461021442`*^9},ExpressionUUID->"2bc6cab7-9e2c-4afe-a800-\
d7e1eb931f67"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rfModelCM", "=", 
  RowBox[{"ClassifierMeasurements", "[", 
   RowBox[{"rfModel", ",", "dataTestModel"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6991867633336763`*^9, 3.6991867679566736`*^9}, {
  3.699186848969261*^9, 3.6991868784400544`*^9}, {3.6992453284025927`*^9, 
  3.6992453291654973`*^9}},ExpressionUUID->"1adabb5d-eb61-45e0-bbc9-\
5c09e71de3ae"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["ClassifierMeasurementsObject", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open$$ = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = True), Appearance -> None,
                 Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[
               
               RasterBox[{{0.8564437870801482, 0.8967071593761374, 
                0.4746151541446917}, {0.7191592194171378, 0.5062062867304069, 
                0.8158644505878024}, {0.47333333333333333`, 
                0.7727052229508918, 
                0.7191592194171378}}, {{-0.03479955456570183, \
-0.055679287305122394`}, {3.055679287305122, 3.041759465478842}}, {0, 1}], 
               ImagePadding -> 0.2, 
               PlotRange -> {{-0.0625, 3.0625}, {-0.06, 3.06}}, 
               PlotRangePadding -> Automatic, FrameStyle -> Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.7]], Axes -> False, AspectRatio -> 1, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Classifier: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"RandomForest\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Number of test examples: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["40", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[
               
               RasterBox[{{0.8564437870801482, 0.8967071593761374, 
                0.4746151541446917}, {0.7191592194171378, 0.5062062867304069, 
                0.8158644505878024}, {0.47333333333333333`, 
                0.7727052229508918, 
                0.7191592194171378}}, {{-0.03479955456570183, \
-0.055679287305122394`}, {3.055679287305122, 3.041759465478842}}, {0, 1}], 
               ImagePadding -> 0.2, 
               PlotRange -> {{-0.0625, 3.0625}, {-0.06, 3.06}}, 
               PlotRangePadding -> Automatic, FrameStyle -> Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.7]], Axes -> False, AspectRatio -> 1, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Classifier: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"RandomForest\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Number of test examples: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["40", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Number of classes: \"", "SummaryItemAnnotation"],
                    "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Accuracy: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["0.925`", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
        Baseline], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("ClassifierMeasurementsObject[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.699260372983264*^9},ExpressionUUID->"68f662fd-27f5-4bfe-8a11-\
668a481fa314"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rfModelCM", "[", "\"\<Properties\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.69924263483879*^9, 
  3.6992426401890206`*^9}},ExpressionUUID->"d2595f16-9fab-4370-b06a-\
c3f7028297ef"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Accuracy\"\>", ",", "\<\"AccuracyRejectionPlot\"\>", 
   ",", "\<\"ClassRejectionRate\"\>", ",", "\<\"ConfusionFunction\"\>", 
   ",", "\<\"ConfusionMatrix\"\>", ",", "\<\"ConfusionMatrixPlot\"\>", 
   ",", "\<\"Error\"\>", ",", "\<\"FScore\"\>", 
   ",", "\<\"InversePerplexity\"\>", ",", "\<\"Likelihood\"\>", 
   ",", "\<\"LogLikelihood\"\>", ",", "\<\"LogLikelihoodRate\"\>", 
   ",", "\<\"Perplexity\"\>", ",", "\<\"Precision\"\>", 
   ",", "\<\"Properties\"\>", ",", "\<\"Recall\"\>", 
   ",", "\<\"RejectionRate\"\>"}], "}"}]], "Output",
 CellChangeTimes->{
  3.6992603799736395`*^9},ExpressionUUID->"3e99e95a-b1e6-4168-b382-\
611b25718f28"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rfModelCM", "[", "\"\<Accuracy\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.6992426452641077`*^9, 
  3.699242651485309*^9}},ExpressionUUID->"b7c804a5-a126-4112-aae2-\
2a91c1e46031"],

Cell[BoxData["0.925`"], "Output",
 CellChangeTimes->{
  3.6992603869607697`*^9},ExpressionUUID->"760bc4b3-26c1-4cb2-8163-\
6efb8eb9fde1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rfModelCM", "[", "\"\<ConfusionMatrixPlot\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.6992455304194*^9, 
  3.6992455417304354`*^9}},ExpressionUUID->"5bfce924-f878-48ac-8c6f-\
fc2c82776354"],

Cell[BoxData[
 GraphicsBox[
  RasterBox[{{{1., 1., 1.}, {0.8986763776472447, 0.5206522736954526, 
   0.005044619660760679}}, {{1., 0.42, 0.}, {0.9253790867043468, 
   0.8364711415705662, 0.5820321436445746}}}, {{0, 0}, {2, 2}}, {0, 1}],
  Epilog->{{
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["20", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {0.5, 1.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "20", "\" examples of \"", "0", "\" correctly classified\""}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Precision = \"", "0.8695652173913043`"}, 
            "RowDefault"]}, {
           TemplateBox[{"\"Recall = \"", "1.`"}, "RowDefault"]}, {
           
           TemplateBox[{"\"FScore = \"", "0.930232558139535`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{20, " examples of ", 0, " correctly classified"}], 
         Row[{"Precision = ", 0.8695652173913043}], 
         Row[{"Recall = ", 1.}], 
         Row[{"FScore = ", 0.930232558139535}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {0.5, 0.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "1", "\" misclassified as \"", "0"}, 
            "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", 1, " misclassified as ", 0}], 
         Row[{"Row fraction = ", 0.}], 
         Row[{"Column fraction = ", 0.}]}], "Tooltip"]& ]}, {
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["3", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {1.5, 1.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "3", "\" examples of \"", "0", "\" misclassified as \"", "1"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.13043478260869565`"}, 
            "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.15`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{3, " examples of ", 0, " misclassified as ", 1}], 
         Row[{"Row fraction = ", 0.13043478260869565`}], 
         Row[{"Column fraction = ", 0.15}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["17", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {1.5, 0.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "17", "\" examples of \"", "1", "\" correctly classified\""}, 
            "RowDefault"]}, {
           TemplateBox[{"\"Precision = \"", "1.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Recall = \"", "0.85`"}, "RowDefault"]}, {
           TemplateBox[{"\"FScore = \"", "0.9189189189189187`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{17, " examples of ", 1, " correctly classified"}], 
         Row[{"Precision = ", 1.}], 
         Row[{"Recall = ", 0.85}], 
         Row[{"FScore = ", 0.9189189189189187}]}], "Tooltip"]& ]}, 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {2.5, 1.5}, Automatic, {10., 1.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{"23", "\" example\"", "\"s\"", "\" of class \"", "0"}, 
           "RowDefault"]}, {
          
          TemplateBox[{"\"Precision = \"", "0.8695652173913043`"}, 
           "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
        DefaultBaseStyle -> "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{23, " example", "s", " of class ", 0}], 
        Row[{"Precision = ", 0.8695652173913043}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {2.5, 0.5}, Automatic, {10., 1.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{"17", "\" example\"", "\"s\"", "\" of class \"", "1"}, 
           "RowDefault"]}, {
          TemplateBox[{"\"Precision = \"", "1.`"}, "RowDefault"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{17, " example", "s", " of class ", 1}], 
        Row[{"Precision = ", 1.}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {0.5, -0.5}, Automatic, {1., 10.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "20", "\" example\"", "\"s\"", "\" classified as \"", "0"}, 
           "RowDefault"]}, {
          TemplateBox[{"\"Recall = \"", "1.`"}, "RowDefault"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{20, " example", "s", " classified as ", 0}], 
        Row[{"Recall = ", 1.}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {1.5, -0.5}, Automatic, {1., 10.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "20", "\" example\"", "\"s\"", "\" classified as \"", "1"}, 
           "RowDefault"]}, {
          TemplateBox[{"\"Recall = \"", "0.85`"}, "RowDefault"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{20, " example", "s", " classified as ", 1}], 
        Row[{"Recall = ", 0.85}]}], "Tooltip"]& ]},
  Frame->True,
  FrameLabel->{
    FormBox["\"predicted class\"", TraditionalForm], 
    FormBox["\"actual class\"", TraditionalForm]},
  FrameTicks->{{{{1.5, 
       FormBox[
        RotationBox["0", BoxRotation -> 0.], TraditionalForm]}, {0.5, 
       FormBox[
        RotationBox["1", BoxRotation -> 0.], TraditionalForm]}}, {{1.5, 
       FormBox["23", TraditionalForm]}, {0.5, 
       FormBox["17", TraditionalForm]}}}, {{{0.5, 
       FormBox[
        RotationBox["20", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {1.5, 
       FormBox[
        RotationBox["20", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}}, {{0.5, 
       FormBox[
        RotationBox["0", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {1.5, 
       FormBox[
        RotationBox["1", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}}}},
  FrameTicksStyle->12,
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->300,
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultPlotStyle" -> Automatic, "DomainPadding" -> Scaled[0.02], 
    "RangePadding" -> Scaled[0.05]}]], "Output",
 CellChangeTimes->{
  3.6992603991418486`*^9},ExpressionUUID->"cba5b7fc-5bf5-45fe-a96f-\
93999272bf99"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"rfModelCM", "[", "prop", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"prop", ",", 
     RowBox[{"rfModelCM", "[", "\"\<Properties\>\"", "]"}]}], "}"}], ",", 
   RowBox[{"SaveDefinitions", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6992533766671257`*^9, 
  3.6992533987158237`*^9}},ExpressionUUID->"cb70e1ac-01a0-4415-8fcb-\
3a1c976e1f34"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`prop$$ = "Accuracy", Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`prop$$], {
      "Accuracy", "AccuracyRejectionPlot", "ClassRejectionRate", 
       "ConfusionFunction", "ConfusionMatrix", "ConfusionMatrixPlot", "Error",
        "FScore", "InversePerplexity", "Likelihood", "LogLikelihood", 
       "LogLikelihoodRate", "Perplexity", "Precision", "Properties", "Recall",
        "RejectionRate"}}}, Typeset`size$$ = {
    1426.2, {141.32340240478516`, 25.7025551953125}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    False, $CellContext`prop$27143$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`prop$$ = "Accuracy"}, 
      "ControllerVariables" :> {
        Hold[$CellContext`prop$$, $CellContext`prop$27143$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> $CellContext`rfModelCM[$CellContext`prop$$], 
      "Specifications" :> {{$CellContext`prop$$, {
         "Accuracy", "AccuracyRejectionPlot", "ClassRejectionRate", 
          "ConfusionFunction", "ConfusionMatrix", "ConfusionMatrixPlot", 
          "Error", "FScore", "InversePerplexity", "Likelihood", 
          "LogLikelihood", "LogLikelihoodRate", "Perplexity", "Precision", 
          "Properties", "Recall", "RejectionRate"}}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{1504., {146., 155.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({$CellContext`rfModelCM = ClassifierMeasurementsObject[
         Association["Model" -> ClassifierFunction[
            Association[
            "Basic" -> Association[
              "ExampleNumber" -> 160, "FeatureNumber" -> 8, "ClassNumber" -> 
               2], "Input" -> 
             Association[
              "Preprocessor" -> MachineLearning`MLProcessor["ToMLDataset", 
                 Association[
                 "Input" -> 
                  Association[
                   "MOP" -> Association["Type" -> "Boolean"], "Anorexia" -> 
                    Association["Type" -> "Boolean"], "NV" -> 
                    Association["Type" -> "Boolean"], "RLQP" -> 
                    Association["Type" -> "Boolean"], "Rebound" -> 
                    Association["Type" -> "Boolean"], "HR" -> 
                    Association["Type" -> "Numerical"], "Temp" -> 
                    Association["Type" -> "Numerical"], "WCC" -> 
                    Association["Type" -> "Numerical"]], "Output" -> 
                  Association[
                   "f1" -> Association["Type" -> "Boolean", "Weight" -> 1], 
                    "f2" -> Association["Type" -> "Boolean", "Weight" -> 1], 
                    "f3" -> Association["Type" -> "Boolean", "Weight" -> 1], 
                    "f4" -> Association["Type" -> "Boolean", "Weight" -> 1], 
                    "f5" -> Association["Type" -> "Boolean", "Weight" -> 1], 
                    "f6" -> Association["Type" -> "Numerical", "Weight" -> 1],
                     "f7" -> Association[
                    "Type" -> "Numerical", "Weight" -> 1], "f8" -> 
                    Association["Type" -> "Numerical", "Weight" -> 1]], 
                  "Preprocessor" -> MachineLearning`MLProcessor["Sequence", 
                    Association["Processors" -> {
                    MachineLearning`MLProcessor["FromNamedFeatures", 
                    Association[
                    "FeatureNames" -> {
                    "MOP", "Anorexia", "NV", "RLQP", "Rebound", "HR", "Temp", 
                    "WCC"}]], 
                    MachineLearning`MLProcessor["Transpose", 
                    Association["FeatureNumber" -> 8]], 
                    MachineLearning`MLProcessor["WrapMLDataset", 
                    Association[
                    "FeatureTypes" -> {
                    "Boolean", "Boolean", "Boolean", "Boolean", "Boolean", 
                    "Numerical", "Numerical", "Numerical"}, 
                    "FeatureKeys" -> {
                    "f1", "f2", "f3", "f4", "f5", "f6", "f7", "f8"}, 
                    "FeatureWeights" -> Automatic, "ExampleWeights" -> 
                    Automatic, "RawExample" -> 
                    Missing["KeyAbsent", "RawExample"]]]}]], "ScalarFeature" -> 
                  False, "Invertibility" -> "Perfect", "Missing" -> 
                  "Allowed"]], "Processor" -> 
               MachineLearning`MLProcessor["Sequence", 
                 Association[
                 "Input" -> 
                  Association[
                   "f6" -> Association["Type" -> "Numerical", "Weight" -> 1], 
                    "f7" -> Association["Type" -> "Numerical", "Weight" -> 1],
                     "f8" -> Association[
                    "Type" -> "Numerical", "Weight" -> 1], "f1" -> 
                    Association["Type" -> "Boolean", "Weight" -> 1], "f2" -> 
                    Association["Type" -> "Boolean", "Weight" -> 1], "f3" -> 
                    Association["Type" -> "Boolean", "Weight" -> 1], "f4" -> 
                    Association["Type" -> "Boolean", "Weight" -> 1], "f5" -> 
                    Association["Type" -> "Boolean", "Weight" -> 1]], 
                  "Output" -> 
                  Association[
                   "((f1f2f3f4f5)(f6f7f8))" -> 
                    Association["Type" -> "NumericalVector", "Weight" -> 8.]],
                   "Processors" -> {
                    MachineLearning`MLProcessor["Threads", 
                    Association[
                    "Input" -> 
                    Association[
                    "f6" -> Association["Type" -> "Numerical", "Weight" -> 1],
                     "f7" -> Association[
                    "Type" -> "Numerical", "Weight" -> 1], "f8" -> 
                    Association["Type" -> "Numerical", "Weight" -> 1], "f1" -> 
                    Association["Type" -> "Boolean", "Weight" -> 1], "f2" -> 
                    Association["Type" -> "Boolean", "Weight" -> 1], "f3" -> 
                    Association["Type" -> "Boolean", "Weight" -> 1], "f4" -> 
                    Association["Type" -> "Boolean", "Weight" -> 1], "f5" -> 
                    Association["Type" -> "Boolean", "Weight" -> 1]], 
                    "Output" -> 
                    Association[
                    "(f6f7f8)" -> 
                    Association["Type" -> "NumericalVector", "Weight" -> 3], 
                    "(f1f2f3f4f5)" -> 
                    Association["Type" -> "BooleanVector", "Weight" -> 5]], 
                    "Processors" -> {
                    MachineLearning`MLProcessor["ToVector", 
                    Association[
                    "Input" -> 
                    Association[
                    "f6" -> Association["Type" -> "Numerical", "Weight" -> 1],
                     "f7" -> Association[
                    "Type" -> "Numerical", "Weight" -> 1], "f8" -> 
                    Association["Type" -> "Numerical", "Weight" -> 1]], 
                    "Output" -> 
                    Association[
                    "(f6f7f8)" -> 
                    Association["Type" -> "NumericalVector", "Weight" -> 3]], 
                    "Version" -> {11., 1}, "ID" -> 6886054386480873448, 
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed"]], 
                    MachineLearning`MLProcessor["ToVector", 
                    Association[
                    "Input" -> 
                    Association[
                    "f1" -> Association["Type" -> "Boolean", "Weight" -> 1], 
                    "f2" -> Association["Type" -> "Boolean", "Weight" -> 1], 
                    "f3" -> Association["Type" -> "Boolean", "Weight" -> 1], 
                    "f4" -> Association["Type" -> "Boolean", "Weight" -> 1], 
                    "f5" -> Association["Type" -> "Boolean", "Weight" -> 1]], 
                    "Output" -> 
                    Association[
                    "(f1f2f3f4f5)" -> 
                    Association["Type" -> "BooleanVector", "Weight" -> 5]], 
                    "Version" -> {11., 1}, "ID" -> 1000427953551301687, 
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed"]]}, 
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed"]], 
                    MachineLearning`MLProcessor["ConformBooleanVector", 
                    Association[
                    "Input" -> 
                    Association[
                    "(f1f2f3f4f5)" -> 
                    Association["Type" -> "BooleanVector", "Weight" -> 5]], 
                    "Version" -> {11., 1}, "ID" -> 2259214486311542422, 
                    "Output" -> 
                    Association[
                    "(f1f2f3f4f5)" -> 
                    Association["Type" -> "BooleanVector", "Weight" -> 5]], 
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed"]], 
                    MachineLearning`MLProcessor[
                    "BooleanVectorToNumericalVector", 
                    Association[
                    "Input" -> 
                    Association[
                    "(f1f2f3f4f5)" -> 
                    Association["Type" -> "BooleanVector", "Weight" -> 5]], 
                    "Version" -> {11., 1}, "ID" -> 4692182481463877631, 
                    "Output" -> 
                    Association[
                    "(f1f2f3f4f5)" -> 
                    Association["Type" -> "NumericalVector", "Weight" -> 5]], 
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed"]], 
                    MachineLearning`MLProcessor["MergeVectors", 
                    Association[
                    "Input" -> 
                    Association[
                    "(f1f2f3f4f5)" -> 
                    Association["Type" -> "NumericalVector", "Weight" -> 5], 
                    "(f6f7f8)" -> 
                    Association["Type" -> "NumericalVector", "Weight" -> 3]], 
                    "Spans" -> {
                    Span[1, 5], 
                    Span[6, 8]}, "Wrappers" -> {Identity, Identity}, "Output" -> 
                    Association[
                    "((f1f2f3f4f5)(f6f7f8))" -> 
                    Association[
                    "Weight" -> {1., 1., 1., 1., 1., 1., 1., 1.}, "Type" -> 
                    "NumericalVector"]], "Version" -> {11., 1}, "ID" -> 
                    1212556094540442829, "Invertibility" -> "Perfect", 
                    "Missing" -> "Allowed"]], 
                    MachineLearning`MLProcessor["ImputeMissing", 
                    Association[
                    "Input" -> 
                    Association[
                    "((f1f2f3f4f5)(f6f7f8))" -> 
                    Association[
                    "Weight" -> {1., 1., 1., 1., 1., 1., 1., 1.}, "Type" -> 
                    "NumericalVector"]], 
                    "Imputer" -> (DimensionReducerFunction[
                    Association[
                    "Basic" -> 
                    Association[
                    "ExampleNumber" -> 160, "InitialDimension" -> 8, 
                    "FinalDimension" -> 8], "Imputer" -> 
                    MachineLearning`PackageScope`Preprocessor[
                    "InputMissing", {{0.}, {1.}, {1.}, {1.}, {1.}, {0.625}, {
                    0.929648241}, {0.4266274365}}], "Preprocessor" -> 
                    MachineLearning`PackageScope`Preprocessor[
                    "Standardize", {{0.45625000000000004`, 0.6937500000000001,
                     0.64375, 0.7375, 0.6000000000000001, 0.63381076385625, 
                    0.9301350502187504, 0.4517285766937499}, {
                    0.4980822598724198, 0.4609348517873075, 
                    0.4788903189622628, 0.4399928977699513, 
                    0.4898979486566352, 0.12410637823757366`, 
                    0.025293872837279484`, 0.1709573154055712}}], 
                    "Postprocessor" -> 
                    MachineLearning`PackageScope`Preprocessor["Identity"], 
                    "Model" -> 
                    Association[
                    "Method" -> "Linear", "Matrix" -> CompressedData["
1:eJwBEQLu/SFib1JlAgAAAAgAAAAIAAAAI3l4kdq/1L/fG/pCRiPJv/ylEjgL
mto/ddihkmmY5b9xr1llLg3Wv+6NYXx8uMi/yNpo/k380L/XNlJyfuukP5F/
HZoXztW/lm2qGwrVpL/t1qAjOSzkv6biVRpcPtG/sCcDAAxr0j8gqobpfEfY
v8l9vfUqVLw/WLGdi1Ok2j8xUD7h/FfXv+UisyfOBtq/St+gHIgyvr9CH/LW
QDjEP6kb55U4wLu/AW8vXfuw5j8kiaBlHanEv0IFs3+iXNY/J7ZN8Go62r9T
n1SYyCyyvwigdtPsOdq/MmzDeU8Avz8Xit+fwtLIv12RmONn062/2mDVGVnN
y7+YwCD4uN3nv9Na4s6lO9e/ez/Z8/7Joz9jEgMBQmrHP007okT9tOA/owH+
UoYX4L/4VDEL27vXv7RNtJV9XdU/z4FzlSkMzz9BbW+eB+zVv4mKfsmhGuI/
f1a6MUGHyj/bpTriscfMPz2NsG1bZNM/8Bu/iKNWoL+2H3X5zADjv8cmbxOr
qsM/qhkX9ql21r8CcjdjlQbhP/QL3+ensq0/1ifLZRFg07+TahDiqqyMP/AD
mKigodk/HyBo9/QS4j9ufKFKM7HBv22+KNMUytS/t3ES+X2B27+K3hc2qj/a
P5AkSN6598A/TAH0xFBY5D874qauxOK9v5NY5L9Qm88/4mbyWFQ0y7+gZhW7

                    "]], "Options" -> Missing[], "Log" -> Missing[]]][#, 
                    "ImputedVectors", PerformanceGoal -> "Quality"]& ), 
                    "VectorLength" -> 8, "Output" -> 
                    Association[
                    "((f1f2f3f4f5)(f6f7f8))" -> 
                    Association["Type" -> "NumericalVector", "Weight" -> 8.]],
                     "Type" -> "NumericalVector", "Version" -> {11., 1}, "ID" -> 
                    6427388778537213850, "Invertibility" -> "Perfect", 
                    "Missing" -> "Imputed"]], 
                    MachineLearning`MLProcessor["Standardize", 
                    Association[
                    "Input" -> 
                    Association[
                    "((f1f2f3f4f5)(f6f7f8))" -> 
                    Association["Type" -> "NumericalVector", "Weight" -> 8.]],
                     "Mean" -> {0.45625000000000004`, 0.6937500000000001, 
                    0.64375, 0.7375, 0.6000000000000001, 0.63381076385625, 
                    0.9301350502187504, 0.4517285766937499}, 
                    "StandardDeviation" -> {0.4980822597724195, 
                    0.46093485168730725`, 0.4788903188622631, 
                    0.43999289766995103`, 0.4898979485566356, 
                    0.12410637813757323`, 0.025293872737274296`, 
                    0.17095731530557176`}, "Output" -> 
                    Association[
                    "((f1f2f3f4f5)(f6f7f8))" -> 
                    Association["Type" -> "NumericalVector", "Weight" -> 8.]],
                     "Version" -> {11., 1}, "ID" -> 2967500401978722217, 
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed"]]}, 
                  "Invertibility" -> "Perfect", "Missing" -> "Imputed"]]], 
             "Output" -> 
             Association[
              "Preprocessor" -> MachineLearning`MLProcessor["ToMLDataset", 
                 Association[
                 "Input" -> 
                  Association["f1" -> Association["Type" -> "Nominal"]], 
                  "Output" -> 
                  Association[
                   "f1" -> Association["Type" -> "Nominal", "Weight" -> 1]], 
                  "Preprocessor" -> MachineLearning`MLProcessor["Sequence", 
                    Association["Processors" -> {
                    MachineLearning`MLProcessor["List"], 
                    MachineLearning`MLProcessor["WrapMLDataset", 
                    Association[
                    "FeatureTypes" -> {"Nominal"}, "FeatureKeys" -> {"f1"}, 
                    "FeatureWeights" -> Automatic, "ExampleWeights" -> 
                    Automatic, "RawExample" -> 
                    Missing["KeyAbsent", "RawExample"]]]}]], "ScalarFeature" -> 
                  True, "Invertibility" -> "Perfect", "Missing" -> 
                  "Allowed"]], "Processor" -> 
               MachineLearning`MLProcessor["Sequence", 
                 Association[
                 "Input" -> 
                  Association[
                   "f1" -> Association["Type" -> "Nominal", "Weight" -> 1]], 
                  "Output" -> 
                  Association[
                   "f1" -> Association["Type" -> "Nominal", "Weight" -> 1]], 
                  "Processors" -> {
                    MachineLearning`MLProcessor["ToVector", 
                    Association[
                    "Input" -> 
                    Association[
                    "f1" -> Association["Type" -> "Nominal", "Weight" -> 1]], 
                    "Output" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NominalVector", "Weight" -> 1]], 
                    "Version" -> {11., 1}, "ID" -> 2905507796216354010, 
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed"]], 
                    MachineLearning`MLProcessor["IntegerEncodeNominalVector", 
                    Association[
                    "Input" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NominalVector", "Weight" -> 1]], "Index" -> {
                    Association[0 -> 1, 1 -> 2]}, "Version" -> {11., 1}, "ID" -> 
                    1077327169562361018, "Output" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NominalVector", "Weight" -> 1]], 
                    "Invertibility" -> "Perfect", "Missing" -> "Forbidden"]], 
                    MachineLearning`MLProcessor["FromVector", 
                    Association[
                    "Input" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NominalVector", "Weight" -> 1]], "Output" -> 
                    Association[
                    "f1" -> Association["Type" -> "Nominal", "Weight" -> 1]], 
                    "Version" -> {11., 1}, "ID" -> 2415129302259899579, 
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed"]], 
                    MachineLearning`MLProcessor["FirstValues", 
                    Association[
                    "Info" -> Association[
                    "Type" -> "Nominal", "Weight" -> 1, "SetSize" -> 2], 
                    "Key" -> "f1", "Invertibility" -> "Perfect", "Missing" -> 
                    "Allowed"]]}, "Invertibility" -> "Perfect", "Missing" -> 
                  "Forbidden"]], "ProbabilityPostprocessor" -> Identity, 
               "Name" -> "class", "Marginal" -> 
               Association[0 -> 0.4135802469135802, 1 -> 0.5864197530864197]],
              "Combiner" -> MachineLearning`PackageScope`Combiner["First"], 
             "Decision" -> 
             Association[
              "Prior" -> Automatic, "Utility" -> 
               SparseArray[
                Automatic, {2, 3}, 0., {
                 1, {{0, 2, 4}, {{1}, {2}, {1}, {3}}}, {-Infinity, 1., -
                   Infinity, 1.}}], "Threshold" -> 0, "TieBreaker" -> 
               RandomChoice, "PerformanceGoal" -> Automatic, 
               "BatchProcessing" -> Automatic], "Models" -> {
               Association[
               "Method" -> "RandomForest", "Trees" -> {CompressedData["
1:eJyFUktOAzEMLYgTIC7AAZD8/PcRKrHiCCwqsWJR7i/cmYkIQ1VG0XMcf97z
JM/vn2+nh8PhcL7A68f56/Q4e8e73siCOWFM6NOeF8SUyX+qfEKeO+yYn3rz
YlW9CBllCS53XwPQNC8j9CGIU5PXgAeHhLFKpArBgtYAa4W4h4ZyMETAgwOW
ym2kUoLFZGuFrldXNc3KsPIa5P0ZtSw3I3FFbBXtwltZUGWK1SCHMwlpWCvo
ZbAxRypJeJR4kZJl4Z9WrbPJqwdWhaGn18Fx0UlU3sKqekQMuaKdB5RQIY14
VES3N6FIUOuoHKpukRdHqw/thtk/Zwu4M5y09XuPQpq+v8+f+9YFa0E73i9K
hllfy3SGzfgucTF8xeu7mGN89UHP+TS8+TVf6cu/vLUHVv3QG3rGON9jUn2g

                  "], CompressedData["
1:eJyFU0tKREEMHMUj6AE8gJB/UkcYcOURXAy4cjHeH/M+DT0fFB5Jp9JJVbr7
vX5+f5yeDofDeTHvX+ef08scHR96oaut1fpqY1rLam3aUxOSN3hNeEx2xvfs
lZbnXrw50B9xJbxYEBFbgq084MQNMklZyZYIgykKzkFhgVAfFcRQgzQsKuFS
/1SEd/9oniRUqSNpV9WYakoWlgxcc69QhHiIVhKBPVkHh2XLFPVSLk6R/1qx
eyFd3FUYFJyDoyrVjar7C6ikMFo1hZsmN00madQ4RNVuEKk9JzItx1kpaSK6
u5bD2Gk/XSFL8iqTan3NGLZXsBJbT+NWqPQuHhzhaLHWmnWBlQdHap9vpBWB
RG3IZUb01GxQXyax9EGOviDtNn1R0kcTuPNMbx+iHx/Xvncc0+biAtwK+opW
Zxd1soF1EWGOhuO7/9C+YwkwB7G/+FnH7jaQ5Y6Oq+iPLbJNKiP3C9r1kSI=

                  "], CompressedData["
1:eJyFUl1OA0EIrsYLmHgBD2ACA3zAEZr45BF8aOKTD/X+kc7O6mxbbbLh72Pg
g+X5/fPt8LDb7Y4n8fpx/Do8zt7+rgzpEl3aZPMko8s22biIL5k+xYd91vOp
jBfLrI84PC24JYAFgBlcFMJu7G5NbACaKhlpDIIisQKsVLXMqxRrQMA5ADQS
UjdBRWFsuAGgNZY0iIdYurvQDytiRFGjjI7ROocIgU+UJeuFeltZeaSiuLYm
UlXbACycyVScazR3EsSNHv/QtVSOqm3gWgKCBwBWa5xGVLvlBh0Auwq0xqrl
F/DLCgEipzgtPJKi0Cun0vb3vcr0d20JbZDsDusa6x6fJV4q9k1K+/NWdXOH
mzez4oUb0yY4lGw64yq5b1A5d2I=
                  "], CompressedData["
1:eJxtUjtORDEMfCBqKi7AAZD89/gIK1FxBIqVqCiW+wtvXp4UlpWikZ2xZ+Ik
r5/fH+enbdsuV3j/uvycn9fs9NABBtrAGOjL/n/MgbzEufTixuGlgzd2ctdU
S/NAMCN2wuGhmpIoKqC6aHYggoRKzRBFCqadCCvT6koOCosK9UMKau5QJXEt
C2B2EEy9rOAUSumw2VGiGeRos9bKUhyEdZOKZFd7MScfUspZuLLSbHFOKQ4h
JUvXiF7OPgeMkD6oOSpKO0AcA7Z3HzlV0SUtyzKJIrqOFe3QgbnUMXn23XlK
X6AjuS/izmvKQD09Dq35nCPZmTqYubdkzPe4o+TGa5G0NYn5I4YgzW+zyk6v
XZb3g7L9tfwFY4pklg==
                  "], CompressedData["
1:eJyFUklKBFEMbcUb6AU8gJA5L0cQXHkEFw2uXLT3x9Twm6ruAqHInLy8X3n9
+vk8P51Op8skPr4vv+fnrff+0IbOMmbpG4k7udTILG0TyY1937WbcIP/0sab
V/VHjCwHS0XEkmAIS7glZaWoca6JsDItlHNQWFSo/5cgLiSjSnqQuoSt4HCG
No4CzJ6hA4MjzUrgxh4QMox1kwU9nLy7KIVk7XAnDngkFaBdR1eMUE1J1JQp
11wS0owIGgLpAk4nG+sSOOHZKwkYV+ZsPcSi2TUPZW06Y90irSbpoHBEsxkd
AVVBqmczSeXBo9+D3LTZdCpJ40oQ2fgkKjYZGTW2KoRw71no12GT9XVFXKlc
qn9jhTS4HBzaOJzHlkybS8v1Qh7nfQ8Uy6JyF/SdF4u3Vi7DuNbg4dlv63k9
4S22DDWlage2b7ab+q3iQ+8PuXaEPQ==
                  "], CompressedData["
1:eJyFUklKBFEMbcUDuPACHkDI+JIcocGVR3DR4MpFe39MV/2SX1ogfF7Gl6Eq
z++fb5eH0+l0vcHrx/Xr8jhb57tWbEGfMBbUBTFhTrjm8OTB5B/4q9tTKy+e
DtWQyKLKLNdYA7AyrXYwCIaC+j8BrhBURJQK4Gomo0dVP+KM8mQpAIMRFOzF
7adSlSrdGMGSXZycRSmERilEceIW6hlYhfHTI4MoSVTspgRqMNBJZJ6F0lYS
Y8GmkpKFK9DP2bEtaMEkop7KySFCI5BakdKlgznFS3jbnMSd2aI/SJi667Zg
9ki9dHWdgKZtjOwO3FuXCwUlKA9uQaaLyPP9Qhw/dBh/BQ9LVktXgdm5iS3z
oLNO91fjnnacXRNaxd5pO8uPBpBvgchxNw==
                  "], CompressedData["
1:eJyFUktKREEMHMUb6AU8gJD/5wiCK4/gYsCVi/H+WPO63/jmI0KTTlKdVLrI
88fX+/5ht9sdjubt8/C9f9xGr3dwarG68YeNjW+L9U1++LLY3Lz0qz7bbnzB
/wTnhVXMMkjCSCmbkwfg3TjEle3F0hExK5zcNdXSPCqYawJeZYGiLG7JaBJb
gRTqAIyURlCdOISbSAM0wB1zrBUeqilZTV3V4BtAWJs2EhwUYAv1CXBbYAJV
Vy3K4H8r3IlBGnmkUMx9Ii9pjkSFF0GW9R9h5hVChfHaoEnrPxyeaSrSqd3w
qnPVqhnN2grqs3Mz/WoVKCdT8AueaQ9AWIySIL4YVIvuWcGYSMnSoSyOs8eN
RZO5SvdLr7kVx4B5LsqCjKDX4PpiP0vKrZcXyRvT6FzXzTQ52su2BdPf7VnH
NX9hZ9hsVmfJ+Sv5Ae1qhGY=
                  "], CompressedData["
1:eJyFUl1KpTEMvcosQRfgAoSc/GcJwjzNEuZB8MkH3T/mfm2hVz8QStr0NOck
aZ7+v/97/XO5XD6u5u/bx+fr4+693PVBD5uHlcP6doPtPCwfNjabP6Lyx5uB
2sbp33J56MOzpblIcGRRZZZJDIDB5iDJCiFPKfIZUdWLkFGW4HKfgKuEpIeJ
GFOyyoqIikwLLeoXZkQ5ADiTkHaEey+DLSqHhTMcYlocoJoAaytkaqA5WYl0
Ak0L72LiWoZYBU2gFaRDOMmNVZtzijNMqtQUVkjtQmdEZmeplAXj6kJyiqOS
TV1bqTzVrXi1RLpH8BBtxgiNBWR0ZUbdGet+FmRRGdTKQ6GdqTlbLipY6nia
/S9isirnVlFW7vyov6xW5Vqt2j8HJ1ev1vulu1BRFIAS6sqNWE/GlLdh9Zf7
I3BsPEfu6mDMVg2H9nfgsemx8S02GJGL8fBq93ipneQmeyIxJ/02xZPtBsPg
wG3czC5OLs85+QtFpJDR
                  "], CompressedData["
1:eJyFUktOQzEMLIg9Gy7AAZBsj79HqMSKI7CoxIpFub9w8/Kq19IKKZpxMs7Y
+bx+fn8cnna73fEE71/Hn8PzdrZ/6AADdaAPzIE8MDbIG9U360tsGzWu6rx0
8GZVPYgzypKl3H0KaQ6ERBZVZhliEZxBrK5qmpVh5bUILAEHEYwDlC60Ch2C
NAzuPYzNVyuHEdQpuoNTjblDiIPCkQqGc2/kf624gpR6wKWtFFMwCKOkLFis
00zWdkvTGKGVTqVWq9DHqOqqib4ZJWOdVlqKam92cvXq5s/FO6/dQ0wK4pR3
D3jjsWXz2Ll/HD3MN5yTQTKIaaHLxUlYyC728d3/tfyOWp2Wz/O35BXxlvpu
bmX+Ar9Hao8=
                  "], CompressedData["
1:eJyFUklOxEAMHBBP4AM8AMlr2X4CEieewGEkThyG/wsnnQwJBI0U2e2lqhx3
P71/vp0fTqfTZTKvH5ev8+M2ernrg8w2Z+uztdlitro5jzxv+rHJjM7Y5PMP
z6jGrymm6BnuxEhHUGWqV9AocGl5pmUShRGZ84KwMq0sZxAMBfVR8GZRDYms
iatcY0VoaAJRpJoTLBdEVX/EGS3FUgAWcY9kbRlj7elgxDc0GEJKFq5Af86O
VSOsFT2aU8V76lqmEi8OFqVEuIiDb1L9M24TedrE14vp6dR10Ui26Ipwi0CL
aV0JpBeh3rtEtFhB1rWnuMH6Vgpp8JJbu4q+IulcJUdA067/0WeJzvdVat+U
2b/vcH179zPwwPESyc4tNR1uB2ffdnIe4K7uYCxd+3/er29Tg49HUCOgnaIN
F0dz75wMHNe+9g28m4rK
                  "], CompressedData["
1:eJyFUktqAzEMnZauu+oFeoCAnn6WjhDoqkfoItBVF+n9qcbjgKdMCJgny09P
liy/f/18Xl6WZbmu8PF9/b28zt75qTbS0TpGR3T0jm064SlmZnfafze81eZk
mbUI0dICnO6+Ea6pkpEGJ1dPFxuER/Mka1BjFwV0I+BMQtpM3GsZ7JbKzJto
CROU4GIGEcKkpQhGeiPjfJyK4FH5KCPEstEgkK2yRZVpq86kjVTMFBVWqoiq
uHRDISQtqxOXsFQYPe58bRlpRPVSYFfcLfdgmnx+7sG78Yyjicnu1KN2g10E
H3p3f46O6Y/o7XNMUtBBWshmeMfdzB8bTmRo
                  "], CompressedData["
1:eJyFU8ttXDEM3BguIQ2kAAP8DskSDPiUEnJYICcf1v0jfHqSoSzWMPBASSRn
ONSjfv15/319vlwut8O8/b19XH/up9cfvfFhedgcVoe1YWVYDBvbPjdPbB5s
DHv+jso7FcfpBVamleUMgqGgfgYYQkoWrkB/zo6JAMgo1EHC4kwxEV7VH3FG
ebJUJ85AOlRDIosqu5bGpHInRkfj8KtX0CweiSqVkqR0Z5OcCG6BpAaKLnRQ
1UR0cTIPKXZTVVQuVdHZ8GAPlebCRKDbU0R2CbiYMXipEnUT5bSIAguvzlPh
lFRlRnK0uuRWihusuymkwUu+uRJ07eYugqaXsRNW59RKixtApX0DpTMglFoR
FiIU1rLXlZgFk7TmbMl8hFfxQ4i7Vf/EPpTygzmUOXVPxzTyWF4+l3Ocdp+c
ibQ7We9gw+nngh23ljNFJos8kKXzkQyO/TXUnOgvWZfE2VI9SOH/euLHZP8A
V4SKjQ==
                  "], CompressedData["
1:eJyFU0tOxDAMLYgjcAEOMJL/nyMgseIILEZixWK4v3CbRAqdjipFjuPP83Pt
vn39fF5flmW5reLj+/Z7fZ1f70+lyCZ9kzbpukmeJN5ZWnxM8T5ZmqS7SN+x
WF8XDTVmJ4+EjEhl745USNRkAIpQJomR4QRpEQIkbAaBzWEM7GkJxqEpqGDd
ISmchY0GJpbGOmpkHcDw1EBKMztxoBEwiGsVrqOoZxkPHYYMKCaiEhmuxbxn
eLKKkhBVhku6n/TxuHMKR2KO4iyJQc6DVThAANV3XRUfxU0V0Goovo6DNR16
5w5e40Bf58JMmR3KDNWNsPpRSXKEAbUaQTSKGZcStt+AtifPG/zBSnXHdCG0
S//5GgRyu2Q2jrw4SCDorwNWPP0j2Tf5HnZU7kVaCB6F7Oi03jAfY17oDzPi
iu8=
                  "], CompressedData["
1:eJyFUktKQ0EQjOLejRfwAEJ/qn9HCLjyCC4CrlzE+2O/yUTmhYDw6G91Vb+Z
ef38/jg9HQ6H82bev84/p+c1Oz50kMP6EmNYXuo2bCyYWDCxICfmRuelgzeG
WSkba6RzURpdGh4wqIIkIjkzSWbDEZqWXNIIgWNOWJqrhkQWVWaZxtRwISWE
qXt/xuaTipW4CZonK8PKazZQ0GoKdnJ4udpsmEoiEJTJUcEif+KNVzI0qbVe
4rquNAksm1w7SP9vK5ZCbgeCSqeC1dTo46FtFxeRDmBSV6qWk+Btg9LeF1O8
j1bJ2UP7dyp6b7lz2TKsHh+3kUtS8/ZGie85GY732YWDbT9wI7nIYD6kMUW7
97TQ7pV5V2TskFf3CzaZauk=
                  "], CompressedData["
1:eJx1UUtOQzEMfCCWLLkAB0DyZ/w7QiVWPUIXlVixKPcXJi8PvVatlEwSezy2
4/fT9/H8sizL5Q8+vy4/59f96/DUFx3oA21gDMydPR9YVqbfqL715cOqehFn
lCVLufvqcAK5GooEzJnpMR0oaGUZOzm8mrQ6hDgoXBPK6my9ZwQTUlqjIG4d
yjOCQ4DyTFA6AFKZDniqSoZagC2Uc5NqLRLzEJNSccpNSr2qs6Z2OyBjzAYz
mAwaLC0WpP4vJdLPNAVRoOvC1geCrIuSTPOuznFnHnJ4Hnl3H2ybaeepvY3p
hjEOeThtXM1zJd85mK+MM9dG+QXXfVfM
                  "], CompressedData["
1:eJyFU0tOxTAMfCCOAAfgAE/y354jILHiCCyQWLGA+wu3TVEeFD2pcuzM2Bk7
6ePrx8vb3el0+lzM8/vn19vDHD3dtOOrrdXaanO1utqY9mVi5h8/J87M1MmP
yeYvLfftnMNgioJzUFgg1DeAzR3KzpoVDCqnDfDyUE3JAqE6U3OUUtJEgELL
YewUIwPoj7gSXiyIGEAEh1EFFTOlF9iuneFOHI3msq+O3FVBlbpcareDTEsZ
GdTVszyZXYrb/1ElmkGtqJbWE1ojo1TIrPUIow9ywa7KPOCZqTCREokrqv4H
VIqsxJaBWFqVXZkVc9FyD/DoUbEx70BEhrkaEchBwrwBQq1S1dWj1fYwY/Qh
Yn3TfbNNsCL0eQfPVMZDvG3LMr3cXLfOPC9MWyQH2E7xAwpjW+oiYaPIHh2I
05nI85+zVeoZLAGOVMlF7mgwLlTlAXNX9avTb8wCkQs=
                  "], CompressedData["
1:eJx1kk1OxDAMhQfEAVhwAQ6A5Od/HwGJFUdgMRIrFsP9hZumUgtFipw4L/2e
k/r54+v9+nC5XG5LePu8fV8f99nrXS8wYu6ijOi7yH92YkQbUf9R45fbUy9e
4ExCGibuPQzmm6AlpVwaYcTqyqvgDgtnOMS0OEC1ClbVg5BRluBynygnJV8O
NwbITI8pQAhNVtOsDCufKDcjeJoHVaZYBa0CS1dbLBVwImqLKXhXyUESLJHo
mmJ6MLqUAnMTKci6gvmFlkplWZNcvbrCeY/2lQZF1uJeJhOF6IJMqA0otbXt
rRgpoarZKCDcorZHXG5GVL2fVQzB5kG9jr4LjHR5ADvpBZ7/837pC8xffD/A
I6ktGROfZDhswtfJjidPnOWA5EMvDQTNBt2DDhNWBPTsyMb9AclYcOk=
                  "], CompressedData["
1:eJyFU0tuGzEMdYscIUDXPUAAPv55BANd9QhZGOgqC+f+KDMaBUo8hgcDUuLn
kXySfr++/b08nU6n64f48+/6fvm17s4/eiGb9EVik7bJXCQv9ljsfhMfCw7f
2P0mN7719dyLF6vqn5BRluBy9+FwUnIxLWIFMtNjz8hgKs/U9og7JYYDziSk
YW3s32ATSkulsgxOrl4NOxyMiN6aZoWQAyyzuLOblxgxNLsc7w4zgqd5UGWK
VdCDGg5teAFIIPDImDWKsvu3SGErkAkmJd06d2cOS9JOezSHq1r29Glppc1i
fc7R7ERaoBETvfZHXN0bEELNvCRXmPeKqCaJHwWhFCLajPW3Z1SyqWsD9nGp
W/E8weadk7IbM6hV6oTihiEjY+VOqpoOQlC45MYGumscXHI+/9zqLjfPpulW
gYYaIRjJkBGy7/Qor9aQXfHwMa+RPMHuPkjdZK2P5AAce2H/0g0f7faEgcL7
hHkQckf9Bxk7nUY=
                  "], CompressedData["
1:eJyFUktKBEEMHQcvIHgBDyDk+5IcQXDlEVwMuHIx3h8zXdXSM7YITT718uol
1Xl6/3w73R8Oh/PFvH6cv04P2+zlroNcrG3sOMHGxsZuUd3E+Vd8o/nYwTNU
kizFPFksLNMG4OlQDYksqsxyjf+BylJyA6sL6XoVczGBSKMqw8xjMgCGUYKS
mcKRwGS4aFHTgGJrr1gZwqButlDaQWJzlWaD6Ou1KS4TYO4JW9bdA21WwKv6
I86oy+yFVRxLj8mR3Q/1IJUTuBxDKC+TWlNKZ7tAtK4aUZEXCfOPOBmJI8Sl
VHrSAQhZkPdjS/ZzopXmW4lI/43WsK5ApAE7qyJzSY5tOa7247g0tCS1JouT
KzcOWfdKbrId/bFufsMaC/dbjEch03BTemK21xauG/kGxTd3nQ==
                  "], CompressedData["
1:eJyFU0tOLDEMHJ44AhfgAEgu/30EJFYcgQUSKxZwf+HpJCgzGvSkyO5OlStl
d/rx7fP1/f50On2dw8vH1/f7w/72fNcPdkQ/Yh5Rtmc9YmycnTkitqod/YvP
Vy7Ob0+upVJZBidXLxebQFiUsHskUVVk5qoIT7fgdFgGWmAAVtWLkFGW4HL3
WUEWFM6pViyUzKsizUWCI4sq24TEkmpp5U7trQliMgBoc9XbK7NIo8wDYDRP
VbP7AKL91bKrls6UfVhp2ypZhwfIVAItH0His0E0W0jDxL2Xwfw/DaKSTV2N
UJ7q3eY83Cyp2yIBB8PBa4ik1KPWIlagZ+uxGtQClVOGKUmEY0l1cbv3tgV0
xOzDEcpxfCN26ynKb0X78R5xnIcrVkE37iE//zvmdyTwdjdjIFjpvFeDRiPh
olZ2PmrHni6YMzFN7IYrmX/BpI8LvfnIG3pXh0wfQwN2sTm0MDpEXjU6VH4A
2tKKsQ==
                  "], CompressedData["
1:eJyFUktOBEEIHY17N17AA0zC9wFHMHHlEVxM4srFeP9Id1Un3eMkJhUKePCA
ol4/vz8uT6fT6bqI96/rz+V5b709tJKrxB99yNjpvPPYKnXnGbk+4m/qvLRy
5lAImUOEhCGcNAChMlF1dZhISKBmhrObp4tIKkrJcwDoSC23dMqCmpJtVBYd
lSaZDmRiAoxyZCXHUiAlbVJ5G12iNAlu3Vv4liHUvOEK9OlWMIsraRSKoJ1n
7DSBpoHqQl9UmeUaE6jqQ5xRniwFbFSyEKSWOJiWDnkCBOkhS72fypIKMgGr
nry5uUMMPfzWbgQjuslwV2nI+M6yZS7vcVmnr9dZhmWHXa4ID4QP1gzXvXO7
5E5Jnf9i1hrf6ZC0+mrQ0g3078W/H/1q5w==
                  "], CompressedData["
1:eJyFU0tu3TAMfA16hAJZ5wAF+CfnCAW66hG6eEBXXST3R2hZTuXGwNtQJjkk
Zyj55fffX/evt9vtdTM//7y+3Z9X78eX/qhhZdgcVof1JbLbGNaWqhW/Ymqx
+im+Imf2P17f+uM7K8FhAmEnFkTSnghvP8o7gCp1/EuIuolyWSaChWNPOLoT
iCvhtbWKmQiDKQrOQWGBUJ8JUtLIkqLuasbBxwyVbm9JVZxIFpkJ5gZXmrtn
U3SfCW+mqilZ2PjCNY/hwuTgkC7kMHWdiQSYK8yAJtvlj3RIU4xW0SszK0KD
Dh3E2x5iO0SgeQx3RmtMSulh2q596CAj6e2KN16C6tESW7OpahmjQlrKsRLr
cG+pKovSUDK3y9y3WWCDOvcUyyOxYSysLxhRFg55pJzFWoVT35J0EWAXj1zm
030aQ04vcobGIadjDzKfIHxVMJF5ARG6KBCd3gXV4+8bOFkZY/4968i9e7/z
cexw3ruznZB+8mqlwziRu5Qo72TgnX0=
                  "], CompressedData["
1:eJyFU0tKRTEMfYpLEOcuQMj3JFmC4MglOBAcOdD9Y+5tr/TpE2nJl54kp+39
y/vz683pdPrYxNPbx+fr3eo9XrWhu8xF2i5jl1jkiPAS8UXmEpdfmFhsWdDy
R0e3bTx4VW/ijPJkKQAjIUTs5VFCAKewzUR7HhAGq1tJMNWESodqSGRRZZZr
HFAFl+ylVlVJSROKy+CZqq6aFOB5Al2cuwQ2JVIaR8IyDY0d5CgLIR4JhpCS
hSvQ29mPdlmpezdzy8rwQh1QZVoNxSAYCur/JbQgDtEMomoWWGcitSIlUMFN
lZfMruBOjOYlNkbUK47Js4dt8oJ7N+l20O61gSeJim1G4JtdCk+zBIp6Pj7Y
9aa1JPuG2L106/Cf4izaUBnNed+jcrAcF8UbtanSZ6IvBXrhFcvycuvxekec
D286u5JV8QjK9HSovHRgeP0S/gT7ofjiT1uL0/w7M7Z8ibOS5x3bUGNCHocZ
FxtYPaGh+Dz3BXbVl0Q=
                  "], CompressedData["
1:eJyFUklOA0EMDIgfwAd4QCSvZfsJkTjxBA6ROHEI/xfOLKEDE0Uaud2ucZWr
5dePr/fj0263O53D2+fp+/g83g4PndgUdYo5RQy5DBUf6jHkOTBgiPqvF3/0
XzrZezpUQyKLKrNcYwGq+iPOKE+WAjADCKl0dy01b4i8FsAdoQZkMRWLs88A
R6SiLOGFdIvEpYO4K4iztnoFrR39f4E9tWcwcralw8q0ekwGwVBQ/+0QMocI
CUM4aTWYUozoDs+mUlmpSEAh0P7VRNrQOhVMm6nr1rptd3V+80laOKiFTLLN
IBN2cd7S3AabXnpg4ztU3I9TpVKS1K/MTXnHubAYtTy5mHB1t20smgzrlofH
SWrZpeUyHEzzMWMsV5he3Xy+ydaxcm6Mo8Ne1rKpN4mYN2h7I7a0ZuyKjGe/
XEvxBy/FhH0=
                  "], CompressedData["
1:eJyFUktKREEMfIp7N17AAwzkW0mOMODKI7gYcOVivD9m3vRAP30y0FSnU/lU
SL9+fL2fnpZlOV/g7fP8fXqeX8eHNnxFXRET5oo8YUyROXlkyrJrzK8+L20c
YGVaWc4gGArqV8Kr+hBnlCdLARhEhlAh00hMAUq+Q7CIC0xVKNsrDh0EhJQs
vKP7ODvuEKCuGunB7JLcNu7IBYc7kyhpo6ujBiFexqnVepjKcZMLd2KkI6gy
1StoqKrWbrCme0yDl9wm75E0JLIuKeUa/6raWbYcH9fy66Om/cfY6qD/XjxS
ZeO0rXOno45vsYbT+Clz0t7FvOfUTWsf3A/+JGrh
                  "], CompressedData["
1:eJyFUklOA0EMDIgfwAd4QCRv5eUJkTjxBA6ROHGA/wtnugdNyEiRWm7bZbuq
Z/z68fV+fjocDt8X8/b5/XN+3kanh3Zysb5Y3diRicXKjb/t4pvM8LFBR2/+
439p5+jMFWTUR12yYDoAYTEKAkFMuLzKBoCqPsQZhWQpd78DcKXA3EA9J81R
snYw0qQvrdQQxSR3dK0nPKgyFS1xAkoaLYZcE2UM8nsdMGJWjpIAu3lMju5t
vdSaEBatgzABF1LqlLr3AWPlMEM2mFi4pervW7V6M0v25gpH1PrAkDBXKza9
YJB1VFm/uVoRtaZyvUfOYEN5GFu/zXtAruQRPQCWFUr9P0V3Fm0sjp0eL0tR
c1uWYFxHHhEtUI2cbC/Wq0Jso7VyYnmd3JGjc0dn3VjSOWLs8DKId0h4Xraj
8XjVwLFXIr9UUoQb
                  "], CompressedData["
1:eJyFkk1qxDAMhadDT1B6gR5gwPrXO0Khqx6hi4GuupjenyqxMzglMBAk20+S
Pzl6+/r5vD6fTqfbYj6+b7/Xl3n3/lQLW21Ollarq43JdtWnk76WKZ6nCrv4
fze/1uLiChUkjLy5OlysC6RmEDKSSCe0tDYyuCWg3CiVktxyCFSKNA0T9/qM
zLtgaS4SHImGrLskNiEZ5GFrFW3COgSQpXK5YqtMMblnSIGlSGMTqGd2gani
VLWAGlG4BQYVWKNKZx1mcSkNKidppK5qmsgwOLbLUV+1F7AkhvujPtyskZca
y7kY4vGTFFQ1CU6WxPL2G26yFVUVhKd6RWy4gUKp32XVEDUQH0wSjzk4LxPQ
xnCd18LrBttmdTw7Gi67k+5sF+IHeRc64JBdGu2mdsLJHc4hlc4axVHClvcH
JYh+CA==
                  "], CompressedData["
1:eJyFU0tOw0AMLYgjwAE4AJL/nyMgseIILJBYsSj3F6+ZDCS0qFHjGX+e/ey4
j2+fr+93h8PheBIvH8ev94et9nyDiy4yFpmLtEX6IutM2ia+zrC1weZZZG3s
+YfLPS5P3o0fcWV7sXREDEeQUahbkxhzVUVOBxVneTK7FOO+Irw8VFOymrqq
XSfC2rRh4KCwaKSdCNWy7vKKOAGChoMTFU0si7rVI9Jm8ZDwgI2EDd6QK8XZ
s1hR31g5Kox4TRVwhXDwqUtJpl4RXeIW5sQdZeEtE4FoMq8GAVx+R5LZhjyN
h1Ffs690HkoIisaIy0HNaY5dq1CWOMQcY5AfuifyhXTaDmag9fOh0AVGaJKa
nJjMWgPQhA8TVlY0i3dtUMrRIGcSoUCV2oU1lXX5bhfIPMY67W2bg2mnyTh0
HCMXxwhZfbnVZrKhydT+/RONte/d2p/nmaUuGSdT32mXsnAPUrT3fQP/c5EL

                  "], CompressedData["
1:eJyFUktOAzEMLYgTIC7AAZD89/MRKrHiCCwqsWJR7i/cmUSalkHVZJ4TvzjP
tvz6+f1xejocDucLvH+df07P29PxoTdYUBfkDeYGscHVIwvGP/6d2Bvll968
sbmXsrMmgovgtBJe1YsYWQ6WiogREUJKlq4RvZz9HuHFDpM2WtAUdV0JoQoX
9KdWVSBMcVhaR9WFQgWFrUSwsnWO/Xe6WmGYhEiSwtWI0rwwI9yJAx5JBahX
Do1Q0YAGo7i7YJ3MEO9OpJhpb5L6WsXUCHVSC8ruC8q17mh03zrT7q0VgqrT
kntPoSuu5mDoUgI2CctAeErX7Ui2sp1Jks0k+YJ1fFwymWadh2vfYmR7Yt3h
OK5uzoCbNAZ30bExoUswjYH8KzafH9K+muG0HU2+eoVHOfIL0F996g==
                  "], CompressedData["
1:eJyFU0tKBEEMHcUjeAEPIOT7khxBcOURXAy4cjHeH9PdVdDtNAhFqvJ5yUs6
/fL5/XF9ulwut0W8f91+rs977e2hH7LKWKWuEjtL7t62Sr+z4w7lOwvfReYf
Fov2CndipCOoMtUraHN4KrSo7R5sDmcZjqo+xBnlyVIANgdbZBlAEFFlLZmI
bHx5RGiZSIpMhGtrXQAaoGAOHqxISREpSXAxY/BM5VAN6UoL33KNgbAyrTZw
1zcU1IdDqtMYwqLdYKBGcSlLZw2rBJV5DbrcDZJ5SLGbqqJyFg+hQqaRmHaj
OVgxNE2Cu4CWdnWzf1hxES1qj0r6YS6TFaR7t/DO38fZx6zQE4lCfxFNL2On
OUSh1Irur1OFdbODLkd/TcTSP3fbPYQ63cPHNXi9mHZ7tO1O7f3zOoJ0b2Rf
L6FNi4MvT+CvfMJKx+avKB5LfGSw/Q4ndEYtOxhxiBwhdUZnhvwCsFuKuA==

                  "], CompressedData["
1:eJyNU0luHDEMHBt+QvIAP8AAt+LyhAA++Qk5GPApB+f/CNVqDbonA9iAQEpk
qVhkq59//3l7f7pcLp/DvH58/n3/eTz9euiNbTa/YfWwx2Z9s3KwcbB+wPMB
M+N+o+VHb16QcNWQyKLKLGjMhIhYilAaWXikuc+EpzjSS5OJpZIjF5Upg6nz
zYdKqv0GGSPMEMlZwpXYb4wDkTp13BPhdFVVWUowZ4WQpq0b1avhUciu7ksV
B7qMZ1omsUfZTuVWpk0GdnLzcsVSRczC7sOJlMbeuQPN0HOJMRFFBX2RGBqZ
rZPMRKhWvCeArIAAOjp1vtZonFL1UIeMIKs1xFJtnIe26oqwkJ3Kewz9KaDu
vcDwr1RFf6VSKUlKgE1yqerSA9etdw1loTvPVP57rOsJPm4k08nmmKbLO7kb
JKY7s5wvnB3f0aYLMQ51wzH/h0OMzwp2p6eg3dMap9OsI7NVWch/2ySQqA==

                  "], CompressedData["
1:eJyFU0tOAzEMLYgjIPYcAMm/588RKrHiCCwqsWIB9xeeJoOmdESlyHbsPPvZ
SZ7fP99OD4fD4WsRrx9f36en7e5414aeJc4yNjI3kq/scUY2WL/C4sqztcd5
/8PosY0XVPUizigkS7n7CLiVaWWBndy8XDEDLBKkCTWiMFTamoqRJq0apyEK
/UWUiyVpI9kRRDOwJAgyoySEdyxHgF1IyQLq3guMyaprS6RRE4pIF8ctBJJY
OZSaXVcy2NoHQF0QHlSZigq60TmqM1NJCHlKE5CaiG7aOLUEzlTw5MlKWZYZ
eedJktCyGzUYyOouiIp6aiay0vWI8C5DzOqqkrKOhKFV3Rj36NMaPgORfaUk
WGZmaR7rrFJ9YeuW2XPsi581pL3RM8pmxRx9U7XzisdLtOP9OdeqFl+NjfwJ
LYrpYifbk+x7gByqtk4ZWeQC/iL/fLVzDp6/YIK232OH8CSlQ40+OYbCZeEd
Jbwb+wHs7ZcO
                  "], CompressedData["
1:eJyFUktqQzEMTEsvUOgFeoCA/tIcIdBVj9BFoKsu0vtT5T0b3ksCXViWNfKM
ZOv96+fz/HI4HC5X8/F9+T2/bk+np3ZqsbbYWGxu/LrzZWPrLt836BrPG823
do6sHskohgUYIaAV8PJQTckCoQquuQJhmlqRrupCJaYxAA51UgtK4uUGhoYk
FYzZWKtUITaphMnBIVLETey6AsJizeLk0ikIYN6I6itAL0oHhU9x92bomvNa
rTqS/gE8uwmxFs1KChVMKlLSyOqaovWNgwcgqGYik46B3RyzD5iiO+ag6Hfs
d/hHnF0UxN16E1nv8xGlBaOJlGBW3Snowais36qn54Vr/PpymONwPbDN2Mhb
gmPbBUcK+4PgUW4K2OjYZtRyWw12tLRu+oidd8WtXXDuU/4AR7p3aw==
                  "], CompressedData["
1:eJyFU0tKBEEMHcUjCK49gJDfy+cIgiuP4EJw5ULvj+nuaqyeUQaafDt5eamq
x7fP1/e70+n0tYiXj6/v94fZe75pI1epq8QqZZI5xTebVxmTvIz7JG2y86Ln
VuVnc9238cQGlDJYI52LErQlUNUfcUYhWcrdt4RbmVYW2MnNyxUjARB7woMq
U1FB1xJi6ZFpwRUpRmRXMBClMIiJ9FRhFTF4uJCSBdS9PzD2cVkkSBPa7cNQ
uWOwWTZ1JmXlHiN0YKRyY4eFgFObv1/BYNc0iaVKS3teGxiy1FvjNA/m8B5/
VFQKzK0XU57mKNnB4aohkbUsq6A7wT6fKpWS7EMCm+TgoS4MWaAYSeYxWnk3
6BRHc25+XYEr2/2XoHAfThBo2XxPXGV/XHIZl/x27TVu6nCmWK0O26b48Ids
QZ2D7IfcoSXXnNsVH72zUUfu99nMD++IRZvCAfJPkIOSAynOLUhnu1iDo2AQ
lh+NIJ12
                  "], CompressedData["
1:eJyFUktKREEMHMUb6AU8gJDKP0cYcOURXAy4cqH3x8x7PdJP3zDQJOlUUpVA
nt8/304Ph8Ph62xeP76+T4/z73jXgS5WJsuLtcn6lMdic0J5ysQU59S7dtkf
/acOXizNRYIjiyqzTGIAVf0IGWUJLne/AbgZwZsvzkxiFTQALZVqbji5ernY
LQBCUFfTiHIrdruhAWcS0jBx72ew33GdmQwtAHiwRdwSv7pHC2iacmY4ETXX
CrQAQlNUktmAFhsdDgtn9D6mxQGqC1VnjRkpsCTtwQZABHSDnx1zyWXcqwvu
7LFzaDydWx3vF8ZxJ+Pz32E4XR2vGG9KfHU1Y9hy8s44Mi54KadxqoNiveRZ
a+MwumQrslcZe7vxD5tFhBY=
                  "], CompressedData["
1:eJyFUltKBEEMXBdPIF7AAwh5VpIjCH55BD8W/PJjvT9mZrphdlwQZqof1UlV
p/Py+f1xeTydTtcF3r+uP5en/ertoSe8Yq4oK9qK2O1v6Lv92KHuEH9ix/mD
8nNPXhlCShauQH/OjkFEpTCnSECQ5ZobAXdipCOoMtUraCO891RDImthOiJG
hGloojXUhVJMhwYQESgtQDzJpGgSrU1V/VN4EaYrWJlW52YQDAX1aVfMCplG
CTMjlRGhpFHoHJpexk4jlRd7mvTQCdu2uk6i+iPOKE+WNod/COkCkre2ZNeg
TcCGq65EF6pvbBlGra3zHhZM0qKpnG1exs3ZsHDKqsptNm2WvZ9JESnZ1RBN
4uN77rvnvHSVj5Y5r4lHt6wLmXvrOdqGsbrh5nAbsGXhHNwdH7oP49mROyNb
Y9bG6x2Rg6Td4w4BvypRfes=
                  "], CompressedData["
1:eJydUktKRDEQfIp7N17AAwz0t9J9hAFXHsHFgCsX4/2xJy8P8mQeghAq3VWd
Sufz+vH1fnlaluV6g7fP6/flec7ODxVoR+8YHVtHm+KYGD9g1kqs+GuflwpO
nlmDOFp6sCSAVYClaUY6g2BIqA8BGhTWxCSNFaG2CVK15pFIrSDQxh7hUG3S
IimjLHUIcJVyskYR3LKxyCpU4AJTFQpQSK3/y+qwXUYgStR0JzY4/m111K6w
GDVy8roUruPnuBIGGszViJI8SZjvPLacH3vx9FY+U9ET5o2bJ5kz1pnkYSKH
/2v7TXunG5c7bvjRLhuT3W3nB8QvayU=
                  "], CompressedData["
1:eJxtUl1OxGAIXI0nMF7AA5jwO8ARTHzyCD5s4pMP6/0jbb/WdneTBijzMQyE
16+fz/PT6XS6TObj+/J7ft7/vT90kLO12WK2MVvfobnLL7HMVm/e4IZnVF11
fungjZ3dPF1EUlFKngvQOaiGRBZVZrnGqEiAhErNEkWaTAOApklwZWmjKLMF
gJVpZ51B6DzUB8ChJFWGrrL+MV+bFyxCAZMSSDoPoNi7SbsmbHXquvZAN9bm
Ukhxqx4VcCdGDxPTGOoVtFJVf8QZ5clSAFZAlcBoOc0XYSGrKu0JqycRzXSF
ylbROykJIaR0idRYSaW4wVpCIQ1eG5U5yqNnLOvVi4zmrTxJWlAlR0wb3SbP
IGpMxaYgUHcuab2Jx5lrd0QYBzIB7Iuj9dns5ODuJRl7jHNgVzJGwXLRR5L/
W6wD7yC0A/3A9J6s8SSO/H/b4n5f
                  "], CompressedData["
1:eJyFUltKZEEMbcUdOBtwAULeOVmC4JdL8EPwaz6c/WO6Kw11mxHhkkrlVE5O
cvP0/vft4+F0On2dzevn17+Px/32ctcOLtYu1i+Wt3hsvm++bmj+4O+5K46b
+n/aeWYVswySMFLK4uQFODxUUxJFBZRrLiCsTKsDHBQWFepDFdIUlq4R/Tl7
XKlK0qOkoCyehJoMa3YLR4ZpWqrS1BB2sBValMEihX4p7oCaO5pCXJsUGKCq
P2JkNaVUxKgKMup0KxJjBhDTICfQJOACZ4bCZiSi3V+JVnZ1omYaVcwVndSG
pCcWIJ0aiqYJ6tGY92iF+DqrnnWyhqa2D09cMwRk6Oct1tIAG4BbbE+jE7uZ
8/+YIUZkqyxj4jNf58t/Fk22xfHDstxf9OwHT1DW7YjZAfMDhgNWg92omSdr
7yd7requZD1YFJzroHUMve7Fjg3cBOV4fAOMRYQp
                  "], CompressedData["
1:eJyFUktKBEEMHcULCF7AAwj5viRHGHDlEVwMuHIx3h8z3dVQPc4gFC+pvE5e
0pXXz++P09PhcDhf4P3r/HN6nm/Hh3Z8QVsQE+aEOvk8RewPGwvKhHGl+dLO
G6xMK8sZBENBfSU8HaohkUWV/YHGRlB4miVQBGfeCO4ICZVeuCJNpkGEgwyZ
lkmMKBsEiCuDs0pETV1gQ6OqD3FGebIUgFFKSMoYFSomRAUZBISULFyBPs6O
f0rdH/BeBsyCqVv1VE4OkW1A96yW7n66PZjI+Ilw74FbKC4S6hX0D8HO5oUw
to45xPPGqsj06Hl8XBLHxiwX2WIX08+wmF1wb3jNY9+lb+ZGAzptbF0lrds3
i6wU62r2QbspuXKjivwCzOJ3tw==
                  "], CompressedData["
1:eJyFUktKBEEMHcUTiBfwAAP5VF6SIwiuPIKLAVcuxvtjuqoaumdGB4qXz8u3
yOvn98fp6XA4nBd4/zr/nJ631ttDKdZRO7aO0dE7SkdsMK5wGzPq8IYdfrno
/FLKES2bZqQxCA0JtUFYZj3i8LRgSQCTCIOqi0dSRmWqD4LBlU4e6iEKojWj
nOqJJGhYNjZaCTNiVD1fKqml0yTCW6u2HgGQSdGzhwcyVVKCwoybTAIVAmF2
y2B4EXMPYaIgby7LqC0dsi4YvlCi0hbFkfemUlvMWkbNGhQhd/6KIaTU3BQV
DmNbN4/6H6+mJlr/GCm5LkjOllyVKLUWTf1zqhuXJPOGHpcLoC6OvLuc6boW
LEO0f0JmuuzFjTl03nXP4jV83PTGyJv1RtZM1p0TO8t3M8ovh3d+Kw==
                  "], CompressedData["
1:eJyFUklKQ0EQjeIJxAt4gEDNwxECrjyCi4ArF/H+WL+H2Bkg0NT86nV11/vX
z+fxZbfbnTbx8X36Pb6u3uGpjGjSm5QmebF9kT1uCwpvIrTUx5L1K+a3MvaG
mA4CddgoUoV7QhM1hEpxBjuxzkSocQU8EjIKwT4RWQcwPDWQ0sweIAwg0EMd
USmw7IEwBva0BOPQFFSwBxzVCpHQbFNEye5nchIlDCB2RgKAnkAjYBBXNquj
qKMVZpCKiQKmhZgmTfLNVpUsUDnJOMi1aq2m9G2+SjlM8qBEc0XT2J6YZCBE
NOoCoW0+yhyvS0gCDgp1ayr+zImwmg4KtfGWEXb9n/9/L4fnbTOiqT2OfRhO
U70u1xieU83jrmQN7vGud+cefU91JZsretsB4cKjeyW9FVpXflEy1R/u5n3Z

                  "], CompressedData["
1:eJyFUktOQzEMLIgbwAU4QCWP/z5CJVYcgUUlVizK/YX7Xh7KQ62Qokmc8die
KK8fX+/np8PhcLnC2+fl+/w8R6eHPvCCuaAs6AtiQZtYnzAm9Ds4a0f+n/4v
fTi6GcHTPKgyxSpoJVBSlqmZRKFEalgJq+pFyGgeXO4+FE5RAUkWABGM3Agm
IQ0T914GGwrXUqksa6mrl4sNgiwonFOtWCiZdTSPZEsrSXJTZ45NUaTchTTV
24RyyGjeQ8LVWgmTdIAHwaVpkNBKp7p2GqUSGqnMoOyBCxRDodTWLYyiy7Wj
bVzLYCrv1yLWdkiJrQdT9pP2CzdpnZT/OG9rQg4Pab4iNLaphCSqbbq0f4XR
77NLDxvoalLStVTvfjQ9PV4/F00/JJar48rXFiwb1uw1gs6XIwW+i/JGyhE3
ppGdDNO33Ze4uQ2VrZvsZl3dYO+D9/Ifb/CEOA==
                  "], CompressedData["
1:eJyFUstNA0EMDYgSoAAKiGQ//0tA4kQJHCJx4gD9C2c3gyZk0Uojf8f28+f5
/fPt9HA4HL7O5PXj6/v0NGsvdy34QnmiWKhOVBaaE10tcWPxKSpu/swW/4Pl
sYWjZYDKM5Wg4k7Jq4MdJKRhbexnbL7jcDNiT/OgyhSroFHDXCQQWWdPmcSe
o6ofcUZZMsp91MiElHShkNKCmFwcroo0dSYyiwDvpooq5uy4qjY3kuEgdesS
ahA0vALvpAJDKcjIoODyKt1p0KkHHWnBbEhu+bd4aKiLcodQSioujoZDjqSG
l7AgxNiH6flveSPrVlgucIGeBrw0k0q9RzdWm73n3roJ9diCevUbZzqO8v58
puPWFoUWduQthlnja80WhjW893Mbx3WVZbANdCugNSOP618Uns6/trBtMfYt
+Pl/axht/wBNZJDZ
                  "], CompressedData["
1:eJyFUktOQzEMLIgLIHEBDoDk/+cIlVhxBBaVWLGA+4vpy3sor0VUimwnE8/Y
Tp7fP99OD4fD4etsXj++vk+P8+54hyAWa4utyfJidUJzQnNCfeLJq1guNJ8Q
vHilUEeVkZhGUPEGeKimZDV1VbvmCrRwE2kQFxI9gwYQFM7IMKMkb7ZeqTiE
lCwd/FjOHhtVY4En24ulI+KGeJBydje3gbVKQlaNVKiYhwgJIC7aqDS0KVBS
MnBnuSEe1qYNUUZHFh3qq0aXuIU5MRq3wCRWwL0a7RE1gchEfjOIzgSoShCY
S68aqDBQLibYmKRVbA062DFV1IvG1Tvpj68ix/uFfnPz409HtWyYhuM5iXcU
bMP5cIOEc1y5/DfXv3Fcu3BnqHd17m6w7g75n538AJZUd5c=
                  "], CompressedData["
1:eJxtUktOxDAMHRAHYMEFOACS//Y7wkisOAKLkVixGO4vPG06SquRUsf2i/1e
Ur9//35dXk6n0/VmPn+uf5fXOTo/tVOL1cXGYm3Kx+TnlJmtT2hNlg9sb+18
sHGIRUkiIhDmtAIO9CKuhBfLDd0qiKEGoTBRCZcaFeWhmpIFQhVccwMsDeyQ
Ei1EF65AMCy8StVVizI4N0DZyqm/ar9l3TnMA56ZCpPuJ5uqrABUmoPKnW1T
JZxBpdFnWx1nNx0c4uBk6et4KiXIB2AwRevnm9J+Ex0AIyWQla2rsmXo4Ajn
bg+EazC3Zd3ukZDurdUMUBUfQD86KVl2QfRy9ngwCzLNgp+fl8Lxo0cw5bAE
vOZYdifkwcajiRyIx5F18qagZrLcdaKDnBnTdVtbse+E8D+MD3FP
                  "], CompressedData["
1:eJyFUktOQzEMfCAugMQFOEAljx3/jlCJFUdgUYkVi3J/4b68lFCeVCly4sx4
bCd+/fh6Pz0ty3K+mLfP8/fpefaOD3WQ1cZqebX2z873nYnp7JPd4dzkfKnD
QTNrEcJTA5xm1gFotCRzUqMgFmrcAVMlWGhBGSGaTiNCKC+uETJdwBtgyGZa
XFGRIDd4B0q1QljSYURUuelOjqIBjCLWxpzim5QJyMKgLmxo3K59GFeS5ipm
tRS6AdVuSAtoUopSluwot7VIAUggMA+XDShR9jT3aiSz+hk5PCxTODkoVCt9
jHIzjAHXjFIqQO9UVZ1HvWI9DNirUfDtt/2OQTs+Xj6XVkdX54BpBKJf8UBW
dvfQ6WgzNijWN9/Cd0d1UgaG1+duqiP/yG902SlrePuXP6g5dw4=
                  "], CompressedData["
1:eJyFUktKBTEQHMW1Ky/gAR509b+PILjyCC4euHLxvD/mJZlH1AEh1KS6pqum
M3l+/3w7P2zbdrnC68fl6/y4spe7tuGO6JgdtaMslVjqo+J/1Im/Ep7a5uRm
BE/zoMoUq6AhwJmENEzc2zKYzw7VADGLpSARzLPDmotIcGRdvcokplDVFiGj
LMHlPq1QqFCHm3BJeUjtVgRBCBWMVNXU/stIZs/04GbnJK65ZySburYxy1Pd
iuccrBJITiGjYiqX2cFprQMRRGBqp6JT0AgJJ6VoXu2LMedgQlC4pArE0Y4M
h3/zvrt0YiuJTqB7bX2MLgyGyWTVTnwQJsu18P3tcS8WUsOOjoJ/5N/YNy0a
ZGg=
                  "], CompressedData["
1:eJyFUktOAzEMLYg1Ky7AAZD8fbaPUIkVR2BRiRWLcn/hZjLqdFSEZPn3HD8n
zuvn98fp6XA4nC/q/ev8c3reRseHdnJoH9qG5qExdGxqdOPHJnOT3zG8tPPG
5l7KzhoJLkqnBYCVaWU5g2AoqC+Ap0M1JLKosgs0ZisIKVm4Ai3OjgkkQEKl
ZokiTV45XCUtLCiTo4JFJsAIs5J06y4pZDnJq1qIM8qTpYDJgYweXyK4pdO2
Al1kebmeVYLKvOSfVn9zgHsShktfRXpumU/CLtoHioFia6u4s03ZbGTZaR0f
x/G5thkMI8PwTbRiu+SOamLXP4OlFe16LB9jSzaNLUbvUcsvgSVkwA==
                  "], CompressedData["
1:eJx1UUlOxEAMDIgjRz7AA5C8lu0nIHHiCRxG4sRh+L9wOskoGQWpVe2tyu32
69fP5+VpmqbrDB/f19/L8957f2hDB+YOfaANjIEYKLvIgrzU36m+tPHmVX2I
M8qTpQAsCfa0IgQ5KEmUTJYEQkLDxTTSlNiD1oSVaWU5g2AoqK890qHatCyq
7AKNjZFp6MDcpSyEeE2QUdP7AWLMmYmN4U6M1otZSb1uzbnrSQ0UPczcozaG
tJAop0UUWHgbEEI9VbgCfZwd/85xsg85/P7jUDxcsveYToI373Tda8X9vrEp
zE4t4gc5loO4/AEBMFfz
                  "]}, "FeatureNumber" -> 8, "TreeNumber" -> 50, "LeafSize" -> 
                5, "Processor" -> MachineLearning`MLProcessor["Sequence", 
                  Association[
                  "Input" -> 
                   Association[
                    "((f1f2f3f4f5)(f6f7f8))" -> 
                    Association["Type" -> "NumericalVector", "Weight" -> 8.]],
                    "Output" -> 
                   Association[
                    "((f1f2f3f4f5)(f6f7f8))" -> 
                    Association["Type" -> "NumericalVector", "Weight" -> 8.]],
                    "Processors" -> {
                    MachineLearning`MLProcessor[
                    "DimensionReduceNumericalVector", 
                    Association[
                    "Input" -> 
                    Association[
                    "((f1f2f3f4f5)(f6f7f8))" -> 
                    Association["Type" -> "NumericalVector", "Weight" -> 8.]],
                     "Reducer" -> Normal, "Version" -> {11., 1}, "ID" -> 
                    486970280069400467, "Output" -> 
                    Association[
                    "((f1f2f3f4f5)(f6f7f8))" -> 
                    Association["Type" -> "NumericalVector", "Weight" -> 8.]],
                     "Invertibility" -> "Approximate", "Missing" -> 
                    "Imputed"]], 
                    MachineLearning`MLProcessor["FirstValues", 
                    Association[
                    "Info" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 8.], "Key" -> 
                    "((f1f2f3f4f5)(f6f7f8))", "Invertibility" -> "Perfect", 
                    "Missing" -> "Allowed"]]}, "Invertibility" -> 
                   "Approximate", "Missing" -> "Imputed"]], 
                "VariableSampleSize" -> 3, 
                "OOBConfusionMatrix" -> {{0.8203265369892978, 
                 0.14795163512065712`}, {0.1796734630107023, 
                 0.8520483648793429}}]}, "Log" -> 
             Association[
              "TrainingTime" -> 0.20790531534517656`, "MaxTrainingMemory" -> 
               3085352, "DataMemory" -> 233944, "FunctionMemory" -> 138472, 
               "LanguageVersion" -> {11., 1}, "Date" -> 
               DateObject[{2017, 3, 23}, 
                 TimeObject[{14, 19, 6.0399773}, TimeZone -> 2.], TimeZone -> 
                 2.], "ProcessorCount" -> 2, "ProcessorType" -> "x86-64", 
               "OperatingSystem" -> "Windows", "SystemWordLength" -> 64, 
               "Evaluations" -> {}]]], "TestSet" -> 
          Association[
           "Input" -> {{
              0, 1, 1, 1, 0, 0.555555556, 0.904522613, 0.257447591}, {
              0, 0, 1, 1, 1, 0.833333333, 0.962311558, 0.290547996}, {
              1, 0, 0, 0, 0, 0.486111111, 0.957286432, 0.169179846}, {
              1, 0, 0, 1, 0, 0.541666667, 0.922110553, 0.36410445}, {
              0, 0, 0, 0, 0, 0.506944444, 0.942211055, 0.250091946}, {
              0, 0, 0, 0, 0, 0.5, 0.91959799, 0.228025009}, {
              0, 0, 0, 0, 0, 0.527777778, 0.929648241, 0.316292755}, {
              0, 1, 0, 0, 0, 0.541666667, 0.972361809, 0.139757264}, {
              0, 0, 0, 1, 0, 0.618055556, 0.93718593, 0.371460096}, {
              0, 0, 0, 0, 1, 0.513888889, 0.912060302, 0.294225818}, {
              0, 0, 1, 0, 0, 0.548611111, 0.944723618, 0.327326223}, {
              0, 0, 0, 0, 0, 0.534722222, 0.859296482, 0.514895182}, {
              0, 1, 1, 0, 0, 0.604166667, 0.917085427, 0.290547996}, {
              0, 0, 1, 0, 0, 0.5625, 0.904522613, 0.261125414}, {
              0, 0, 1, 1, 0, 0.569444444, 0.944723618, 0.360426627}, {
              0, 0, 1, 0, 0, 0.555555556, 0.826633166, 0.415593968}, {
              1, 1, 1, 0, 0, 0.5625, 0.91959799, 0.426627437}, {
              0, 0, 1, 0, 1, 0.569444444, 0.929648241, 0.268481059}, {
              0, 1, 0, 0, 0, 0.569444444, 0.904522613, 0.246414123}, {
              0, 0, 0, 1, 0, 0.652777778, 0.904522613, 0.275836705}, {
              1, 0, 0, 0, 0, 0.555555556, 0.91959799, 0.286870173}, {
              1, 0, 0, 0, 0, 0.444444444, 0.98241206, 0.275836705}, {
              0, 0, 1, 1, 0, 0.631944444, 0.93718593, 0.228025009}, {
              0, 1, 0, 1, 1, 0.645833333, 0.954773869, 1.}, {
              1, 1, 1, 1, 1, 0.520833333, 0.929648241, 0.426627437}, {
              1, 1, 1, 1, 0, 0.875, 0.954773869, 0.441338727}, {
              1, 0, 1, 1, 0, 0.555555556, 0.904522613, 0.573004781}, {
              1, 0, 1, 1, 1, 0.902777778, 0.93718593, 0.492828246}, {
              1, 0, 1, 1, 0, 0.625, 0.904522613, 0.532548731}, {
              0, 1, 1, 1, 1, 0.451388889, 0.904522613, 0.522250828}, {
              0, 1, 1, 1, 1, 0.5625, 0.904522613, 0.330636263}, {
              0, 1, 1, 1, 1, 0.694444444, 0.969849246, 0.891504229}, {
              1, 1, 1, 1, 1, 0.902777778, 0.944723618, 0.474439132}, {
              1, 1, 1, 1, 1, 0.840277778, 0.964824121, 0.963221773}, {
              1, 1, 1, 1, 1, 0.944444444, 0.974874372, 0.484001471}, {
              1, 1, 1, 1, 1, 0.694444444, 0.954773869, 0.456050018}, {
              1, 1, 1, 1, 0, 0.763888889, 0.954773869, 0.446119897}, {
              1, 1, 1, 1, 1, 0.833333333, 0.954773869, 0.4336153}, {
              0, 1, 0, 1, 1, 0.763888889, 0.989949749, 0.502758367}, {
              0, 1, 1, 1, 1, 0.861111111, 0.967336683, 0.464509011}}, 
            "Output" -> {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
              0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
             1}], "Predictions" -> {1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
           0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
           1, 1, 1, 1}, "LogProbabilities" -> CompressedData["
1:eJxTTMoPSmViYGDQAGIQfe7ts0ZJ2Rf7D2yMmjAv+sn+oq8p+1oU3+1fHpeV
vWvR/f27Ds3sdzh3fn/21NOfJlr+2B8kk5m2a+Ot/RXTd15xMPu4X3bDVP2M
8tP7jffsPzXP/9f+e5u+e9ytvLJfxGbunY07v+wXvsYXdDry5P7As9XZDuW/
9zfl6Vbb+V7e/y/pd9mP9q8Y6pUsxBPk553d3x5ksP+p9U8M+2fNnf6jsPrp
/vMuztMFnz7bv3HCpl0MvI/3W6osVa9c9nK/7LrJKv5KN/aXKU7x3d72aT/n
+6cXC4Ue7E87rSx5cM/b/erhvBFcapf2O5XekDZI/LYf3f/o6tHdg+5+dD66
e9HdJ2kyP2rfnJ/7/98W+Zl4/cz+K1/rZVXnfN9/34MlxHzuhf26x0+8sPj/
en+w2LToQ04PMeTX8hWc8d7+a/9Vpbn6PzafwjCPafu1gul6f/dX/8qwvNZ+
bH/20WRRxgsf9pf+5ZxX3Xl7/xonSec3k/7tDzz3aVNP3REM89D1c1RFqJ1+
9nu/7j0vsd6ZJzD46OYH7L2wYt6Vr/sXxooeXf3oEob8ew8mj7wpP/Z/VHi9
UYLl/H4AolF1Dw==
           "], "CountMatrix" -> {{20, 3, 0}, {0, 17, 0}}, 
          "IndicesMatrix" -> {{{3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 
             16, 18, 19, 20, 21, 22, 23}, {1, 2, 17}, {}}, {{}, {24, 25, 26, 
             27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40}, {}}}, 
          "ExtendedClasses" -> {0, 1}, "Version" -> {11., 1}]]}; 
     Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.6992604689034505`*^9},ExpressionUUID->"9dcb68a7-7e8c-442c-8e41-\
f1465e470aa7"],

Cell[BoxData[
 TemplateBox[{
  "Part", "partw", 
   "\"Part \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"1\\\", \\\",\\\", \
\\\"2\\\", \\\",\\\", \\\"3\\\", \\\",\\\", \\\"4\\\", \\\",\\\", \\\"5\\\", \
\\\",\\\", \\\"6\\\", \\\",\\\", \\\"7\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \
\\\"9\\\", \\\",\\\", \\\"10\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"30\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}]\\) of \\!\\(\\*RowBox[{\
\\\"Missing\\\", \\\"[\\\", RowBox[{\\\"\\\\\\\"KeyAbsent\\\\\\\"\\\", \
\\\",\\\", \\\"\\\\\\\"Weights\\\\\\\"\\\"}], \\\"]\\\"}]\\) does not \
exist.\"", 2, 1, 1, 17511896013828889616, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.849003319588622*^9},
 CellLabel->"",ExpressionUUID->"e2847fae-a2f0-4598-82a0-c44a26231819"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Logistic regression model", "Section",
 CellChangeTimes->{{3.6992530186115723`*^9, 
  3.699253022187421*^9}},ExpressionUUID->"34032aeb-56e0-4b5e-a3ec-\
ea32bac2418f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"lrModel", "=", 
  RowBox[{"Classify", "[", 
   RowBox[{
    RowBox[{"dataTrain", "\[Rule]", "\"\<Histo\>\""}], ",", 
    RowBox[{"Method", "\[Rule]", "\"\<LogisticRegression\>\""}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.69925302574203*^9, 
  3.6992530543000712`*^9}},ExpressionUUID->"84fa9f43-40ee-49bd-ae2d-\
8256cbf2ba39"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["ClassifierFunction", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open$$ = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = True), Appearance -> None,
                 Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 PointSize[0.13], 
                 GrayLevel[0.45], 
                 
                 PointBox[{{0.9821769431797024, -0.440194219686987}, {
                  1.1339776261519132`, 0.8056918676854272}, {
                  0.5279892326667741, 0.6574306661126254}, {
                  0.022147046479890797`, 1.4937877187998898`}}], 
                 GrayLevel[0.7], 
                 
                 PointBox[{{-0.9815166384819979, 
                  0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                 GrayLevel[0.55], 
                 AbsoluteThickness[1.5], 
                 LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
               Axes -> {False, False}, AxesLabel -> {None, None}, 
                AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
               ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"LogisticRegression\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Number of classes: \"", "SummaryItemAnnotation"],
                    "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 PointSize[0.13], 
                 GrayLevel[0.45], 
                 
                 PointBox[{{0.9821769431797024, -0.440194219686987}, {
                  1.1339776261519132`, 0.8056918676854272}, {
                  0.5279892326667741, 0.6574306661126254}, {
                  0.022147046479890797`, 1.4937877187998898`}}], 
                 GrayLevel[0.7], 
                 
                 PointBox[{{-0.9815166384819979, 
                  0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                 GrayLevel[0.55], 
                 AbsoluteThickness[1.5], 
                 LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
               Axes -> {False, False}, AxesLabel -> {None, None}, 
                AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
               ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"LogisticRegression\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Number of classes: \"", "SummaryItemAnnotation"],
                    "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Number of features: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["8", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                   TagBox["160", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
        Baseline], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("ClassifierFunction[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.6992604992631197`*^9},ExpressionUUID->"aeaebd3b-1d37-4b2f-8acd-\
4b3ea95d3dc9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"lrModelCM", "=", 
  RowBox[{"ClassifierMeasurements", "[", 
   RowBox[{"lrModel", ",", "dataTestModel"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.699253059818778*^9, 
  3.699253088412098*^9}},ExpressionUUID->"0ebfe6ac-8188-4968-b182-\
991a7958cdeb"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["ClassifierMeasurementsObject", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open$$ = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = True), Appearance -> None,
                 Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[
               
               RasterBox[{{0.8564437870801482, 0.8967071593761374, 
                0.4746151541446917}, {0.7191592194171378, 0.5062062867304069, 
                0.8158644505878024}, {0.47333333333333333`, 
                0.7727052229508918, 
                0.7191592194171378}}, {{-0.03479955456570183, \
-0.055679287305122394`}, {3.055679287305122, 3.041759465478842}}, {0, 1}], 
               ImagePadding -> 0.2, 
               PlotRange -> {{-0.0625, 3.0625}, {-0.06, 3.06}}, 
               PlotRangePadding -> Automatic, FrameStyle -> Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.7]], Axes -> False, AspectRatio -> 1, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Classifier: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"LogisticRegression\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Number of test examples: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["40", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[
               
               RasterBox[{{0.8564437870801482, 0.8967071593761374, 
                0.4746151541446917}, {0.7191592194171378, 0.5062062867304069, 
                0.8158644505878024}, {0.47333333333333333`, 
                0.7727052229508918, 
                0.7191592194171378}}, {{-0.03479955456570183, \
-0.055679287305122394`}, {3.055679287305122, 3.041759465478842}}, {0, 1}], 
               ImagePadding -> 0.2, 
               PlotRange -> {{-0.0625, 3.0625}, {-0.06, 3.06}}, 
               PlotRangePadding -> Automatic, FrameStyle -> Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.7]], Axes -> False, AspectRatio -> 1, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Classifier: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"LogisticRegression\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Number of test examples: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["40", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Number of classes: \"", "SummaryItemAnnotation"],
                    "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Accuracy: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["0.975`", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
        Baseline], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("ClassifierMeasurementsObject[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.6992605106730447`*^9},ExpressionUUID->"112cf213-1440-4679-9b36-\
08c31697540c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"lrModelCM", "[", "prop", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"prop", ",", 
     RowBox[{"lrModelCM", "[", "\"\<Properties\>\"", "]"}]}], "}"}], ",", 
   RowBox[{"SaveDefinitions", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.699253477290862*^9, 
  3.6992534825953927`*^9}},ExpressionUUID->"1db248e9-7e58-487f-ad4d-\
7bdf0ab8980f"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`prop$$ = "ConfusionMatrixPlot", 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`prop$$], {
      "Accuracy", "AccuracyRejectionPlot", "ClassRejectionRate", 
       "ConfusionFunction", "ConfusionMatrix", "ConfusionMatrixPlot", "Error",
        "FScore", "InversePerplexity", "Likelihood", "LogLikelihood", 
       "LogLikelihoodRate", "Perplexity", "Precision", "Properties", "Recall",
        "RejectionRate"}}}, Typeset`size$$ = {272., {139., 146.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    False, $CellContext`prop$30747$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`prop$$ = "Accuracy"}, 
      "ControllerVariables" :> {
        Hold[$CellContext`prop$$, $CellContext`prop$30747$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> $CellContext`lrModelCM[$CellContext`prop$$], 
      "Specifications" :> {{$CellContext`prop$$, {
         "Accuracy", "AccuracyRejectionPlot", "ClassRejectionRate", 
          "ConfusionFunction", "ConfusionMatrix", "ConfusionMatrixPlot", 
          "Error", "FScore", "InversePerplexity", "Likelihood", 
          "LogLikelihood", "LogLikelihoodRate", "Perplexity", "Precision", 
          "Properties", "Recall", "RejectionRate"}}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{338., {205., 213.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({$CellContext`lrModelCM = ClassifierMeasurementsObject[
         Association["Model" -> ClassifierFunction[
            Association[
            "Basic" -> Association[
              "ExampleNumber" -> 160, "FeatureNumber" -> 8, "ClassNumber" -> 
               2], "Input" -> 
             Association[
              "Preprocessor" -> MachineLearning`MLProcessor["ToMLDataset", 
                 Association[
                 "Input" -> 
                  Association[
                   "MOP" -> Association["Type" -> "Boolean"], "Anorexia" -> 
                    Association["Type" -> "Boolean"], "NV" -> 
                    Association["Type" -> "Boolean"], "RLQP" -> 
                    Association["Type" -> "Boolean"], "Rebound" -> 
                    Association["Type" -> "Boolean"], "HR" -> 
                    Association["Type" -> "Numerical"], "Temp" -> 
                    Association["Type" -> "Numerical"], "WCC" -> 
                    Association["Type" -> "Numerical"]], "Output" -> 
                  Association[
                   "f1" -> Association["Type" -> "Boolean", "Weight" -> 1], 
                    "f2" -> Association["Type" -> "Boolean", "Weight" -> 1], 
                    "f3" -> Association["Type" -> "Boolean", "Weight" -> 1], 
                    "f4" -> Association["Type" -> "Boolean", "Weight" -> 1], 
                    "f5" -> Association["Type" -> "Boolean", "Weight" -> 1], 
                    "f6" -> Association["Type" -> "Numerical", "Weight" -> 1],
                     "f7" -> Association[
                    "Type" -> "Numerical", "Weight" -> 1], "f8" -> 
                    Association["Type" -> "Numerical", "Weight" -> 1]], 
                  "Preprocessor" -> MachineLearning`MLProcessor["Sequence", 
                    Association["Processors" -> {
                    MachineLearning`MLProcessor["FromNamedFeatures", 
                    Association[
                    "FeatureNames" -> {
                    "MOP", "Anorexia", "NV", "RLQP", "Rebound", "HR", "Temp", 
                    "WCC"}]], 
                    MachineLearning`MLProcessor["Transpose", 
                    Association["FeatureNumber" -> 8]], 
                    MachineLearning`MLProcessor["WrapMLDataset", 
                    Association[
                    "FeatureTypes" -> {
                    "Boolean", "Boolean", "Boolean", "Boolean", "Boolean", 
                    "Numerical", "Numerical", "Numerical"}, 
                    "FeatureKeys" -> {
                    "f1", "f2", "f3", "f4", "f5", "f6", "f7", "f8"}, 
                    "FeatureWeights" -> Automatic, "ExampleWeights" -> 
                    Automatic, "RawExample" -> 
                    Missing["KeyAbsent", "RawExample"]]]}]], "ScalarFeature" -> 
                  False, "Invertibility" -> "Perfect", "Missing" -> 
                  "Allowed"]], "Processor" -> 
               MachineLearning`MLProcessor["Sequence", 
                 Association[
                 "Input" -> 
                  Association[
                   "f6" -> Association["Type" -> "Numerical", "Weight" -> 1], 
                    "f7" -> Association["Type" -> "Numerical", "Weight" -> 1],
                     "f8" -> Association[
                    "Type" -> "Numerical", "Weight" -> 1], "f1" -> 
                    Association["Type" -> "Boolean", "Weight" -> 1], "f2" -> 
                    Association["Type" -> "Boolean", "Weight" -> 1], "f3" -> 
                    Association["Type" -> "Boolean", "Weight" -> 1], "f4" -> 
                    Association["Type" -> "Boolean", "Weight" -> 1], "f5" -> 
                    Association["Type" -> "Boolean", "Weight" -> 1]], 
                  "Output" -> 
                  Association[
                   "((f1f2f3f4f5)(f6f7f8))" -> 
                    Association["Type" -> "NumericalVector", "Weight" -> 8.]],
                   "Processors" -> {
                    MachineLearning`MLProcessor["Threads", 
                    Association[
                    "Input" -> 
                    Association[
                    "f6" -> Association["Type" -> "Numerical", "Weight" -> 1],
                     "f7" -> Association[
                    "Type" -> "Numerical", "Weight" -> 1], "f8" -> 
                    Association["Type" -> "Numerical", "Weight" -> 1], "f1" -> 
                    Association["Type" -> "Boolean", "Weight" -> 1], "f2" -> 
                    Association["Type" -> "Boolean", "Weight" -> 1], "f3" -> 
                    Association["Type" -> "Boolean", "Weight" -> 1], "f4" -> 
                    Association["Type" -> "Boolean", "Weight" -> 1], "f5" -> 
                    Association["Type" -> "Boolean", "Weight" -> 1]], 
                    "Output" -> 
                    Association[
                    "(f6f7f8)" -> 
                    Association["Type" -> "NumericalVector", "Weight" -> 3], 
                    "(f1f2f3f4f5)" -> 
                    Association["Type" -> "BooleanVector", "Weight" -> 5]], 
                    "Processors" -> {
                    MachineLearning`MLProcessor["ToVector", 
                    Association[
                    "Input" -> 
                    Association[
                    "f6" -> Association["Type" -> "Numerical", "Weight" -> 1],
                     "f7" -> Association[
                    "Type" -> "Numerical", "Weight" -> 1], "f8" -> 
                    Association["Type" -> "Numerical", "Weight" -> 1]], 
                    "Output" -> 
                    Association[
                    "(f6f7f8)" -> 
                    Association["Type" -> "NumericalVector", "Weight" -> 3]], 
                    "Version" -> {11., 1}, "ID" -> 7348453372834640353, 
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed"]], 
                    MachineLearning`MLProcessor["ToVector", 
                    Association[
                    "Input" -> 
                    Association[
                    "f1" -> Association["Type" -> "Boolean", "Weight" -> 1], 
                    "f2" -> Association["Type" -> "Boolean", "Weight" -> 1], 
                    "f3" -> Association["Type" -> "Boolean", "Weight" -> 1], 
                    "f4" -> Association["Type" -> "Boolean", "Weight" -> 1], 
                    "f5" -> Association["Type" -> "Boolean", "Weight" -> 1]], 
                    "Output" -> 
                    Association[
                    "(f1f2f3f4f5)" -> 
                    Association["Type" -> "BooleanVector", "Weight" -> 5]], 
                    "Version" -> {11., 1}, "ID" -> 7297469928512000255, 
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed"]]}, 
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed"]], 
                    MachineLearning`MLProcessor["ConformBooleanVector", 
                    Association[
                    "Input" -> 
                    Association[
                    "(f1f2f3f4f5)" -> 
                    Association["Type" -> "BooleanVector", "Weight" -> 5]], 
                    "Version" -> {11., 1}, "ID" -> 3741726543812385040, 
                    "Output" -> 
                    Association[
                    "(f1f2f3f4f5)" -> 
                    Association["Type" -> "BooleanVector", "Weight" -> 5]], 
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed"]], 
                    MachineLearning`MLProcessor[
                    "BooleanVectorToNumericalVector", 
                    Association[
                    "Input" -> 
                    Association[
                    "(f1f2f3f4f5)" -> 
                    Association["Type" -> "BooleanVector", "Weight" -> 5]], 
                    "Version" -> {11., 1}, "ID" -> 6968955062918609561, 
                    "Output" -> 
                    Association[
                    "(f1f2f3f4f5)" -> 
                    Association["Type" -> "NumericalVector", "Weight" -> 5]], 
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed"]], 
                    MachineLearning`MLProcessor["MergeVectors", 
                    Association[
                    "Input" -> 
                    Association[
                    "(f1f2f3f4f5)" -> 
                    Association["Type" -> "NumericalVector", "Weight" -> 5], 
                    "(f6f7f8)" -> 
                    Association["Type" -> "NumericalVector", "Weight" -> 3]], 
                    "Spans" -> {
                    Span[1, 5], 
                    Span[6, 8]}, "Wrappers" -> {Identity, Identity}, "Output" -> 
                    Association[
                    "((f1f2f3f4f5)(f6f7f8))" -> 
                    Association[
                    "Weight" -> {1., 1., 1., 1., 1., 1., 1., 1.}, "Type" -> 
                    "NumericalVector"]], "Version" -> {11., 1}, "ID" -> 
                    5746057089875537750, "Invertibility" -> "Perfect", 
                    "Missing" -> "Allowed"]], 
                    MachineLearning`MLProcessor["ImputeMissing", 
                    Association[
                    "Input" -> 
                    Association[
                    "((f1f2f3f4f5)(f6f7f8))" -> 
                    Association[
                    "Weight" -> {1., 1., 1., 1., 1., 1., 1., 1.}, "Type" -> 
                    "NumericalVector"]], 
                    "Imputer" -> (DimensionReducerFunction[
                    Association[
                    "Basic" -> 
                    Association[
                    "ExampleNumber" -> 160, "InitialDimension" -> 8, 
                    "FinalDimension" -> 8], "Imputer" -> 
                    MachineLearning`PackageScope`Preprocessor[
                    "InputMissing", {{0.}, {1.}, {1.}, {1.}, {1.}, {0.625}, {
                    0.929648241}, {0.4266274365}}], "Preprocessor" -> 
                    MachineLearning`PackageScope`Preprocessor[
                    "Standardize", {{0.45625000000000004`, 0.6937500000000001,
                     0.64375, 0.7375, 0.6000000000000001, 0.63381076385625, 
                    0.9301350502187504, 0.4517285766937499}, {
                    0.4980822598724198, 0.4609348517873075, 
                    0.4788903189622628, 0.4399928977699513, 
                    0.4898979486566352, 0.12410637823757366`, 
                    0.025293872837279484`, 0.1709573154055712}}], 
                    "Postprocessor" -> 
                    MachineLearning`PackageScope`Preprocessor["Identity"], 
                    "Model" -> 
                    Association[
                    "Method" -> "Linear", "Matrix" -> CompressedData["
1:eJwBEQLu/SFib1JlAgAAAAgAAAAIAAAAI3l4kdq/1L/fG/pCRiPJv/ylEjgL
mto/ddihkmmY5b9xr1llLg3Wv+6NYXx8uMi/yNpo/k380L/XNlJyfuukP5F/
HZoXztW/lm2qGwrVpL/t1qAjOSzkv6biVRpcPtG/sCcDAAxr0j8gqobpfEfY
v8l9vfUqVLw/WLGdi1Ok2j8xUD7h/FfXv+UisyfOBtq/St+gHIgyvr9CH/LW
QDjEP6kb55U4wLu/AW8vXfuw5j8kiaBlHanEv0IFs3+iXNY/J7ZN8Go62r9T
n1SYyCyyvwigdtPsOdq/MmzDeU8Avz8Xit+fwtLIv12RmONn062/2mDVGVnN
y7+YwCD4uN3nv9Na4s6lO9e/ez/Z8/7Joz9jEgMBQmrHP007okT9tOA/owH+
UoYX4L/4VDEL27vXv7RNtJV9XdU/z4FzlSkMzz9BbW+eB+zVv4mKfsmhGuI/
f1a6MUGHyj/bpTriscfMPz2NsG1bZNM/8Bu/iKNWoL+2H3X5zADjv8cmbxOr
qsM/qhkX9ql21r8CcjdjlQbhP/QL3+ensq0/1ifLZRFg07+TahDiqqyMP/AD
mKigodk/HyBo9/QS4j9ufKFKM7HBv22+KNMUytS/t3ES+X2B27+K3hc2qj/a
P5AkSN6598A/TAH0xFBY5D874qauxOK9v5NY5L9Qm88/4mbyWFQ0y7+gZhW7

                    "]], "Options" -> Missing[], "Log" -> Missing[]]][#, 
                    "ImputedVectors", PerformanceGoal -> "Quality"]& ), 
                    "VectorLength" -> 8, "Output" -> 
                    Association[
                    "((f1f2f3f4f5)(f6f7f8))" -> 
                    Association["Type" -> "NumericalVector", "Weight" -> 8.]],
                     "Type" -> "NumericalVector", "Version" -> {11., 1}, "ID" -> 
                    3757288526691392232, "Invertibility" -> "Perfect", 
                    "Missing" -> "Imputed"]], 
                    MachineLearning`MLProcessor["Standardize", 
                    Association[
                    "Input" -> 
                    Association[
                    "((f1f2f3f4f5)(f6f7f8))" -> 
                    Association["Type" -> "NumericalVector", "Weight" -> 8.]],
                     "Mean" -> {0.45625000000000004`, 0.6937500000000001, 
                    0.64375, 0.7375, 0.6000000000000001, 0.63381076385625, 
                    0.9301350502187504, 0.4517285766937499}, 
                    "StandardDeviation" -> {0.4980822597724195, 
                    0.46093485168730725`, 0.4788903188622631, 
                    0.43999289766995103`, 0.4898979485566356, 
                    0.12410637813757323`, 0.025293872737274296`, 
                    0.17095731530557176`}, "Output" -> 
                    Association[
                    "((f1f2f3f4f5)(f6f7f8))" -> 
                    Association["Type" -> "NumericalVector", "Weight" -> 8.]],
                     "Version" -> {11., 1}, "ID" -> 5326171277148534468, 
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed"]]}, 
                  "Invertibility" -> "Perfect", "Missing" -> "Imputed"]]], 
             "Output" -> 
             Association[
              "Preprocessor" -> MachineLearning`MLProcessor["ToMLDataset", 
                 Association[
                 "Input" -> 
                  Association["f1" -> Association["Type" -> "Nominal"]], 
                  "Output" -> 
                  Association[
                   "f1" -> Association["Type" -> "Nominal", "Weight" -> 1]], 
                  "Preprocessor" -> MachineLearning`MLProcessor["Sequence", 
                    Association["Processors" -> {
                    MachineLearning`MLProcessor["List"], 
                    MachineLearning`MLProcessor["WrapMLDataset", 
                    Association[
                    "FeatureTypes" -> {"Nominal"}, "FeatureKeys" -> {"f1"}, 
                    "FeatureWeights" -> Automatic, "ExampleWeights" -> 
                    Automatic, "RawExample" -> 
                    Missing["KeyAbsent", "RawExample"]]]}]], "ScalarFeature" -> 
                  True, "Invertibility" -> "Perfect", "Missing" -> 
                  "Allowed"]], "Processor" -> 
               MachineLearning`MLProcessor["Sequence", 
                 Association[
                 "Input" -> 
                  Association[
                   "f1" -> Association["Type" -> "Nominal", "Weight" -> 1]], 
                  "Output" -> 
                  Association[
                   "f1" -> Association["Type" -> "Nominal", "Weight" -> 1]], 
                  "Processors" -> {
                    MachineLearning`MLProcessor["ToVector", 
                    Association[
                    "Input" -> 
                    Association[
                    "f1" -> Association["Type" -> "Nominal", "Weight" -> 1]], 
                    "Output" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NominalVector", "Weight" -> 1]], 
                    "Version" -> {11., 1}, "ID" -> 3145515684396292870, 
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed"]], 
                    MachineLearning`MLProcessor["IntegerEncodeNominalVector", 
                    Association[
                    "Input" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NominalVector", "Weight" -> 1]], "Index" -> {
                    Association[0 -> 1, 1 -> 2]}, "Version" -> {11., 1}, "ID" -> 
                    454370471410997882, "Output" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NominalVector", "Weight" -> 1]], 
                    "Invertibility" -> "Perfect", "Missing" -> "Forbidden"]], 
                    MachineLearning`MLProcessor["FromVector", 
                    Association[
                    "Input" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NominalVector", "Weight" -> 1]], "Output" -> 
                    Association[
                    "f1" -> Association["Type" -> "Nominal", "Weight" -> 1]], 
                    "Version" -> {11., 1}, "ID" -> 8795119181625189023, 
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed"]], 
                    MachineLearning`MLProcessor["FirstValues", 
                    Association[
                    "Info" -> Association[
                    "Type" -> "Nominal", "Weight" -> 1, "SetSize" -> 2], 
                    "Key" -> "f1", "Invertibility" -> "Perfect", "Missing" -> 
                    "Allowed"]]}, "Invertibility" -> "Perfect", "Missing" -> 
                  "Forbidden"]], "ProbabilityPostprocessor" -> Identity, 
               "Name" -> "class", "Marginal" -> 
               Association[0 -> 0.4135802469135802, 1 -> 0.5864197530864197]],
              "Combiner" -> MachineLearning`PackageScope`Combiner["First"], 
             "Decision" -> 
             Association[
              "Prior" -> Automatic, "Utility" -> 
               SparseArray[
                Automatic, {2, 3}, 0., {
                 1, {{0, 2, 4}, {{1}, {2}, {1}, {3}}}, {-Infinity, 1., -
                   Infinity, 1.}}], "Threshold" -> 0, "TieBreaker" -> 
               RandomChoice, "PerformanceGoal" -> Automatic, 
               "BatchProcessing" -> Automatic], "Models" -> {
               Association[
               "Theta" -> {-0.5071593147528995, -0.3144353429745701, \
-0.2646155696212541, -0.6066299187262157, -0.5185377233368662, \
-0.5654118241217367, -0.1457092188719376, -0.09429680227752026, \
-1.0049214434325109`}, "L1Regularization" -> 0, "L2Regularization" -> 10., 
                "FeatureNumber" -> 8, "Method" -> "LogisticRegression", 
                "Processor" -> MachineLearning`MLProcessor["Sequence", 
                  Association[
                  "Input" -> 
                   Association[
                    "((f1f2f3f4f5)(f6f7f8))" -> 
                    Association["Type" -> "NumericalVector", "Weight" -> 8.]],
                    "Output" -> 
                   Association[
                    "((f1f2f3f4f5)(f6f7f8))" -> 
                    Association["Weight" -> 8., "Type" -> "NumericalVector"]],
                    "Processors" -> {
                    MachineLearning`MLProcessor[
                    "DimensionReduceNumericalVector", 
                    Association[
                    "Input" -> 
                    Association[
                    "((f1f2f3f4f5)(f6f7f8))" -> 
                    Association["Type" -> "NumericalVector", "Weight" -> 8.]],
                     "Reducer" -> Normal, "Version" -> {11., 1}, "ID" -> 
                    4063133793627507229, "Output" -> 
                    Association[
                    "((f1f2f3f4f5)(f6f7f8))" -> 
                    Association["Type" -> "NumericalVector", "Weight" -> 8.]],
                     "Invertibility" -> "Approximate", "Missing" -> 
                    "Imputed"]], 
                    MachineLearning`MLProcessor["PrependOne", 
                    Association[
                    "Input" -> 
                    Association[
                    "((f1f2f3f4f5)(f6f7f8))" -> 
                    Association["Type" -> "NumericalVector", "Weight" -> 8.]],
                     "Output" -> 
                    Association[
                    "((f1f2f3f4f5)(f6f7f8))" -> 
                    Association["Weight" -> 8., "Type" -> "NumericalVector"]],
                     "Version" -> {11., 1}, "ID" -> 6860655891363408934, 
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed"]], 
                    MachineLearning`MLProcessor["FirstValues", 
                    Association[
                    "Info" -> Association[
                    "Weight" -> 8., "Type" -> "NumericalVector"], "Key" -> 
                    "((f1f2f3f4f5)(f6f7f8))", "Invertibility" -> "Perfect", 
                    "Missing" -> "Allowed"]]}, "Invertibility" -> 
                   "Approximate", "Missing" -> "Imputed"]]]}, "Log" -> 
             Association[
              "TrainingTime" -> 0.2429106398583891, "MaxTrainingMemory" -> 
               1146344, "DataMemory" -> 233944, "FunctionMemory" -> 102632, 
               "LanguageVersion" -> {11., 1}, "Date" -> 
               DateObject[{2017, 3, 23}, 
                 TimeObject[{14, 21, 39.2410612}, TimeZone -> 2.], TimeZone -> 
                 2.], "ProcessorCount" -> 2, "ProcessorType" -> "x86-64", 
               "OperatingSystem" -> "Windows", "SystemWordLength" -> 64, 
               "Evaluations" -> {}]]], "TestSet" -> 
          Association[
           "Input" -> {{
              0, 1, 1, 1, 0, 0.555555556, 0.904522613, 0.257447591}, {
              0, 0, 1, 1, 1, 0.833333333, 0.962311558, 0.290547996}, {
              1, 0, 0, 0, 0, 0.486111111, 0.957286432, 0.169179846}, {
              1, 0, 0, 1, 0, 0.541666667, 0.922110553, 0.36410445}, {
              0, 0, 0, 0, 0, 0.506944444, 0.942211055, 0.250091946}, {
              0, 0, 0, 0, 0, 0.5, 0.91959799, 0.228025009}, {
              0, 0, 0, 0, 0, 0.527777778, 0.929648241, 0.316292755}, {
              0, 1, 0, 0, 0, 0.541666667, 0.972361809, 0.139757264}, {
              0, 0, 0, 1, 0, 0.618055556, 0.93718593, 0.371460096}, {
              0, 0, 0, 0, 1, 0.513888889, 0.912060302, 0.294225818}, {
              0, 0, 1, 0, 0, 0.548611111, 0.944723618, 0.327326223}, {
              0, 0, 0, 0, 0, 0.534722222, 0.859296482, 0.514895182}, {
              0, 1, 1, 0, 0, 0.604166667, 0.917085427, 0.290547996}, {
              0, 0, 1, 0, 0, 0.5625, 0.904522613, 0.261125414}, {
              0, 0, 1, 1, 0, 0.569444444, 0.944723618, 0.360426627}, {
              0, 0, 1, 0, 0, 0.555555556, 0.826633166, 0.415593968}, {
              1, 1, 1, 0, 0, 0.5625, 0.91959799, 0.426627437}, {
              0, 0, 1, 0, 1, 0.569444444, 0.929648241, 0.268481059}, {
              0, 1, 0, 0, 0, 0.569444444, 0.904522613, 0.246414123}, {
              0, 0, 0, 1, 0, 0.652777778, 0.904522613, 0.275836705}, {
              1, 0, 0, 0, 0, 0.555555556, 0.91959799, 0.286870173}, {
              1, 0, 0, 0, 0, 0.444444444, 0.98241206, 0.275836705}, {
              0, 0, 1, 1, 0, 0.631944444, 0.93718593, 0.228025009}, {
              0, 1, 0, 1, 1, 0.645833333, 0.954773869, 1.}, {
              1, 1, 1, 1, 1, 0.520833333, 0.929648241, 0.426627437}, {
              1, 1, 1, 1, 0, 0.875, 0.954773869, 0.441338727}, {
              1, 0, 1, 1, 0, 0.555555556, 0.904522613, 0.573004781}, {
              1, 0, 1, 1, 1, 0.902777778, 0.93718593, 0.492828246}, {
              1, 0, 1, 1, 0, 0.625, 0.904522613, 0.532548731}, {
              0, 1, 1, 1, 1, 0.451388889, 0.904522613, 0.522250828}, {
              0, 1, 1, 1, 1, 0.5625, 0.904522613, 0.330636263}, {
              0, 1, 1, 1, 1, 0.694444444, 0.969849246, 0.891504229}, {
              1, 1, 1, 1, 1, 0.902777778, 0.944723618, 0.474439132}, {
              1, 1, 1, 1, 1, 0.840277778, 0.964824121, 0.963221773}, {
              1, 1, 1, 1, 1, 0.944444444, 0.974874372, 0.484001471}, {
              1, 1, 1, 1, 1, 0.694444444, 0.954773869, 0.456050018}, {
              1, 1, 1, 1, 0, 0.763888889, 0.954773869, 0.446119897}, {
              1, 1, 1, 1, 1, 0.833333333, 0.954773869, 0.4336153}, {
              0, 1, 0, 1, 1, 0.763888889, 0.989949749, 0.502758367}, {
              0, 1, 1, 1, 1, 0.861111111, 0.967336683, 0.464509011}}, 
            "Output" -> {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
              0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
             1}], "Predictions" -> {0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
           0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
           1, 1, 1, 1}, "LogProbabilities" -> CompressedData["
1:eJwBkQJu/SFib1JlAgAAACgAAAACAAAATmkfCGTXxL+iZrNWjFP+v2Tzz3I/
2/O/YPNL6k7W1b8w7QUp2cZFv5KFijpMRB3AzuDhEHI/rr+vnvz9yN0GwNfw
vtIk8T2/X5L09+nDHsC5FEKTqDMzv8rDofhfRSDAEZjjbhIrT7+NP2s4SNUb
wDc+T1iThUG/tvHI3dgiHsBcqk/xMGuZvzyYEuC+qg3Ad6T5QW6Yeb+Td7LE
W1AUwA6oHPTTSpC/XIE+IEuYEMAbPW7XNSV4v060pyvmixTAy92s8Zuvnr8K
ZH9DTy4MwMKQpZRDB3e/8BDi2kK8FMA8XRNshNTNv3jkjrPiIfm/IKGsdrpZ
k79uMFu/U9MPwBXuC5AQm9m/tFyU40/A8b8kdVVGmrOyv27+Pf0VOQXAGget
1JrAU7+ggtcZtOIawJFJRtAbWXy/MjEP8xroE8AJuPX7MEljv5l7ZCD7NRjA
r4tBIcPXZL/DtXBxlOYXwCeC8MaJHa6/j7umqYLmBsCtpWgI5W8dwBXaOgBo
3kS/w/TZk5meD8CqKTK2LtyTv/NmDJOG/wbAw3OHwiu9rb/nFEl8K6oBwKVf
BxCOzr2/Hk8an70bEsB+hHz4g0OGv9g/N3AP9v6/nIQH28T2w7/HpHTsLs4L
wH6BefmNF6C/cT/rFXWa+r/IUEaNuOnKv2djW7/DryHAn3hE8dTrIr+91b8J
qggWwCkZl17RoXC/ggGa1fiBJsC505amcCzrvu7xJ5i0xBfAeuWWv3WLZb8I
y/IwuYYTwFUts5rmL3+/+WN9S2V2BcDz+x3xRyGyv3ZUsP0gxhPAMDdIPdFO
fb9J7jUYq2IBwENzw/y17r6/B1HnWNjXEMC8607965uOv5X8V9k=
           "], "CountMatrix" -> {{22, 1, 0}, {0, 17, 0}}, 
          "IndicesMatrix" -> {{{1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 
             15, 16, 17, 18, 19, 20, 21, 22, 23}, {2}, {}}, {{}, {24, 25, 26, 
             27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40}, {}}}, 
          "ExtendedClasses" -> {0, 1}, "Version" -> {11., 1}]]}; 
     Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.699260516003457*^9},ExpressionUUID->"0db840dd-b708-409b-889f-\
25e65024ea1c"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Support vector machine model", "Section",
 CellChangeTimes->{{3.6992531611789207`*^9, 3.699253173018572*^9}, {
  3.69925500258527*^9, 
  3.6992550036089296`*^9}},ExpressionUUID->"4f064d8b-df77-4d69-b658-\
c98d83f25449"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"svModel", "=", 
   RowBox[{"Classify", "[", 
    RowBox[{
     RowBox[{"dataTrain", "\[Rule]", "\"\<Histo\>\""}], ",", 
     RowBox[{"Method", "\[Rule]", "\"\<SupportVectorMachine\>\""}]}], "]"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"svModelCM", "=", 
   RowBox[{"ClassifierMeasurements", "[", 
    RowBox[{"svModel", ",", "dataTestModel"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6992531757979608`*^9, 
  3.6992532400992603`*^9}},ExpressionUUID->"09bb0a27-2750-4033-864c-\
f7968e4f7f4e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"svModelCM", "[", "prop", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"prop", ",", 
     RowBox[{"svModelCM", "[", "\"\<Properties\>\"", "]"}]}], "}"}], ",", 
   RowBox[{"SaveDefinitions", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6992535114111795`*^9, 
  3.699253516514535*^9}},ExpressionUUID->"7d8812c8-d135-4a76-bfa9-\
79d026063ceb"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`prop$$ = "ConfusionMatrixPlot", 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`prop$$], {
      "Accuracy", "AccuracyRejectionPlot", "ClassRejectionRate", 
       "ConfusionFunction", "ConfusionMatrix", "ConfusionMatrixPlot", "Error",
        "FScore", "InversePerplexity", "Likelihood", "LogLikelihood", 
       "LogLikelihoodRate", "Perplexity", "Precision", "Properties", "Recall",
        "RejectionRate"}}}, Typeset`size$$ = {272., {139., 146.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    False, $CellContext`prop$36706$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`prop$$ = "Accuracy"}, 
      "ControllerVariables" :> {
        Hold[$CellContext`prop$$, $CellContext`prop$36706$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> $CellContext`svModelCM[$CellContext`prop$$], 
      "Specifications" :> {{$CellContext`prop$$, {
         "Accuracy", "AccuracyRejectionPlot", "ClassRejectionRate", 
          "ConfusionFunction", "ConfusionMatrix", "ConfusionMatrixPlot", 
          "Error", "FScore", "InversePerplexity", "Likelihood", 
          "LogLikelihood", "LogLikelihoodRate", "Perplexity", "Precision", 
          "Properties", "Recall", "RejectionRate"}}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{338., {205., 213.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({$CellContext`svModelCM = ClassifierMeasurementsObject[
         Association["Model" -> ClassifierFunction[
            Association[
            "Basic" -> Association[
              "ExampleNumber" -> 160, "FeatureNumber" -> 8, "ClassNumber" -> 
               2], "Input" -> 
             Association[
              "Preprocessor" -> MachineLearning`MLProcessor["ToMLDataset", 
                 Association[
                 "Input" -> 
                  Association[
                   "MOP" -> Association["Type" -> "Boolean"], "Anorexia" -> 
                    Association["Type" -> "Boolean"], "NV" -> 
                    Association["Type" -> "Boolean"], "RLQP" -> 
                    Association["Type" -> "Boolean"], "Rebound" -> 
                    Association["Type" -> "Boolean"], "HR" -> 
                    Association["Type" -> "Numerical"], "Temp" -> 
                    Association["Type" -> "Numerical"], "WCC" -> 
                    Association["Type" -> "Numerical"]], "Output" -> 
                  Association[
                   "f1" -> Association["Type" -> "Boolean", "Weight" -> 1], 
                    "f2" -> Association["Type" -> "Boolean", "Weight" -> 1], 
                    "f3" -> Association["Type" -> "Boolean", "Weight" -> 1], 
                    "f4" -> Association["Type" -> "Boolean", "Weight" -> 1], 
                    "f5" -> Association["Type" -> "Boolean", "Weight" -> 1], 
                    "f6" -> Association["Type" -> "Numerical", "Weight" -> 1],
                     "f7" -> Association[
                    "Type" -> "Numerical", "Weight" -> 1], "f8" -> 
                    Association["Type" -> "Numerical", "Weight" -> 1]], 
                  "Preprocessor" -> MachineLearning`MLProcessor["Sequence", 
                    Association["Processors" -> {
                    MachineLearning`MLProcessor["FromNamedFeatures", 
                    Association[
                    "FeatureNames" -> {
                    "MOP", "Anorexia", "NV", "RLQP", "Rebound", "HR", "Temp", 
                    "WCC"}]], 
                    MachineLearning`MLProcessor["Transpose", 
                    Association["FeatureNumber" -> 8]], 
                    MachineLearning`MLProcessor["WrapMLDataset", 
                    Association[
                    "FeatureTypes" -> {
                    "Boolean", "Boolean", "Boolean", "Boolean", "Boolean", 
                    "Numerical", "Numerical", "Numerical"}, 
                    "FeatureKeys" -> {
                    "f1", "f2", "f3", "f4", "f5", "f6", "f7", "f8"}, 
                    "FeatureWeights" -> Automatic, "ExampleWeights" -> 
                    Automatic, "RawExample" -> 
                    Missing["KeyAbsent", "RawExample"]]]}]], "ScalarFeature" -> 
                  False, "Invertibility" -> "Perfect", "Missing" -> 
                  "Allowed"]], "Processor" -> 
               MachineLearning`MLProcessor["Sequence", 
                 Association[
                 "Input" -> 
                  Association[
                   "f6" -> Association["Type" -> "Numerical", "Weight" -> 1], 
                    "f7" -> Association["Type" -> "Numerical", "Weight" -> 1],
                     "f8" -> Association[
                    "Type" -> "Numerical", "Weight" -> 1], "f1" -> 
                    Association["Type" -> "Boolean", "Weight" -> 1], "f2" -> 
                    Association["Type" -> "Boolean", "Weight" -> 1], "f3" -> 
                    Association["Type" -> "Boolean", "Weight" -> 1], "f4" -> 
                    Association["Type" -> "Boolean", "Weight" -> 1], "f5" -> 
                    Association["Type" -> "Boolean", "Weight" -> 1]], 
                  "Output" -> 
                  Association[
                   "((f1f2f3f4f5)(f6f7f8))" -> 
                    Association["Type" -> "NumericalVector", "Weight" -> 8.]],
                   "Processors" -> {
                    MachineLearning`MLProcessor["Threads", 
                    Association[
                    "Input" -> 
                    Association[
                    "f6" -> Association["Type" -> "Numerical", "Weight" -> 1],
                     "f7" -> Association[
                    "Type" -> "Numerical", "Weight" -> 1], "f8" -> 
                    Association["Type" -> "Numerical", "Weight" -> 1], "f1" -> 
                    Association["Type" -> "Boolean", "Weight" -> 1], "f2" -> 
                    Association["Type" -> "Boolean", "Weight" -> 1], "f3" -> 
                    Association["Type" -> "Boolean", "Weight" -> 1], "f4" -> 
                    Association["Type" -> "Boolean", "Weight" -> 1], "f5" -> 
                    Association["Type" -> "Boolean", "Weight" -> 1]], 
                    "Output" -> 
                    Association[
                    "(f6f7f8)" -> 
                    Association["Type" -> "NumericalVector", "Weight" -> 3], 
                    "(f1f2f3f4f5)" -> 
                    Association["Type" -> "BooleanVector", "Weight" -> 5]], 
                    "Processors" -> {
                    MachineLearning`MLProcessor["ToVector", 
                    Association[
                    "Input" -> 
                    Association[
                    "f6" -> Association["Type" -> "Numerical", "Weight" -> 1],
                     "f7" -> Association[
                    "Type" -> "Numerical", "Weight" -> 1], "f8" -> 
                    Association["Type" -> "Numerical", "Weight" -> 1]], 
                    "Output" -> 
                    Association[
                    "(f6f7f8)" -> 
                    Association["Type" -> "NumericalVector", "Weight" -> 3]], 
                    "Version" -> {11., 1}, "ID" -> 7348453372834640353, 
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed"]], 
                    MachineLearning`MLProcessor["ToVector", 
                    Association[
                    "Input" -> 
                    Association[
                    "f1" -> Association["Type" -> "Boolean", "Weight" -> 1], 
                    "f2" -> Association["Type" -> "Boolean", "Weight" -> 1], 
                    "f3" -> Association["Type" -> "Boolean", "Weight" -> 1], 
                    "f4" -> Association["Type" -> "Boolean", "Weight" -> 1], 
                    "f5" -> Association["Type" -> "Boolean", "Weight" -> 1]], 
                    "Output" -> 
                    Association[
                    "(f1f2f3f4f5)" -> 
                    Association["Type" -> "BooleanVector", "Weight" -> 5]], 
                    "Version" -> {11., 1}, "ID" -> 7297469928512000255, 
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed"]]}, 
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed"]], 
                    MachineLearning`MLProcessor["ConformBooleanVector", 
                    Association[
                    "Input" -> 
                    Association[
                    "(f1f2f3f4f5)" -> 
                    Association["Type" -> "BooleanVector", "Weight" -> 5]], 
                    "Version" -> {11., 1}, "ID" -> 3741726543812385040, 
                    "Output" -> 
                    Association[
                    "(f1f2f3f4f5)" -> 
                    Association["Type" -> "BooleanVector", "Weight" -> 5]], 
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed"]], 
                    MachineLearning`MLProcessor[
                    "BooleanVectorToNumericalVector", 
                    Association[
                    "Input" -> 
                    Association[
                    "(f1f2f3f4f5)" -> 
                    Association["Type" -> "BooleanVector", "Weight" -> 5]], 
                    "Version" -> {11., 1}, "ID" -> 6968955062918609561, 
                    "Output" -> 
                    Association[
                    "(f1f2f3f4f5)" -> 
                    Association["Type" -> "NumericalVector", "Weight" -> 5]], 
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed"]], 
                    MachineLearning`MLProcessor["MergeVectors", 
                    Association[
                    "Input" -> 
                    Association[
                    "(f1f2f3f4f5)" -> 
                    Association["Type" -> "NumericalVector", "Weight" -> 5], 
                    "(f6f7f8)" -> 
                    Association["Type" -> "NumericalVector", "Weight" -> 3]], 
                    "Spans" -> {
                    Span[1, 5], 
                    Span[6, 8]}, "Wrappers" -> {Identity, Identity}, "Output" -> 
                    Association[
                    "((f1f2f3f4f5)(f6f7f8))" -> 
                    Association[
                    "Weight" -> {1., 1., 1., 1., 1., 1., 1., 1.}, "Type" -> 
                    "NumericalVector"]], "Version" -> {11., 1}, "ID" -> 
                    5746057089875537750, "Invertibility" -> "Perfect", 
                    "Missing" -> "Allowed"]], 
                    MachineLearning`MLProcessor["ImputeMissing", 
                    Association[
                    "Input" -> 
                    Association[
                    "((f1f2f3f4f5)(f6f7f8))" -> 
                    Association[
                    "Weight" -> {1., 1., 1., 1., 1., 1., 1., 1.}, "Type" -> 
                    "NumericalVector"]], 
                    "Imputer" -> (DimensionReducerFunction[
                    Association[
                    "Basic" -> 
                    Association[
                    "ExampleNumber" -> 160, "InitialDimension" -> 8, 
                    "FinalDimension" -> 8], "Imputer" -> 
                    MachineLearning`PackageScope`Preprocessor[
                    "InputMissing", {{0.}, {1.}, {1.}, {1.}, {1.}, {0.625}, {
                    0.929648241}, {0.4266274365}}], "Preprocessor" -> 
                    MachineLearning`PackageScope`Preprocessor[
                    "Standardize", {{0.45625000000000004`, 0.6937500000000001,
                     0.64375, 0.7375, 0.6000000000000001, 0.63381076385625, 
                    0.9301350502187504, 0.4517285766937499}, {
                    0.4980822598724198, 0.4609348517873075, 
                    0.4788903189622628, 0.4399928977699513, 
                    0.4898979486566352, 0.12410637823757366`, 
                    0.025293872837279484`, 0.1709573154055712}}], 
                    "Postprocessor" -> 
                    MachineLearning`PackageScope`Preprocessor["Identity"], 
                    "Model" -> 
                    Association[
                    "Method" -> "Linear", "Matrix" -> CompressedData["
1:eJwBEQLu/SFib1JlAgAAAAgAAAAIAAAAI3l4kdq/1L/fG/pCRiPJv/ylEjgL
mto/ddihkmmY5b9xr1llLg3Wv+6NYXx8uMi/yNpo/k380L/XNlJyfuukP5F/
HZoXztW/lm2qGwrVpL/t1qAjOSzkv6biVRpcPtG/sCcDAAxr0j8gqobpfEfY
v8l9vfUqVLw/WLGdi1Ok2j8xUD7h/FfXv+UisyfOBtq/St+gHIgyvr9CH/LW
QDjEP6kb55U4wLu/AW8vXfuw5j8kiaBlHanEv0IFs3+iXNY/J7ZN8Go62r9T
n1SYyCyyvwigdtPsOdq/MmzDeU8Avz8Xit+fwtLIv12RmONn062/2mDVGVnN
y7+YwCD4uN3nv9Na4s6lO9e/ez/Z8/7Joz9jEgMBQmrHP007okT9tOA/owH+
UoYX4L/4VDEL27vXv7RNtJV9XdU/z4FzlSkMzz9BbW+eB+zVv4mKfsmhGuI/
f1a6MUGHyj/bpTriscfMPz2NsG1bZNM/8Bu/iKNWoL+2H3X5zADjv8cmbxOr
qsM/qhkX9ql21r8CcjdjlQbhP/QL3+ensq0/1ifLZRFg07+TahDiqqyMP/AD
mKigodk/HyBo9/QS4j9ufKFKM7HBv22+KNMUytS/t3ES+X2B27+K3hc2qj/a
P5AkSN6598A/TAH0xFBY5D874qauxOK9v5NY5L9Qm88/4mbyWFQ0y7+gZhW7

                    "]], "Options" -> Missing[], "Log" -> Missing[]]][#, 
                    "ImputedVectors", PerformanceGoal -> "Quality"]& ), 
                    "VectorLength" -> 8, "Output" -> 
                    Association[
                    "((f1f2f3f4f5)(f6f7f8))" -> 
                    Association["Type" -> "NumericalVector", "Weight" -> 8.]],
                     "Type" -> "NumericalVector", "Version" -> {11., 1}, "ID" -> 
                    3757288526691392232, "Invertibility" -> "Perfect", 
                    "Missing" -> "Imputed"]], 
                    MachineLearning`MLProcessor["Standardize", 
                    Association[
                    "Input" -> 
                    Association[
                    "((f1f2f3f4f5)(f6f7f8))" -> 
                    Association["Type" -> "NumericalVector", "Weight" -> 8.]],
                     "Mean" -> {0.45625000000000004`, 0.6937500000000001, 
                    0.64375, 0.7375, 0.6000000000000001, 0.63381076385625, 
                    0.9301350502187504, 0.4517285766937499}, 
                    "StandardDeviation" -> {0.4980822597724195, 
                    0.46093485168730725`, 0.4788903188622631, 
                    0.43999289766995103`, 0.4898979485566356, 
                    0.12410637813757323`, 0.025293872737274296`, 
                    0.17095731530557176`}, "Output" -> 
                    Association[
                    "((f1f2f3f4f5)(f6f7f8))" -> 
                    Association["Type" -> "NumericalVector", "Weight" -> 8.]],
                     "Version" -> {11., 1}, "ID" -> 5326171277148534468, 
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed"]]}, 
                  "Invertibility" -> "Perfect", "Missing" -> "Imputed"]]], 
             "Output" -> 
             Association[
              "Preprocessor" -> MachineLearning`MLProcessor["ToMLDataset", 
                 Association[
                 "Input" -> 
                  Association["f1" -> Association["Type" -> "Nominal"]], 
                  "Output" -> 
                  Association[
                   "f1" -> Association["Type" -> "Nominal", "Weight" -> 1]], 
                  "Preprocessor" -> MachineLearning`MLProcessor["Sequence", 
                    Association["Processors" -> {
                    MachineLearning`MLProcessor["List"], 
                    MachineLearning`MLProcessor["WrapMLDataset", 
                    Association[
                    "FeatureTypes" -> {"Nominal"}, "FeatureKeys" -> {"f1"}, 
                    "FeatureWeights" -> Automatic, "ExampleWeights" -> 
                    Automatic, "RawExample" -> 
                    Missing["KeyAbsent", "RawExample"]]]}]], "ScalarFeature" -> 
                  True, "Invertibility" -> "Perfect", "Missing" -> 
                  "Allowed"]], "Processor" -> 
               MachineLearning`MLProcessor["Sequence", 
                 Association[
                 "Input" -> 
                  Association[
                   "f1" -> Association["Type" -> "Nominal", "Weight" -> 1]], 
                  "Output" -> 
                  Association[
                   "f1" -> Association["Type" -> "Nominal", "Weight" -> 1]], 
                  "Processors" -> {
                    MachineLearning`MLProcessor["ToVector", 
                    Association[
                    "Input" -> 
                    Association[
                    "f1" -> Association["Type" -> "Nominal", "Weight" -> 1]], 
                    "Output" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NominalVector", "Weight" -> 1]], 
                    "Version" -> {11., 1}, "ID" -> 3145515684396292870, 
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed"]], 
                    MachineLearning`MLProcessor["IntegerEncodeNominalVector", 
                    Association[
                    "Input" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NominalVector", "Weight" -> 1]], "Index" -> {
                    Association[0 -> 1, 1 -> 2]}, "Version" -> {11., 1}, "ID" -> 
                    454370471410997882, "Output" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NominalVector", "Weight" -> 1]], 
                    "Invertibility" -> "Perfect", "Missing" -> "Forbidden"]], 
                    MachineLearning`MLProcessor["FromVector", 
                    Association[
                    "Input" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NominalVector", "Weight" -> 1]], "Output" -> 
                    Association[
                    "f1" -> Association["Type" -> "Nominal", "Weight" -> 1]], 
                    "Version" -> {11., 1}, "ID" -> 8795119181625189023, 
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed"]], 
                    MachineLearning`MLProcessor["FirstValues", 
                    Association[
                    "Info" -> Association[
                    "Type" -> "Nominal", "Weight" -> 1, "SetSize" -> 2], 
                    "Key" -> "f1", "Invertibility" -> "Perfect", "Missing" -> 
                    "Allowed"]]}, "Invertibility" -> "Perfect", "Missing" -> 
                  "Forbidden"]], "ProbabilityPostprocessor" -> Identity, 
               "Name" -> "class", "Marginal" -> 
               Association[0 -> 0.4135802469135802, 1 -> 0.5864197530864197]],
              "Combiner" -> MachineLearning`PackageScope`Combiner["First"], 
             "Decision" -> 
             Association[
              "Prior" -> Automatic, "Utility" -> 
               SparseArray[
                Automatic, {2, 3}, 0., {
                 1, {{0, 2, 4}, {{1}, {2}, {1}, {3}}}, {-Infinity, 1., -
                   Infinity, 1.}}], "Threshold" -> 0, "TieBreaker" -> 
               RandomChoice, "PerformanceGoal" -> Automatic, 
               "BatchProcessing" -> Automatic], "Models" -> {
               Association[
               "Method" -> "SupportVectorMachine", "SVMParameters" -> 
                Association[
                 "DataSize" -> All, "CrossValidation" -> Automatic, 
                  "KernelType" -> "RadialBasisFunction", 
                  "GammaScalingParameter" -> 1/(8 Sqrt[2]), 
                  "SoftMarginParameter" -> 2.639015821545789, 
                  "PolynomialDegree" -> 3, "BiasParameter" -> 0, 
                  "MulticlassMethod" -> Automatic, 
                  "HyperparameterOptimizationMethod" -> Automatic, 
                  "shrinking" -> True, "cacheSize" -> 100], 
                "HyperparameterOptimizationMethod" -> "GridSearch", 
                "TrainedModel" -> {
                  Association["supportVectors" -> CompressedData["
1:eJyVV2lQU2cUDTtGEBQVFbDgoE5F3KgLgv0ispaJVCooYnFhwDLigjLBBYpF
sXYI4NRKXGoRra0IUYoGC7R8MQ46iiAom8GCJgRkCSSQxAhV6p+bzrzMm/fx
4/08c+8995xzv+e2c194nCmLxVr78bP++C1+tsFnNEyJz2o3PX05VY9l3mOF
0+u6UWREntkWRzlas9Bm/9+uvYhvUrF82YwxlLh5UvKinHa0TsL1Sj9ViwG/
wN7DTOqnQNHn4/+1y9BieYqi8nTDCAb8d/9IFtg1aTDgG4sexqzmqfDUwnQV
P0WNAE9X/3C3b+bzW23IZfKNU8X3h1DNnYqbwWwxZup/iduEqTnnhnFT36Bw
SqwMc3X1PzdxG7EuYtZl3jw1MX5F6hue2aY+bBsSejc8ugoX9RUKm11uGc1P
139mqU+BuUc/mpgde6wlWYYk8a6a0RY5bX3gD+qHnQ18MD1ahcu3XzzR6jGI
rp1Rdbrv6WDkH/AXDwdGOVarUP6Egsl+ojO4uG1uVcCJ54gOT52/+eV5K55n
Jz60u9qu39tM7JQh9p7F7iXe352orhd13PdoKMnyaaJai9o6vdOCjipp+6fi
gX/YX8BPwi1vg+oZ+TPw7yOIe/FWgefgVLPUvabinjN5Ne7H/kJUPNP8yt8U
6olXTcSOv7ho2Y6vifsPiVzj3WAlxWmX0go8SuS43yekO1U8atQ/HR70C/ph
u0yLddZrGetD//OT7iWuddehbR4aT9uyEfQ1Ct1ZbNNu2B+1PlU/M+Iv7ExX
1yNS/VH7b/7q83UF23sR7C81QCH9PUHJ6D/AD0gVjfFuSpz3pzQ8z0uFYz4J
0vWf62Lsn8of4K0qq3nJqxSM+oX5Y18FCK8uLMXgnxi7AI5tx5BRfTr/An+g
H+CfND+zZYHpX/iyxKweax7vsRqvFkTctZlUQ6sfav2ZwQPTAk82IsBvkLhK
/T6UIdL5Qf9BCUtcb3TWYLTQ4WhkRS9jfehfIykdC3ySg1ueuet1c/WG/ZHq
/8ij06su+Hcg2N++rKVNPOU74vwcWsQRJSY8xHuu6Bqn5+pwFyspfXOdija/
qfj92YIuee59JMmL6BYua0WT8r+pPO4xQJz/LuaCLGlNFzqguKmKevsAzWvY
cS0sTM+Ip94vqJ9brBbh+XIj/dL5H/gD/453/6Bf8C/p/QN84fLBuiL2sCG/
K9aXIOfZKsb9A14z1O008mMdBv7SLEZjXjxqovUflf/ozLyTB/J1//tfLIy9
t1RKnF/gf8DntIvrNpbcNrqfdPVZbDTHuvydgX/S9w/MT+0f+Cfd/yGLngYb
p1bEX+9su7n+DbKaIstoXvKS9v5R/Qvvr0j7qG2J3kq8SXD9Bl/QM+754X5R
7/d483d3iZ+9vFbNOD/Uv3y9hJcaacJx+Mw+07OlwaB/0vyF/NLd/eHTyEIp
nmPd1lHabFyfbv7hmYM7ipOHkXNwG7dlhiVncWHrrVPV9PlDnV96zi+NfbDZ
MP+HhMtxKVWvjfZHh4f9g34u6fsublMOEPf/RG8+GnjTlOPK/zK5Vv4ebY3b
Gl59z4RDun94v8L9CAiVrJSUvSfOb2r+7zXNTz6eIiPOX3g/1nS+5guPjCER
Lzi2MrSN8X4D/mm208Fgjtqwf6r+Sd+P9b5u0bszXmGNg1gtWqEhzq89dwaf
O6yUI9BvblWUqKyuk/h+gf7g/yvKs9rSYraCOP/h/Qr3J8s8q4zlV0vsP/B/
92J/311cCw71/Ux6/0H/vzp+r9Cay4jzB/ID/t/yb8/08t8oI9Y/3G/IryfF
tq9EIcz+B/7CNyBuUvljBPWHTXa5Cryaif0P+gH9tSddifJf9IYYf80y84/A
w6ZiyO8im29NjihYHNL5T15VjOzSKg33i79U3Vru1Iv/A6D4S/Y=
                    "], "supportVectorCoefficients" -> CompressedData["
1:eJxTTMoPSmVkYGBwBOLc4J3BW2RYHbjey8vfn/rSHsZf9kOsZMau73A+jN7d
/WTXph3b7Z3/foree4jFoUShe13ngdcY6ias2L3Q79tfe/bFlaZr1j2z/76d
a7vKrDP2FhEp00Ri39i/iz21MD/5k33axdMm8uKXMfRneS+Zr/iIAc4v5758
Z8qaX/at23LS/797YR/xb73kTc1PcH1rJoatc9z5xP5+4ZTpiquf2jN5PMyM
ZLmEYS4hWu7uX+Elwh/sd5pu2Pp8HsMBqDic9v7n9LIynQVDfAuXm6HgzV/7
YfxXKrmlfbaf4Hw15raKoIdf9tvfr9e/wYpQt1havWxz4Pb96Oax+B/r5C79
vv+5/4H3aXE/4PI8K/35/t38jaF+lYXRsu+c3+HipocqV55RY8JwJ4x2cmrw
+F5wdX/LBfPfod8W7QcAYPHywA==
                    "], "rho" -> 0.0727259588783477]}, 
                "ProbabilityCoefficients" -> {{-3.5463124702732154`, \
-0.2553751187006311}}, "MulticlassMethod" -> "OneVersusOne", "FeatureNumber" -> 
                8, "Processor" -> MachineLearning`MLProcessor["Sequence", 
                  Association[
                  "Input" -> 
                   Association[
                    "((f1f2f3f4f5)(f6f7f8))" -> 
                    Association["Type" -> "NumericalVector", "Weight" -> 8.]],
                    "Output" -> 
                   Association[
                    "((f1f2f3f4f5)(f6f7f8))" -> 
                    Association["Type" -> "NumericalVector", "Weight" -> 8.]],
                    "Processors" -> {
                    MachineLearning`MLProcessor[
                    "DimensionReduceNumericalVector", 
                    Association[
                    "Input" -> 
                    Association[
                    "((f1f2f3f4f5)(f6f7f8))" -> 
                    Association["Type" -> "NumericalVector", "Weight" -> 8.]],
                     "Reducer" -> Normal, "Version" -> {11., 1}, "ID" -> 
                    4063133793627507229, "Output" -> 
                    Association[
                    "((f1f2f3f4f5)(f6f7f8))" -> 
                    Association["Type" -> "NumericalVector", "Weight" -> 8.]],
                     "Invertibility" -> "Approximate", "Missing" -> 
                    "Imputed"]], 
                    MachineLearning`MLProcessor["FirstValues", 
                    Association[
                    "Info" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 8.], "Key" -> 
                    "((f1f2f3f4f5)(f6f7f8))", "Invertibility" -> "Perfect", 
                    "Missing" -> "Allowed"]]}, "Invertibility" -> 
                   "Approximate", "Missing" -> "Imputed"]]]}, "Log" -> 
             Association[
              "TrainingTime" -> 0.3865906895068302, "MaxTrainingMemory" -> 
               446456, "DataMemory" -> 233944, "FunctionMemory" -> 109800, 
               "LanguageVersion" -> {11., 1}, "Date" -> 
               DateObject[{2017, 3, 23}, 
                 TimeObject[{14, 22, 37.6168576}, TimeZone -> 2.], TimeZone -> 
                 2.], "ProcessorCount" -> 2, "ProcessorType" -> "x86-64", 
               "OperatingSystem" -> "Windows", "SystemWordLength" -> 64, 
               "Evaluations" -> {}]]], "TestSet" -> 
          Association[
           "Input" -> {{
              0, 1, 1, 1, 0, 0.555555556, 0.904522613, 0.257447591}, {
              0, 0, 1, 1, 1, 0.833333333, 0.962311558, 0.290547996}, {
              1, 0, 0, 0, 0, 0.486111111, 0.957286432, 0.169179846}, {
              1, 0, 0, 1, 0, 0.541666667, 0.922110553, 0.36410445}, {
              0, 0, 0, 0, 0, 0.506944444, 0.942211055, 0.250091946}, {
              0, 0, 0, 0, 0, 0.5, 0.91959799, 0.228025009}, {
              0, 0, 0, 0, 0, 0.527777778, 0.929648241, 0.316292755}, {
              0, 1, 0, 0, 0, 0.541666667, 0.972361809, 0.139757264}, {
              0, 0, 0, 1, 0, 0.618055556, 0.93718593, 0.371460096}, {
              0, 0, 0, 0, 1, 0.513888889, 0.912060302, 0.294225818}, {
              0, 0, 1, 0, 0, 0.548611111, 0.944723618, 0.327326223}, {
              0, 0, 0, 0, 0, 0.534722222, 0.859296482, 0.514895182}, {
              0, 1, 1, 0, 0, 0.604166667, 0.917085427, 0.290547996}, {
              0, 0, 1, 0, 0, 0.5625, 0.904522613, 0.261125414}, {
              0, 0, 1, 1, 0, 0.569444444, 0.944723618, 0.360426627}, {
              0, 0, 1, 0, 0, 0.555555556, 0.826633166, 0.415593968}, {
              1, 1, 1, 0, 0, 0.5625, 0.91959799, 0.426627437}, {
              0, 0, 1, 0, 1, 0.569444444, 0.929648241, 0.268481059}, {
              0, 1, 0, 0, 0, 0.569444444, 0.904522613, 0.246414123}, {
              0, 0, 0, 1, 0, 0.652777778, 0.904522613, 0.275836705}, {
              1, 0, 0, 0, 0, 0.555555556, 0.91959799, 0.286870173}, {
              1, 0, 0, 0, 0, 0.444444444, 0.98241206, 0.275836705}, {
              0, 0, 1, 1, 0, 0.631944444, 0.93718593, 0.228025009}, {
              0, 1, 0, 1, 1, 0.645833333, 0.954773869, 1.}, {
              1, 1, 1, 1, 1, 0.520833333, 0.929648241, 0.426627437}, {
              1, 1, 1, 1, 0, 0.875, 0.954773869, 0.441338727}, {
              1, 0, 1, 1, 0, 0.555555556, 0.904522613, 0.573004781}, {
              1, 0, 1, 1, 1, 0.902777778, 0.93718593, 0.492828246}, {
              1, 0, 1, 1, 0, 0.625, 0.904522613, 0.532548731}, {
              0, 1, 1, 1, 1, 0.451388889, 0.904522613, 0.522250828}, {
              0, 1, 1, 1, 1, 0.5625, 0.904522613, 0.330636263}, {
              0, 1, 1, 1, 1, 0.694444444, 0.969849246, 0.891504229}, {
              1, 1, 1, 1, 1, 0.902777778, 0.944723618, 0.474439132}, {
              1, 1, 1, 1, 1, 0.840277778, 0.964824121, 0.963221773}, {
              1, 1, 1, 1, 1, 0.944444444, 0.974874372, 0.484001471}, {
              1, 1, 1, 1, 1, 0.694444444, 0.954773869, 0.456050018}, {
              1, 1, 1, 1, 0, 0.763888889, 0.954773869, 0.446119897}, {
              1, 1, 1, 1, 1, 0.833333333, 0.954773869, 0.4336153}, {
              0, 1, 0, 1, 1, 0.763888889, 0.989949749, 0.502758367}, {
              0, 1, 1, 1, 1, 0.861111111, 0.967336683, 0.464509011}}, 
            "Output" -> {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
              0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
             1}], "Predictions" -> {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
           0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
           1, 1, 1, 1}, "LogProbabilities" -> CompressedData["
1:eJwBkQJu/SFib1JlAgAAACgAAAACAAAAHD8CLZvJ2r8RTfthvirxvyGt4TIc
ZdO/GoVsWhF39b9Cfb+77Gd9v2TlPlq4whPAvkLZHnZ7v7+LGTmYvUABwAXS
vvlVEli/PvmJ4lQYGsCiH7DN8FdPv5FZWvCKzxvA3RiAO8KoWL8JRVB9p/8Z
wARiNmcb/Fy/DRDSL0paGcA3x5pZJfSRv6R67hSwNRDAuFj89vmber+KbHTf
tCgUwBd6nUeBEJS/Brlou9WJD8BXZVufwCZ+vw0xDtYtqRPAoYNdjAGbpL+m
ffbL0dwJwPdD9hVGaoS/QUNu2Ap0EsD2z1UzVmigv1aNYCUKpwvAFFSU1FPT
kb956TVB9jwQwOlp+Q+SxdK/ImFNm+Pp9b8Ei7CWWxm1v5xvIEqFSwTAi6mb
gseJRr+g8YK3HSEdwI3Po9Pe2JS/lPx2vz48D8AQNwldATJgvwl1en2h6BjA
tTKuRdOVor+FFcPbIqwKwGzmgoW9ZJ6/2ydohaFBDMCBdwHUA8MQwG98zL4v
Po+/ct9eDX1fGMD49owB2IRivyVzrvxQ8fS/TcVKecEm1L/yGgRuyxgFwMTa
72qVArO/kooHSg9mBsCF/EvURRCwv9qb6jdS1QLAS8xsKuKLub9moWXlb8QO
wL1A2f7iHZa/m/M7zVBgBcCYZKuJb1Wyvytij4j78RTAew7PCifZdb+LD59v
pd8LwB01cJcN6J+/KBzw07lpDsDNO3VrOCGXv8onwPVzXgfAANLzAp1arL8o
FTvpIAoVwH6W1dt3VnW/Nw6gweQ1+r86tOX/26jLvy6LCWiFeg7AWSjRglDw
lr+ReeFvBLAAwK3V5q04+cC/wnd69QujDMDumqCDJPacv7d+Sag=
           "], "CountMatrix" -> {{23, 0, 0}, {0, 17, 0}}, 
          "IndicesMatrix" -> {{{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14,
              15, 16, 17, 18, 19, 20, 21, 22, 23}, {}, {}}, {{}, {24, 25, 26, 
             27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40}, {}}}, 
          "ExtendedClasses" -> {0, 1}, "Version" -> {11., 1}]]}; 
     Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.6992605654462786`*^9},ExpressionUUID->"bbe8ca10-90dd-4e44-be57-\
e77bcb8fc2cf"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Feature extraction", "Section",
 CellChangeTimes->{{3.699254451769906*^9, 
  3.6992544545223093`*^9}},ExpressionUUID->"476a6b3b-17eb-4336-9a8c-\
d8d35c9dfb7b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"dataFeature", "=", 
   RowBox[{"data", "\[LeftDoubleBracket]", 
    RowBox[{"All", ",", 
     RowBox[{"{", 
      RowBox[{
      "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", 
       "8"}], "}"}]}], "\[RightDoubleBracket]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.699254471429078*^9, 3.699254539627533*^9}, {
   3.6992545814430847`*^9, 3.699254601859067*^9}, 
   3.69925578961707*^9},ExpressionUUID->"e3803e80-7c9e-4554-a111-\
c43e4d16219f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fe", "=", 
  RowBox[{"FeatureExtraction", "[", "dataFeature", "]"}]}]], "Input",
 CellChangeTimes->{{3.699254618637026*^9, 
  3.699254634755232*^9}},ExpressionUUID->"024bfc2c-7169-4054-9390-\
36d8a73f1b92"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["FeatureExtractorFunction", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open$$ = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = True), Appearance -> None,
                 Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{
                InsetBox[
                 FormBox[
                  TagBox[
                   GridBox[{{
                    StyleBox["3", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["6", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["6", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["9", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["2", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["3", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["3", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["5", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["6", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["5", 5, 
                    GrayLevel[0.7], StripOnInput -> False]}, {
                    StyleBox["4", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["0", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["6", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["5", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["4", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["8", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["2", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["0", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["5", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["8", 5, 
                    GrayLevel[0.7], StripOnInput -> False]}, {
                    StyleBox["5", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["0", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["3", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["2", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["3", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["7", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["4", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["2", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["8", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["2", 5, 
                    GrayLevel[0.7], StripOnInput -> False]}, {
                    StyleBox["6", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["7", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["6", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["8", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["4", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["1", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["8", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["0", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["4", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["1", 5, 
                    GrayLevel[0.7], StripOnInput -> False]}, {
                    StyleBox["2", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["0", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["4", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["8", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["1", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["4", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["8", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["9", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["6", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["6", 5, 
                    GrayLevel[0.7], StripOnInput -> False]}, {
                    StyleBox["8", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["0", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["8", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["8", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["2", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["7", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["7", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["6", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["8", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["8", 5, 
                    GrayLevel[0.7], StripOnInput -> False]}, {
                    StyleBox["7", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["6", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["8", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["6", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["2", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["0", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["4", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["6", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["8", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["7", 5, 
                    GrayLevel[0.7], StripOnInput -> False]}, {
                    StyleBox["2", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["5", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["3", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["4", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["2", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["4", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["8", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["2", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["5", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["9", 5, 
                    GrayLevel[0.7], StripOnInput -> False]}, {
                    StyleBox["6", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["2", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["1", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["9", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["9", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["8", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["5", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["0", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["3", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["7", 5, 
                    GrayLevel[0.7], StripOnInput -> False]}, {
                    StyleBox["5", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["2", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["8", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["2", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["2", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["0", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["0", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["2", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["8", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["0", 5, 
                    GrayLevel[0.7], StripOnInput -> False]}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.21999999999999997`}}, 
                    "Rows" -> {{-0.43}}}], "Grid"], TraditionalForm], {295, 
                 559}], 
                GeometricTransformationBox[
                 GeometricTransformationBox[
                  GeometricTransformationBox[{
                    Thickness[0.015], 
                    JoinForm[{"Miter", 10.}], 
                    GrayLevel[0.7], 
                    Opacity[1.], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}}}, {CompressedData["
1:eJyNl3toVEcYxVcFsamKxdT6wBr7R0iwaQkhgtjIlKhRkLSJVYgG29gKSnX3
3rsUTYrde7GK8RVDRBG1KFqIQmyqpijYNvVRNLSijRDfmipSTaKUkGCVPu7O
95t7wWWpf4icPec735mZb2cnExfHypcMjEQibf6/5P91p/pyKttt1bHfKsro
8VRupf/JL7ayizI69j/yVBLmnLNVElqPPaX1p0Os+WZbHfDLO/6kfjd8r6f6
c/wPavHvQ78K/jb8Mvq14b8Qv5ZUfNqHddPSY62fRL8W/MfYKtmu6Bj9h9Dv
CPxfltR/S32XJfm+YT03LPFrMuuH/xG/RuovkWcL/N1UrP02WZLnXirW/mss
yfc7+arp3wm24W+Bq/C/Tv1ccAf+09H/Rp638PvV7A/5z8IPhv8+PdZ5T6Zi
46dxozkP8DZzXmAXvoB8NdTnkucz9jeL9cTQjyTPMnOe4CpPre0qO/763zHB
FZ7q9uHa3pj4zYPviUm/ck9NSH5wH1wKvznkdX0BeL6nyn3YdTUqfhXg81FZ
z/vgE1HRz8SvCf4dTyXpsr3gN/FviEre8aY//sNSsc67jvX0uS+MdZ6H6bHW
d7qSvzYm+a645EN/Af128M8u6wH/QP1B8HfwH+F/EH4M57MH/mJU7T6T1ezU
4d8flfNe6cr689BXgVeQb04q1n7W/+BWMw9uMD867yJX5i+f+VzqyrxNZf4+
doPvk8YfujLPpdQvgK+k/gP4KHwp/h7zOht+HX4lbnAf6Hwz6N8AXwzeCJ+H
/kv41/D7Av8BrG+rpQ6XdNZkPk1I/32WmuXDw70JqT9mqc8zfcUj+BOWStIl
PYngvtP1D8Ht6O+jf2CpJKy5k5B+EVvqb+KfaUv9tYTky+b+HUjeyXaQX/aX
+zsvFet+Femx1i8PseyHHeyX7Af93gbvRZ/vBr9nmi8At1JfmB7r+kLy/BRi
vV/XWe8b5Onn92gE9SMcOY9n7N9oR/gIfJYj/QZQn+1IvkFm/xzxH2z2C5xB
/7ng4eBP8XvVzCN4PH7b0Web+aLfVPQ2+D30i8j7CXmXOtzPYAv/FdRX4++E
/pqvNucD9tDvxK82xJqvZT278NsQYp1vI/m+Qr+Z+n341dP/APoG+EvgOur/
YX2b8J8UF7weXBAX/3rqp8SlfhfrUfBfw79LfSP1xXHJf8icH/om+s9E3xxi
eb/gNxt9C/Vz0LfCl6FvM/MAfxk+Ny77cfO59d7D7zK4Oz02vzfpsN6Pf+nf
Dv8S74EL8CPN+5PzHGven+gnwp/h/HJ5LzyAL8RvOPtfDJ/P+spSsTm/dFi+
f/HgvSHvHfwT6O86wftG7k8zf+B6M8/mvYt+lRd8fzS/2gu+r7p+Df1noV9P
/RQzz+Z9ZeYXPA68A/9R6Hd6wX0j84n+ZfZzD/6vwB817znqz3vBfaTz3OE8
hjrB+1XzT7jf/jD7w33aRZ5b8N3or4R/fzz/98h/NOnbyg==
                    "], CompressedData["
1:eJxTTMoPSmViYGCQBGIQ/U0jpv/QygKHJQW2XNcPNjgc/goU6CtwuL4YKHCz
wQEo+1WjA8r/CJWfVuBQCFS+mKvRASQds7jAgQukQKXRAWzewQIHkHSBeSNE
/weoftdGB02QgEwhxL7ARoh5foUQ+VCo+oZCiPl+UPM3F0LMc4fyb0PVW0LN
+wI1TxGqX6AI7j6w+WJQ/ieofziK4P4Dm/cbav7+Boh5dwoh/lkDVb8BKj+/
Ae4+sH0TofwAqHv7oOEjB5WfCjX/NTR85kD5h6Hhs7rBAT38ARfPvOE=
                    "]}, CurveClosed -> {1, 1}], 
                    GrayLevel[0], 
                    Opacity[1.], 
                    
                    JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}}}, {CompressedData["
1:eJyNl3toVEcYxVcFsamKxdT6wBr7R0iwaQkhgtjIlKhRkLSJVYgG29gKSnX3
3rsUTYrde7GK8RVDRBG1KFqIQmyqpijYNvVRNLSijRDfmipSTaKUkGCVPu7O
95t7wWWpf4icPec735mZb2cnExfHypcMjEQibf6/5P91p/pyKttt1bHfKsro
8VRupf/JL7ayizI69j/yVBLmnLNVElqPPaX1p0Os+WZbHfDLO/6kfjd8r6f6
c/wPavHvQ78K/jb8Mvq14b8Qv5ZUfNqHddPSY62fRL8W/MfYKtmu6Bj9h9Dv
CPxfltR/S32XJfm+YT03LPFrMuuH/xG/RuovkWcL/N1UrP02WZLnXirW/mss
yfc7+arp3wm24W+Bq/C/Tv1ccAf+09H/Rp638PvV7A/5z8IPhv8+PdZ5T6Zi
46dxozkP8DZzXmAXvoB8NdTnkucz9jeL9cTQjyTPMnOe4CpPre0qO/763zHB
FZ7q9uHa3pj4zYPviUm/ck9NSH5wH1wKvznkdX0BeL6nyn3YdTUqfhXg81FZ
z/vgE1HRz8SvCf4dTyXpsr3gN/FviEre8aY//sNSsc67jvX0uS+MdZ6H6bHW
d7qSvzYm+a645EN/Af128M8u6wH/QP1B8HfwH+F/EH4M57MH/mJU7T6T1ezU
4d8flfNe6cr689BXgVeQb04q1n7W/+BWMw9uMD867yJX5i+f+VzqyrxNZf4+
doPvk8YfujLPpdQvgK+k/gP4KHwp/h7zOht+HX4lbnAf6Hwz6N8AXwzeCJ+H
/kv41/D7Av8BrG+rpQ6XdNZkPk1I/32WmuXDw70JqT9mqc8zfcUj+BOWStIl
PYngvtP1D8Ht6O+jf2CpJKy5k5B+EVvqb+KfaUv9tYTky+b+HUjeyXaQX/aX
+zsvFet+Femx1i8PseyHHeyX7Af93gbvRZ/vBr9nmi8At1JfmB7r+kLy/BRi
vV/XWe8b5Onn92gE9SMcOY9n7N9oR/gIfJYj/QZQn+1IvkFm/xzxH2z2C5xB
/7ng4eBP8XvVzCN4PH7b0Web+aLfVPQ2+D30i8j7CXmXOtzPYAv/FdRX4++E
/pqvNucD9tDvxK82xJqvZT278NsQYp1vI/m+Qr+Z+n341dP/APoG+EvgOur/
YX2b8J8UF7weXBAX/3rqp8SlfhfrUfBfw79LfSP1xXHJf8icH/om+s9E3xxi
eb/gNxt9C/Vz0LfCl6FvM/MAfxk+Ny77cfO59d7D7zK4Oz02vzfpsN6Pf+nf
Dv8S74EL8CPN+5PzHGven+gnwp/h/HJ5LzyAL8RvOPtfDJ/P+spSsTm/dFi+
f/HgvSHvHfwT6O86wftG7k8zf+B6M8/mvYt+lRd8fzS/2gu+r7p+Df1noV9P
/RQzz+Z9ZeYXPA68A/9R6Hd6wX0j84n+ZfZzD/6vwB817znqz3vBfaTz3OE8
hjrB+1XzT7jf/jD7w33aRZ5b8N3or4R/fzz/98h/NOnbyg==
                    "], CompressedData["
1:eJxTTMoPSmViYGCQBGIQ/U0jpv/QygKHJQW2XNcPNjgc/goU6CtwuL4YKHCz
wQEo+1WjA8r/CJWfVuBQCFS+mKvRASQds7jAgQukQKXRAWzewQIHkHSBeSNE
/weoftdGB02QgEwhxL7ARoh5foUQ+VCo+oZCiPl+UPM3F0LMc4fyb0PVW0LN
+wI1TxGqX6AI7j6w+WJQ/ieofziK4P4Dm/cbav7+Boh5dwoh/lkDVb8BKj+/
Ae4+sH0TofwAqHv7oOEjB5WfCjX/NTR85kD5h6Hhs7rBAT38ARfPvOE=
                    "]}, CurveClosed -> {1, 1}]}, {0, 0}], {{{
                   0.8885826757334067, -0.4587165011054861}, {
                   0.4587165011054861, 0.8885826757334067}}, Center}], {{{1, 
                  0}, {0, 1}}, Center}], 
                GeometricTransformationBox[
                 GeometricTransformationBox[
                  GeometricTransformationBox[{
                    Thickness[0.015], 
                    JoinForm[{"Miter", 10.}], 
                    GrayLevel[0.7], 
                    Opacity[1.], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}}}, {CompressedData["
1:eJyNl3toVEcYxVcFsamKxdT6wBr7R0iwaQkhgtjIlKhRkLSJVYgG29gKSnX3
3rsUTYrde7GK8RVDRBG1KFqIQmyqpijYNvVRNLSijRDfmipSTaKUkGCVPu7O
95t7wWWpf4icPec735mZb2cnExfHypcMjEQibf6/5P91p/pyKttt1bHfKsro
8VRupf/JL7ayizI69j/yVBLmnLNVElqPPaX1p0Os+WZbHfDLO/6kfjd8r6f6
c/wPavHvQ78K/jb8Mvq14b8Qv5ZUfNqHddPSY62fRL8W/MfYKtmu6Bj9h9Dv
CPxfltR/S32XJfm+YT03LPFrMuuH/xG/RuovkWcL/N1UrP02WZLnXirW/mss
yfc7+arp3wm24W+Bq/C/Tv1ccAf+09H/Rp638PvV7A/5z8IPhv8+PdZ5T6Zi
46dxozkP8DZzXmAXvoB8NdTnkucz9jeL9cTQjyTPMnOe4CpPre0qO/763zHB
FZ7q9uHa3pj4zYPviUm/ck9NSH5wH1wKvznkdX0BeL6nyn3YdTUqfhXg81FZ
z/vgE1HRz8SvCf4dTyXpsr3gN/FviEre8aY//sNSsc67jvX0uS+MdZ6H6bHW
d7qSvzYm+a645EN/Af128M8u6wH/QP1B8HfwH+F/EH4M57MH/mJU7T6T1ezU
4d8flfNe6cr689BXgVeQb04q1n7W/+BWMw9uMD867yJX5i+f+VzqyrxNZf4+
doPvk8YfujLPpdQvgK+k/gP4KHwp/h7zOht+HX4lbnAf6Hwz6N8AXwzeCJ+H
/kv41/D7Av8BrG+rpQ6XdNZkPk1I/32WmuXDw70JqT9mqc8zfcUj+BOWStIl
PYngvtP1D8Ht6O+jf2CpJKy5k5B+EVvqb+KfaUv9tYTky+b+HUjeyXaQX/aX
+zsvFet+Femx1i8PseyHHeyX7Af93gbvRZ/vBr9nmi8At1JfmB7r+kLy/BRi
vV/XWe8b5Onn92gE9SMcOY9n7N9oR/gIfJYj/QZQn+1IvkFm/xzxH2z2C5xB
/7ng4eBP8XvVzCN4PH7b0Web+aLfVPQ2+D30i8j7CXmXOtzPYAv/FdRX4++E
/pqvNucD9tDvxK82xJqvZT278NsQYp1vI/m+Qr+Z+n341dP/APoG+EvgOur/
YX2b8J8UF7weXBAX/3rqp8SlfhfrUfBfw79LfSP1xXHJf8icH/om+s9E3xxi
eb/gNxt9C/Vz0LfCl6FvM/MAfxk+Ny77cfO59d7D7zK4Oz02vzfpsN6Pf+nf
Dv8S74EL8CPN+5PzHGven+gnwp/h/HJ5LzyAL8RvOPtfDJ/P+spSsTm/dFi+
f/HgvSHvHfwT6O86wftG7k8zf+B6M8/mvYt+lRd8fzS/2gu+r7p+Df1noV9P
/RQzz+Z9ZeYXPA68A/9R6Hd6wX0j84n+ZfZzD/6vwB817znqz3vBfaTz3OE8
hjrB+1XzT7jf/jD7w33aRZ5b8N3or4R/fzz/98h/NOnbyg==
                    "], CompressedData["
1:eJxTTMoPSmViYGCQBGIQ/U0jpv/QygKHJQW2XNcPNjgc/goU6CtwuL4YKHCz
wQEo+1WjA8r/CJWfVuBQCFS+mKvRASQds7jAgQukQKXRAWzewQIHkHSBeSNE
/weoftdGB02QgEwhxL7ARoh5foUQ+VCo+oZCiPl+UPM3F0LMc4fyb0PVW0LN
+wI1TxGqX6AI7j6w+WJQ/ieofziK4P4Dm/cbav7+Boh5dwoh/lkDVb8BKj+/
Ae4+sH0TofwAqHv7oOEjB5WfCjX/NTR85kD5h6Hhs7rBAT38ARfPvOE=
                    "]}, CurveClosed -> {1, 1}], 
                    GrayLevel[0], 
                    Opacity[1.], 
                    
                    JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}}}, {CompressedData["
1:eJyNl3toVEcYxVcFsamKxdT6wBr7R0iwaQkhgtjIlKhRkLSJVYgG29gKSnX3
3rsUTYrde7GK8RVDRBG1KFqIQmyqpijYNvVRNLSijRDfmipSTaKUkGCVPu7O
95t7wWWpf4icPec735mZb2cnExfHypcMjEQibf6/5P91p/pyKttt1bHfKsro
8VRupf/JL7ayizI69j/yVBLmnLNVElqPPaX1p0Os+WZbHfDLO/6kfjd8r6f6
c/wPavHvQ78K/jb8Mvq14b8Qv5ZUfNqHddPSY62fRL8W/MfYKtmu6Bj9h9Dv
CPxfltR/S32XJfm+YT03LPFrMuuH/xG/RuovkWcL/N1UrP02WZLnXirW/mss
yfc7+arp3wm24W+Bq/C/Tv1ccAf+09H/Rp638PvV7A/5z8IPhv8+PdZ5T6Zi
46dxozkP8DZzXmAXvoB8NdTnkucz9jeL9cTQjyTPMnOe4CpPre0qO/763zHB
FZ7q9uHa3pj4zYPviUm/ck9NSH5wH1wKvznkdX0BeL6nyn3YdTUqfhXg81FZ
z/vgE1HRz8SvCf4dTyXpsr3gN/FviEre8aY//sNSsc67jvX0uS+MdZ6H6bHW
d7qSvzYm+a645EN/Af128M8u6wH/QP1B8HfwH+F/EH4M57MH/mJU7T6T1ezU
4d8flfNe6cr689BXgVeQb04q1n7W/+BWMw9uMD867yJX5i+f+VzqyrxNZf4+
doPvk8YfujLPpdQvgK+k/gP4KHwp/h7zOht+HX4lbnAf6Hwz6N8AXwzeCJ+H
/kv41/D7Av8BrG+rpQ6XdNZkPk1I/32WmuXDw70JqT9mqc8zfcUj+BOWStIl
PYngvtP1D8Ht6O+jf2CpJKy5k5B+EVvqb+KfaUv9tYTky+b+HUjeyXaQX/aX
+zsvFet+Femx1i8PseyHHeyX7Af93gbvRZ/vBr9nmi8At1JfmB7r+kLy/BRi
vV/XWe8b5Onn92gE9SMcOY9n7N9oR/gIfJYj/QZQn+1IvkFm/xzxH2z2C5xB
/7ng4eBP8XvVzCN4PH7b0Web+aLfVPQ2+D30i8j7CXmXOtzPYAv/FdRX4++E
/pqvNucD9tDvxK82xJqvZT278NsQYp1vI/m+Qr+Z+n341dP/APoG+EvgOur/
YX2b8J8UF7weXBAX/3rqp8SlfhfrUfBfw79LfSP1xXHJf8icH/om+s9E3xxi
eb/gNxt9C/Vz0LfCl6FvM/MAfxk+Ny77cfO59d7D7zK4Oz02vzfpsN6Pf+nf
Dv8S74EL8CPN+5PzHGven+gnwp/h/HJ5LzyAL8RvOPtfDJ/P+spSsTm/dFi+
f/HgvSHvHfwT6O86wftG7k8zf+B6M8/mvYt+lRd8fzS/2gu+r7p+Df1noV9P
/RQzz+Z9ZeYXPA68A/9R6Hd6wX0j84n+ZfZzD/6vwB817znqz3vBfaTz3OE8
hjrB+1XzT7jf/jD7w33aRZ5b8N3or4R/fzz/98h/NOnbyg==
                    "], CompressedData["
1:eJxTTMoPSmViYGCQBGIQ/U0jpv/QygKHJQW2XNcPNjgc/goU6CtwuL4YKHCz
wQEo+1WjA8r/CJWfVuBQCFS+mKvRASQds7jAgQukQKXRAWzewQIHkHSBeSNE
/weoftdGB02QgEwhxL7ARoh5foUQ+VCo+oZCiPl+UPM3F0LMc4fyb0PVW0LN
+wI1TxGqX6AI7j6w+WJQ/ieofziK4P4Dm/cbav7+Boh5dwoh/lkDVb8BKj+/
Ae4+sH0TofwAqHv7oOEjB5WfCjX/NTR85kD5h6Hhs7rBAT38ARfPvOE=
                    "]}, CurveClosed -> {1, 1}]}, {42, 42}], {{{
                   0.9299386991262721, 
                   0.36771458479007424`}, {-0.36771458479007424`, 
                   0.9299386991262721}}, Center}], {{{0.8, 0.}, {0., 0.8}}, 
                  Center}]}, ImagePadding -> 0.2, 
               PlotRange -> {{242, 348}, {506, 612}}, PlotRangeClipping -> 
               True, FrameStyle -> Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.7]], Axes -> False, AspectRatio -> 1, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]]], 
              GridBox[{{
                 RowBox[{
                   TagBox[
                   "\"Original number of features: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                   TagBox["8", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Length of extracted vector: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                   TagBox["13", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{
                InsetBox[
                 FormBox[
                  TagBox[
                   GridBox[{{
                    StyleBox["3", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["6", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["6", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["9", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["2", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["3", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["3", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["5", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["6", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["5", 5, 
                    GrayLevel[0.7], StripOnInput -> False]}, {
                    StyleBox["4", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["0", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["6", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["5", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["4", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["8", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["2", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["0", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["5", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["8", 5, 
                    GrayLevel[0.7], StripOnInput -> False]}, {
                    StyleBox["5", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["0", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["3", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["2", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["3", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["7", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["4", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["2", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["8", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["2", 5, 
                    GrayLevel[0.7], StripOnInput -> False]}, {
                    StyleBox["6", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["7", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["6", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["8", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["4", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["1", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["8", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["0", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["4", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["1", 5, 
                    GrayLevel[0.7], StripOnInput -> False]}, {
                    StyleBox["2", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["0", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["4", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["8", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["1", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["4", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["8", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["9", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["6", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["6", 5, 
                    GrayLevel[0.7], StripOnInput -> False]}, {
                    StyleBox["8", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["0", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["8", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["8", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["2", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["7", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["7", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["6", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["8", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["8", 5, 
                    GrayLevel[0.7], StripOnInput -> False]}, {
                    StyleBox["7", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["6", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["8", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["6", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["2", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["0", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["4", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["6", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["8", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["7", 5, 
                    GrayLevel[0.7], StripOnInput -> False]}, {
                    StyleBox["2", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["5", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["3", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["4", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["2", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["4", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["8", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["2", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["5", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["9", 5, 
                    GrayLevel[0.7], StripOnInput -> False]}, {
                    StyleBox["6", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["2", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["1", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["9", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["9", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["8", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["5", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["0", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["3", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["7", 5, 
                    GrayLevel[0.7], StripOnInput -> False]}, {
                    StyleBox["5", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["2", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["8", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["2", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["2", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["0", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["0", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["2", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["8", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["0", 5, 
                    GrayLevel[0.7], StripOnInput -> False]}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.21999999999999997`}}, 
                    "Rows" -> {{-0.43}}}], "Grid"], TraditionalForm], {295, 
                 559}], 
                GeometricTransformationBox[
                 GeometricTransformationBox[
                  GeometricTransformationBox[{
                    Thickness[0.015], 
                    JoinForm[{"Miter", 10.}], 
                    GrayLevel[0.7], 
                    Opacity[1.], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}}}, {CompressedData["
1:eJyNl3toVEcYxVcFsamKxdT6wBr7R0iwaQkhgtjIlKhRkLSJVYgG29gKSnX3
3rsUTYrde7GK8RVDRBG1KFqIQmyqpijYNvVRNLSijRDfmipSTaKUkGCVPu7O
95t7wWWpf4icPec735mZb2cnExfHypcMjEQibf6/5P91p/pyKttt1bHfKsro
8VRupf/JL7ayizI69j/yVBLmnLNVElqPPaX1p0Os+WZbHfDLO/6kfjd8r6f6
c/wPavHvQ78K/jb8Mvq14b8Qv5ZUfNqHddPSY62fRL8W/MfYKtmu6Bj9h9Dv
CPxfltR/S32XJfm+YT03LPFrMuuH/xG/RuovkWcL/N1UrP02WZLnXirW/mss
yfc7+arp3wm24W+Bq/C/Tv1ccAf+09H/Rp638PvV7A/5z8IPhv8+PdZ5T6Zi
46dxozkP8DZzXmAXvoB8NdTnkucz9jeL9cTQjyTPMnOe4CpPre0qO/763zHB
FZ7q9uHa3pj4zYPviUm/ck9NSH5wH1wKvznkdX0BeL6nyn3YdTUqfhXg81FZ
z/vgE1HRz8SvCf4dTyXpsr3gN/FviEre8aY//sNSsc67jvX0uS+MdZ6H6bHW
d7qSvzYm+a645EN/Af128M8u6wH/QP1B8HfwH+F/EH4M57MH/mJU7T6T1ezU
4d8flfNe6cr689BXgVeQb04q1n7W/+BWMw9uMD867yJX5i+f+VzqyrxNZf4+
doPvk8YfujLPpdQvgK+k/gP4KHwp/h7zOht+HX4lbnAf6Hwz6N8AXwzeCJ+H
/kv41/D7Av8BrG+rpQ6XdNZkPk1I/32WmuXDw70JqT9mqc8zfcUj+BOWStIl
PYngvtP1D8Ht6O+jf2CpJKy5k5B+EVvqb+KfaUv9tYTky+b+HUjeyXaQX/aX
+zsvFet+Femx1i8PseyHHeyX7Af93gbvRZ/vBr9nmi8At1JfmB7r+kLy/BRi
vV/XWe8b5Onn92gE9SMcOY9n7N9oR/gIfJYj/QZQn+1IvkFm/xzxH2z2C5xB
/7ng4eBP8XvVzCN4PH7b0Web+aLfVPQ2+D30i8j7CXmXOtzPYAv/FdRX4++E
/pqvNucD9tDvxK82xJqvZT278NsQYp1vI/m+Qr+Z+n341dP/APoG+EvgOur/
YX2b8J8UF7weXBAX/3rqp8SlfhfrUfBfw79LfSP1xXHJf8icH/om+s9E3xxi
eb/gNxt9C/Vz0LfCl6FvM/MAfxk+Ny77cfO59d7D7zK4Oz02vzfpsN6Pf+nf
Dv8S74EL8CPN+5PzHGven+gnwp/h/HJ5LzyAL8RvOPtfDJ/P+spSsTm/dFi+
f/HgvSHvHfwT6O86wftG7k8zf+B6M8/mvYt+lRd8fzS/2gu+r7p+Df1noV9P
/RQzz+Z9ZeYXPA68A/9R6Hd6wX0j84n+ZfZzD/6vwB817znqz3vBfaTz3OE8
hjrB+1XzT7jf/jD7w33aRZ5b8N3or4R/fzz/98h/NOnbyg==
                    "], CompressedData["
1:eJxTTMoPSmViYGCQBGIQ/U0jpv/QygKHJQW2XNcPNjgc/goU6CtwuL4YKHCz
wQEo+1WjA8r/CJWfVuBQCFS+mKvRASQds7jAgQukQKXRAWzewQIHkHSBeSNE
/weoftdGB02QgEwhxL7ARoh5foUQ+VCo+oZCiPl+UPM3F0LMc4fyb0PVW0LN
+wI1TxGqX6AI7j6w+WJQ/ieofziK4P4Dm/cbav7+Boh5dwoh/lkDVb8BKj+/
Ae4+sH0TofwAqHv7oOEjB5WfCjX/NTR85kD5h6Hhs7rBAT38ARfPvOE=
                    "]}, CurveClosed -> {1, 1}], 
                    GrayLevel[0], 
                    Opacity[1.], 
                    
                    JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}}}, {CompressedData["
1:eJyNl3toVEcYxVcFsamKxdT6wBr7R0iwaQkhgtjIlKhRkLSJVYgG29gKSnX3
3rsUTYrde7GK8RVDRBG1KFqIQmyqpijYNvVRNLSijRDfmipSTaKUkGCVPu7O
95t7wWWpf4icPec735mZb2cnExfHypcMjEQibf6/5P91p/pyKttt1bHfKsro
8VRupf/JL7ayizI69j/yVBLmnLNVElqPPaX1p0Os+WZbHfDLO/6kfjd8r6f6
c/wPavHvQ78K/jb8Mvq14b8Qv5ZUfNqHddPSY62fRL8W/MfYKtmu6Bj9h9Dv
CPxfltR/S32XJfm+YT03LPFrMuuH/xG/RuovkWcL/N1UrP02WZLnXirW/mss
yfc7+arp3wm24W+Bq/C/Tv1ccAf+09H/Rp638PvV7A/5z8IPhv8+PdZ5T6Zi
46dxozkP8DZzXmAXvoB8NdTnkucz9jeL9cTQjyTPMnOe4CpPre0qO/763zHB
FZ7q9uHa3pj4zYPviUm/ck9NSH5wH1wKvznkdX0BeL6nyn3YdTUqfhXg81FZ
z/vgE1HRz8SvCf4dTyXpsr3gN/FviEre8aY//sNSsc67jvX0uS+MdZ6H6bHW
d7qSvzYm+a645EN/Af128M8u6wH/QP1B8HfwH+F/EH4M57MH/mJU7T6T1ezU
4d8flfNe6cr689BXgVeQb04q1n7W/+BWMw9uMD867yJX5i+f+VzqyrxNZf4+
doPvk8YfujLPpdQvgK+k/gP4KHwp/h7zOht+HX4lbnAf6Hwz6N8AXwzeCJ+H
/kv41/D7Av8BrG+rpQ6XdNZkPk1I/32WmuXDw70JqT9mqc8zfcUj+BOWStIl
PYngvtP1D8Ht6O+jf2CpJKy5k5B+EVvqb+KfaUv9tYTky+b+HUjeyXaQX/aX
+zsvFet+Femx1i8PseyHHeyX7Af93gbvRZ/vBr9nmi8At1JfmB7r+kLy/BRi
vV/XWe8b5Onn92gE9SMcOY9n7N9oR/gIfJYj/QZQn+1IvkFm/xzxH2z2C5xB
/7ng4eBP8XvVzCN4PH7b0Web+aLfVPQ2+D30i8j7CXmXOtzPYAv/FdRX4++E
/pqvNucD9tDvxK82xJqvZT278NsQYp1vI/m+Qr+Z+n341dP/APoG+EvgOur/
YX2b8J8UF7weXBAX/3rqp8SlfhfrUfBfw79LfSP1xXHJf8icH/om+s9E3xxi
eb/gNxt9C/Vz0LfCl6FvM/MAfxk+Ny77cfO59d7D7zK4Oz02vzfpsN6Pf+nf
Dv8S74EL8CPN+5PzHGven+gnwp/h/HJ5LzyAL8RvOPtfDJ/P+spSsTm/dFi+
f/HgvSHvHfwT6O86wftG7k8zf+B6M8/mvYt+lRd8fzS/2gu+r7p+Df1noV9P
/RQzz+Z9ZeYXPA68A/9R6Hd6wX0j84n+ZfZzD/6vwB817znqz3vBfaTz3OE8
hjrB+1XzT7jf/jD7w33aRZ5b8N3or4R/fzz/98h/NOnbyg==
                    "], CompressedData["
1:eJxTTMoPSmViYGCQBGIQ/U0jpv/QygKHJQW2XNcPNjgc/goU6CtwuL4YKHCz
wQEo+1WjA8r/CJWfVuBQCFS+mKvRASQds7jAgQukQKXRAWzewQIHkHSBeSNE
/weoftdGB02QgEwhxL7ARoh5foUQ+VCo+oZCiPl+UPM3F0LMc4fyb0PVW0LN
+wI1TxGqX6AI7j6w+WJQ/ieofziK4P4Dm/cbav7+Boh5dwoh/lkDVb8BKj+/
Ae4+sH0TofwAqHv7oOEjB5WfCjX/NTR85kD5h6Hhs7rBAT38ARfPvOE=
                    "]}, CurveClosed -> {1, 1}]}, {0, 0}], {{{
                   0.8885826757334067, -0.4587165011054861}, {
                   0.4587165011054861, 0.8885826757334067}}, Center}], {{{1, 
                  0}, {0, 1}}, Center}], 
                GeometricTransformationBox[
                 GeometricTransformationBox[
                  GeometricTransformationBox[{
                    Thickness[0.015], 
                    JoinForm[{"Miter", 10.}], 
                    GrayLevel[0.7], 
                    Opacity[1.], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}}}, {CompressedData["
1:eJyNl3toVEcYxVcFsamKxdT6wBr7R0iwaQkhgtjIlKhRkLSJVYgG29gKSnX3
3rsUTYrde7GK8RVDRBG1KFqIQmyqpijYNvVRNLSijRDfmipSTaKUkGCVPu7O
95t7wWWpf4icPec735mZb2cnExfHypcMjEQibf6/5P91p/pyKttt1bHfKsro
8VRupf/JL7ayizI69j/yVBLmnLNVElqPPaX1p0Os+WZbHfDLO/6kfjd8r6f6
c/wPavHvQ78K/jb8Mvq14b8Qv5ZUfNqHddPSY62fRL8W/MfYKtmu6Bj9h9Dv
CPxfltR/S32XJfm+YT03LPFrMuuH/xG/RuovkWcL/N1UrP02WZLnXirW/mss
yfc7+arp3wm24W+Bq/C/Tv1ccAf+09H/Rp638PvV7A/5z8IPhv8+PdZ5T6Zi
46dxozkP8DZzXmAXvoB8NdTnkucz9jeL9cTQjyTPMnOe4CpPre0qO/763zHB
FZ7q9uHa3pj4zYPviUm/ck9NSH5wH1wKvznkdX0BeL6nyn3YdTUqfhXg81FZ
z/vgE1HRz8SvCf4dTyXpsr3gN/FviEre8aY//sNSsc67jvX0uS+MdZ6H6bHW
d7qSvzYm+a645EN/Af128M8u6wH/QP1B8HfwH+F/EH4M57MH/mJU7T6T1ezU
4d8flfNe6cr689BXgVeQb04q1n7W/+BWMw9uMD867yJX5i+f+VzqyrxNZf4+
doPvk8YfujLPpdQvgK+k/gP4KHwp/h7zOht+HX4lbnAf6Hwz6N8AXwzeCJ+H
/kv41/D7Av8BrG+rpQ6XdNZkPk1I/32WmuXDw70JqT9mqc8zfcUj+BOWStIl
PYngvtP1D8Ht6O+jf2CpJKy5k5B+EVvqb+KfaUv9tYTky+b+HUjeyXaQX/aX
+zsvFet+Femx1i8PseyHHeyX7Af93gbvRZ/vBr9nmi8At1JfmB7r+kLy/BRi
vV/XWe8b5Onn92gE9SMcOY9n7N9oR/gIfJYj/QZQn+1IvkFm/xzxH2z2C5xB
/7ng4eBP8XvVzCN4PH7b0Web+aLfVPQ2+D30i8j7CXmXOtzPYAv/FdRX4++E
/pqvNucD9tDvxK82xJqvZT278NsQYp1vI/m+Qr+Z+n341dP/APoG+EvgOur/
YX2b8J8UF7weXBAX/3rqp8SlfhfrUfBfw79LfSP1xXHJf8icH/om+s9E3xxi
eb/gNxt9C/Vz0LfCl6FvM/MAfxk+Ny77cfO59d7D7zK4Oz02vzfpsN6Pf+nf
Dv8S74EL8CPN+5PzHGven+gnwp/h/HJ5LzyAL8RvOPtfDJ/P+spSsTm/dFi+
f/HgvSHvHfwT6O86wftG7k8zf+B6M8/mvYt+lRd8fzS/2gu+r7p+Df1noV9P
/RQzz+Z9ZeYXPA68A/9R6Hd6wX0j84n+ZfZzD/6vwB817znqz3vBfaTz3OE8
hjrB+1XzT7jf/jD7w33aRZ5b8N3or4R/fzz/98h/NOnbyg==
                    "], CompressedData["
1:eJxTTMoPSmViYGCQBGIQ/U0jpv/QygKHJQW2XNcPNjgc/goU6CtwuL4YKHCz
wQEo+1WjA8r/CJWfVuBQCFS+mKvRASQds7jAgQukQKXRAWzewQIHkHSBeSNE
/weoftdGB02QgEwhxL7ARoh5foUQ+VCo+oZCiPl+UPM3F0LMc4fyb0PVW0LN
+wI1TxGqX6AI7j6w+WJQ/ieofziK4P4Dm/cbav7+Boh5dwoh/lkDVb8BKj+/
Ae4+sH0TofwAqHv7oOEjB5WfCjX/NTR85kD5h6Hhs7rBAT38ARfPvOE=
                    "]}, CurveClosed -> {1, 1}], 
                    GrayLevel[0], 
                    Opacity[1.], 
                    
                    JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}}}, {CompressedData["
1:eJyNl3toVEcYxVcFsamKxdT6wBr7R0iwaQkhgtjIlKhRkLSJVYgG29gKSnX3
3rsUTYrde7GK8RVDRBG1KFqIQmyqpijYNvVRNLSijRDfmipSTaKUkGCVPu7O
95t7wWWpf4icPec735mZb2cnExfHypcMjEQibf6/5P91p/pyKttt1bHfKsro
8VRupf/JL7ayizI69j/yVBLmnLNVElqPPaX1p0Os+WZbHfDLO/6kfjd8r6f6
c/wPavHvQ78K/jb8Mvq14b8Qv5ZUfNqHddPSY62fRL8W/MfYKtmu6Bj9h9Dv
CPxfltR/S32XJfm+YT03LPFrMuuH/xG/RuovkWcL/N1UrP02WZLnXirW/mss
yfc7+arp3wm24W+Bq/C/Tv1ccAf+09H/Rp638PvV7A/5z8IPhv8+PdZ5T6Zi
46dxozkP8DZzXmAXvoB8NdTnkucz9jeL9cTQjyTPMnOe4CpPre0qO/763zHB
FZ7q9uHa3pj4zYPviUm/ck9NSH5wH1wKvznkdX0BeL6nyn3YdTUqfhXg81FZ
z/vgE1HRz8SvCf4dTyXpsr3gN/FviEre8aY//sNSsc67jvX0uS+MdZ6H6bHW
d7qSvzYm+a645EN/Af128M8u6wH/QP1B8HfwH+F/EH4M57MH/mJU7T6T1ezU
4d8flfNe6cr689BXgVeQb04q1n7W/+BWMw9uMD867yJX5i+f+VzqyrxNZf4+
doPvk8YfujLPpdQvgK+k/gP4KHwp/h7zOht+HX4lbnAf6Hwz6N8AXwzeCJ+H
/kv41/D7Av8BrG+rpQ6XdNZkPk1I/32WmuXDw70JqT9mqc8zfcUj+BOWStIl
PYngvtP1D8Ht6O+jf2CpJKy5k5B+EVvqb+KfaUv9tYTky+b+HUjeyXaQX/aX
+zsvFet+Femx1i8PseyHHeyX7Af93gbvRZ/vBr9nmi8At1JfmB7r+kLy/BRi
vV/XWe8b5Onn92gE9SMcOY9n7N9oR/gIfJYj/QZQn+1IvkFm/xzxH2z2C5xB
/7ng4eBP8XvVzCN4PH7b0Web+aLfVPQ2+D30i8j7CXmXOtzPYAv/FdRX4++E
/pqvNucD9tDvxK82xJqvZT278NsQYp1vI/m+Qr+Z+n341dP/APoG+EvgOur/
YX2b8J8UF7weXBAX/3rqp8SlfhfrUfBfw79LfSP1xXHJf8icH/om+s9E3xxi
eb/gNxt9C/Vz0LfCl6FvM/MAfxk+Ny77cfO59d7D7zK4Oz02vzfpsN6Pf+nf
Dv8S74EL8CPN+5PzHGven+gnwp/h/HJ5LzyAL8RvOPtfDJ/P+spSsTm/dFi+
f/HgvSHvHfwT6O86wftG7k8zf+B6M8/mvYt+lRd8fzS/2gu+r7p+Df1noV9P
/RQzz+Z9ZeYXPA68A/9R6Hd6wX0j84n+ZfZzD/6vwB817znqz3vBfaTz3OE8
hjrB+1XzT7jf/jD7w33aRZ5b8N3or4R/fzz/98h/NOnbyg==
                    "], CompressedData["
1:eJxTTMoPSmViYGCQBGIQ/U0jpv/QygKHJQW2XNcPNjgc/goU6CtwuL4YKHCz
wQEo+1WjA8r/CJWfVuBQCFS+mKvRASQds7jAgQukQKXRAWzewQIHkHSBeSNE
/weoftdGB02QgEwhxL7ARoh5foUQ+VCo+oZCiPl+UPM3F0LMc4fyb0PVW0LN
+wI1TxGqX6AI7j6w+WJQ/ieofziK4P4Dm/cbav7+Boh5dwoh/lkDVb8BKj+/
Ae4+sH0TofwAqHv7oOEjB5WfCjX/NTR85kD5h6Hhs7rBAT38ARfPvOE=
                    "]}, CurveClosed -> {1, 1}]}, {42, 42}], {{{
                   0.9299386991262721, 
                   0.36771458479007424`}, {-0.36771458479007424`, 
                   0.9299386991262721}}, Center}], {{{0.8, 0.}, {0., 0.8}}, 
                  Center}]}, ImagePadding -> 0.2, 
               PlotRange -> {{242, 348}, {506, 612}}, PlotRangeClipping -> 
               True, FrameStyle -> Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.7]], Axes -> False, AspectRatio -> 1, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]]], 
              GridBox[{{
                 RowBox[{
                   TagBox[
                   "\"Original number of features: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                   TagBox["8", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Length of extracted vector: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                   TagBox["13", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Invertibility: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"Approximate\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Missing values: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"Forbidden\"", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
        Baseline], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("FeatureExtractorFunction[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.6992606048762684`*^9},ExpressionUUID->"c4727091-ee83-4108-b3ed-\
88de21e4d831"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rfModelFE", "=", 
  RowBox[{"Classify", "[", 
   RowBox[{
    RowBox[{"dataTrain", "\[Rule]", "\"\<Histo\>\""}], ",", 
    RowBox[{"Method", "\[Rule]", "\"\<RandomForest\>\""}], ",", 
    RowBox[{"FeatureExtractor", "\[Rule]", "fe"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6992546862368236`*^9, 
  3.6992547539462442`*^9}},ExpressionUUID->"c7f39759-89ae-4dae-9b83-\
a15e710d19a7"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["ClassifierFunction", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open$$ = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = True), Appearance -> None,
                 Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 PointSize[0.13], 
                 GrayLevel[0.45], 
                 
                 PointBox[{{0.9821769431797024, -0.440194219686987}, {
                  1.1339776261519132`, 0.8056918676854272}, {
                  0.5279892326667741, 0.6574306661126254}, {
                  0.022147046479890797`, 1.4937877187998898`}}], 
                 GrayLevel[0.7], 
                 
                 PointBox[{{-0.9815166384819979, 
                  0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                 GrayLevel[0.55], 
                 AbsoluteThickness[1.5], 
                 LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
               Axes -> {False, False}, AxesLabel -> {None, None}, 
                AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
               ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"RandomForest\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Number of classes: \"", "SummaryItemAnnotation"],
                    "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 PointSize[0.13], 
                 GrayLevel[0.45], 
                 
                 PointBox[{{0.9821769431797024, -0.440194219686987}, {
                  1.1339776261519132`, 0.8056918676854272}, {
                  0.5279892326667741, 0.6574306661126254}, {
                  0.022147046479890797`, 1.4937877187998898`}}], 
                 GrayLevel[0.7], 
                 
                 PointBox[{{-0.9815166384819979, 
                  0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                 GrayLevel[0.55], 
                 AbsoluteThickness[1.5], 
                 LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
               Axes -> {False, False}, AxesLabel -> {None, None}, 
                AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
               ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"RandomForest\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Number of classes: \"", "SummaryItemAnnotation"],
                    "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Number of features: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["8", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                   TagBox["160", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
        Baseline], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("ClassifierFunction[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.69926063219565*^9},ExpressionUUID->"00b1e35b-401e-4188-bf2d-9e0dcef8376d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rfModelFECM", "=", 
  RowBox[{"ClassifierMeasurements", "[", 
   RowBox[{"rfModelFE", ",", "dataTestModel"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.699254762965664*^9, 
  3.699254820772735*^9}},ExpressionUUID->"b92ac210-2c1c-41f4-873e-\
e349476c61df"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["ClassifierMeasurementsObject", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open$$ = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = True), Appearance -> None,
                 Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[
               
               RasterBox[{{0.8564437870801482, 0.8967071593761374, 
                0.4746151541446917}, {0.7191592194171378, 0.5062062867304069, 
                0.8158644505878024}, {0.47333333333333333`, 
                0.7727052229508918, 
                0.7191592194171378}}, {{-0.03479955456570183, \
-0.055679287305122394`}, {3.055679287305122, 3.041759465478842}}, {0, 1}], 
               ImagePadding -> 0.2, 
               PlotRange -> {{-0.0625, 3.0625}, {-0.06, 3.06}}, 
               PlotRangePadding -> Automatic, FrameStyle -> Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.7]], Axes -> False, AspectRatio -> 1, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Classifier: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"RandomForest\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Number of test examples: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["40", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[
               
               RasterBox[{{0.8564437870801482, 0.8967071593761374, 
                0.4746151541446917}, {0.7191592194171378, 0.5062062867304069, 
                0.8158644505878024}, {0.47333333333333333`, 
                0.7727052229508918, 
                0.7191592194171378}}, {{-0.03479955456570183, \
-0.055679287305122394`}, {3.055679287305122, 3.041759465478842}}, {0, 1}], 
               ImagePadding -> 0.2, 
               PlotRange -> {{-0.0625, 3.0625}, {-0.06, 3.06}}, 
               PlotRangePadding -> Automatic, FrameStyle -> Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.7]], Axes -> False, AspectRatio -> 1, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Classifier: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"RandomForest\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Number of test examples: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["40", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Number of classes: \"", "SummaryItemAnnotation"],
                    "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Accuracy: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["0.925`", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
        Baseline], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("ClassifierMeasurementsObject[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.699260640100211*^9},ExpressionUUID->"eb077b07-c6ae-4883-91ac-\
2c24e0bace35"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rfModelFECM", "[", "\"\<Accuracy\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.699254823479107*^9, 
  3.699254831321582*^9}},ExpressionUUID->"67ef0db3-316a-4628-b5c1-\
8c6754caa27c"],

Cell[BoxData["0.925`"], "Output",
 CellChangeTimes->{
  3.6992606429921675`*^9},ExpressionUUID->"476f9d31-2a0c-4994-be93-\
c79ca61bc467"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1920, 1037},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
Magnification:>1.5 Inherited,
FrontEndVersion->"12.3 for Mac OS X x86 (64-bit) (July 9, 2021)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"c4e2605f-0aa7-4533-9043-83d98453f9f3"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 185, 3, 146, "Title",ExpressionUUID->"a39e519a-5a90-4c1d-ab0b-630a814b6fff"],
Cell[CellGroupData[{
Cell[790, 29, 206, 4, 101, "Section",ExpressionUUID->"ed1b4a4a-12a0-4002-9a5e-71c0060f10aa"],
Cell[CellGroupData[{
Cell[1021, 37, 232, 5, 46, "Input",ExpressionUUID->"a6645c9a-5d84-4fe9-a095-436f6c1715f1"],
Cell[1256, 44, 219, 4, 52, "Output",ExpressionUUID->"a74b0977-b34c-4ecc-8130-afdfc9c54e7f"]
}, Open  ]],
Cell[1490, 51, 371, 8, 46, "Input",ExpressionUUID->"c04ab89a-607d-4a0c-95d3-33de5794e72e"],
Cell[CellGroupData[{
Cell[1886, 63, 243, 5, 46, "Input",ExpressionUUID->"427c562b-eab8-4389-aaf5-5e5dc8c10508"],
Cell[2132, 70, 39176, 812, 257, "Output",ExpressionUUID->"ef265fae-b29f-4d30-908c-490db89fdd3b"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[41357, 888, 170, 3, 101, "Section",ExpressionUUID->"3b78775c-6879-41a7-bfab-e6abd3abb780"],
Cell[CellGroupData[{
Cell[41552, 895, 192, 4, 46, "Input",ExpressionUUID->"051413d2-522d-45bf-ab29-725d8ef93f60"],
Cell[41747, 901, 134, 3, 52, "Output",ExpressionUUID->"443383bb-cbb8-4f70-a0b9-40c3855b3fa5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[41918, 909, 287, 7, 46, "Input",ExpressionUUID->"e5a3e858-6171-4bd7-823e-aa1f057b02f0"],
Cell[42208, 918, 134, 3, 52, "Output",ExpressionUUID->"401065ce-a291-4c4c-95fa-ccb5c0f226e0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[42379, 926, 261, 6, 46, "Input",ExpressionUUID->"dba74857-2669-4913-afbd-55b1d6a4e9b9"],
Cell[42643, 934, 131, 3, 52, "Output",ExpressionUUID->"dcb6cc4a-8807-462f-abb0-260a91f646d1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[42811, 942, 330, 9, 46, "Input",ExpressionUUID->"ad6412cb-96b3-45de-be57-dd1aaf3200e7"],
Cell[43144, 953, 2574, 37, 239, "Output",ExpressionUUID->"a69415d9-45a5-47e1-99b5-37a573e08742"]
}, Open  ]],
Cell[CellGroupData[{
Cell[45755, 995, 389, 10, 46, "Input",ExpressionUUID->"22e9f135-566a-4732-87e4-14b8820b0422"],
Cell[46147, 1007, 2091, 30, 208, "Output",ExpressionUUID->"0260bc82-73f2-4872-81de-613d288078d8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[48275, 1042, 461, 13, 46, "Input",ExpressionUUID->"82368fe3-6ecf-4426-a14a-c941c314f3d5"],
Cell[48739, 1057, 5830, 165, 301, "Output",ExpressionUUID->"22afd9e0-7d4e-4ed4-8e21-c69701edcb43"]
}, Open  ]],
Cell[CellGroupData[{
Cell[54606, 1227, 367, 7, 46, "Input",ExpressionUUID->"8adcc97e-c59c-4173-8c23-5b3eeb749bb5"],
Cell[54976, 1236, 641, 12, 84, "Output",ExpressionUUID->"6200ff54-ed3d-472e-90ee-b2112aacd29b"]
}, Open  ]],
Cell[55632, 1251, 605, 15, 78, "Input",ExpressionUUID->"efee8388-c808-4fce-a7ab-33d77f30d111"],
Cell[CellGroupData[{
Cell[56262, 1270, 1397, 29, 109, "Input",ExpressionUUID->"bbf88d1f-23c5-4283-803e-3714e66df86e"],
Cell[57662, 1301, 7986, 206, 642, "Output",ExpressionUUID->"08085abc-140d-4443-9b4d-7eb8f352bba4"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[65697, 1513, 168, 3, 101, "Section",ExpressionUUID->"6b88ca9f-a9cf-431b-94f1-b1028d99d4b9"],
Cell[CellGroupData[{
Cell[65890, 1520, 401, 9, 46, "Input",ExpressionUUID->"4d51f10a-29a9-4e23-9ed6-e165b7ff1b32"],
Cell[66294, 1531, 8794, 181, 92, "Output",ExpressionUUID->"2bc6cab7-9e2c-4afe-a800-d7e1eb931f67"]
}, Open  ]],
Cell[CellGroupData[{
Cell[75125, 1717, 379, 7, 46, "Input",ExpressionUUID->"1adabb5d-eb61-45e0-bbc9-5c09e71de3ae"],
Cell[75507, 1726, 6864, 143, 92, "Output",ExpressionUUID->"68f662fd-27f5-4bfe-8a11-668a481fa314"]
}, Open  ]],
Cell[CellGroupData[{
Cell[82408, 1874, 206, 4, 46, "Input",ExpressionUUID->"d2595f16-9fab-4370-b06a-c3f7028297ef"],
Cell[82617, 1880, 692, 13, 84, "Output",ExpressionUUID->"3e99e95a-b1e6-4168-b382-611b25718f28"]
}, Open  ]],
Cell[CellGroupData[{
Cell[83346, 1898, 205, 4, 46, "Input",ExpressionUUID->"b7c804a5-a126-4112-aae2-2a91c1e46031"],
Cell[83554, 1904, 137, 3, 52, "Output",ExpressionUUID->"760bc4b3-26c1-4cb2-8163-6efb8eb9fde1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[83728, 1912, 214, 4, 46, "Input",ExpressionUUID->"5bfce924-f878-48ac-8c6f-fc2c82776354"],
Cell[83945, 1918, 8901, 235, 488, "Output",ExpressionUUID->"cba5b7fc-5bf5-45fe-a96f-93999272bf99"]
}, Open  ]],
Cell[CellGroupData[{
Cell[92883, 2158, 421, 10, 46, "Input",ExpressionUUID->"cb70e1ac-01a0-4415-8fcb-3a1c976e1f34"],
Cell[93307, 2170, 50344, 904, 329, "Output",ExpressionUUID->"9dcb68a7-7e8c-442c-8e41-f1465e470aa7"],
Cell[143654, 3076, 787, 13, 41, "Message",ExpressionUUID->"e2847fae-a2f0-4598-82a0-c44a26231819"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[144490, 3095, 172, 3, 101, "Section",ExpressionUUID->"34032aeb-56e0-4b5e-a3ec-ea32bac2418f"],
Cell[CellGroupData[{
Cell[144687, 3102, 357, 9, 46, "Input",ExpressionUUID->"84fa9f43-40ee-49bd-ae2d-8256cbf2ba39"],
Cell[145047, 3113, 8806, 181, 92, "Output",ExpressionUUID->"aeaebd3b-1d37-4b2f-8acd-4b3ea95d3dc9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[153890, 3299, 274, 6, 46, "Input",ExpressionUUID->"0ebfe6ac-8188-4968-b182-991a7958cdeb"],
Cell[154167, 3307, 6878, 143, 92, "Output",ExpressionUUID->"112cf213-1440-4679-9b36-08c31697540c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[161082, 3455, 419, 10, 46, "Input",ExpressionUUID->"1db248e9-7e58-487f-ad4d-7bdf0ab8980f"],
Cell[161504, 3467, 27557, 486, 446, "Output",ExpressionUUID->"0db840dd-b708-409b-889f-25e65024ea1c"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[189110, 3959, 225, 4, 101, "Section",ExpressionUUID->"4f064d8b-df77-4d69-b658-c98d83f25449"],
Cell[189338, 3965, 554, 14, 78, "Input",ExpressionUUID->"09bb0a27-2750-4033-864c-f7968e4f7f4e"],
Cell[CellGroupData[{
Cell[189917, 3983, 419, 10, 46, "Input",ExpressionUUID->"7d8812c8-d135-4a76-bfa9-79d026063ceb"],
Cell[190339, 3995, 30031, 526, 446, "Output",ExpressionUUID->"bbe8ca10-90dd-4e44-be57-e77bcb8fc2cf"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[220419, 4527, 165, 3, 101, "Section",ExpressionUUID->"476a6b3b-17eb-4336-9a8c-d8d35c9dfb7b"],
Cell[220587, 4532, 503, 12, 46, "Input",ExpressionUUID->"e3803e80-7c9e-4554-a111-c43e4d16219f"],
Cell[CellGroupData[{
Cell[221115, 4548, 230, 5, 46, "Input",ExpressionUUID->"024bfc2c-7169-4054-9390-36d8a73f1b92"],
Cell[221348, 4555, 54141, 991, 92, "Output",ExpressionUUID->"c4727091-ee83-4108-b3ed-88de21e4d831"]
}, Open  ]],
Cell[CellGroupData[{
Cell[275526, 5551, 409, 9, 46, "Input",ExpressionUUID->"c7f39759-89ae-4dae-9b83-a15e710d19a7"],
Cell[275938, 5562, 8789, 180, 92, "Output",ExpressionUUID->"00b1e35b-401e-4188-bf2d-9e0dcef8376d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[284764, 5747, 278, 6, 46, "Input",ExpressionUUID->"b92ac210-2c1c-41f4-873e-e349476c61df"],
Cell[285045, 5755, 6864, 143, 92, "Output",ExpressionUUID->"eb077b07-c6ae-4883-91ac-2c24e0bace35"]
}, Open  ]],
Cell[CellGroupData[{
Cell[291946, 5903, 205, 4, 46, "Input",ExpressionUUID->"67ef0db3-316a-4628-b5c1-8c6754caa27c"],
Cell[292154, 5909, 137, 3, 52, "Output",ExpressionUUID->"476f9d31-2a0c-4994-be93-c79ca61bc467"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

